{"version":3,"file":"survey-angular-ui.umd.js","sources":["../../node_modules/tslib/tslib.es6.mjs","../../src/embedded-view-content.component.ts","../../src/base-angular.ts","../../src/component-factory.ts","../../src/utils/dynamic.directive.ts","../../src/components/action-bar/action.component.ts","../../src/components/action-bar/action.component.html","../../src/components/action-bar/action-bar.component.ts","../../src/components/action-bar/action-bar.component.html","../../src/utils/ng-show.directive.ts","../../src/components/popup/popup-container.component.ts","../../src/components/popup/popup-container.component.html","../../src/components/popup/popup.service.ts","../../src/components/popup/modal-container.component.ts","../../src/svgbundle.component.ts","../../src/components/element-title/dynamic-head.component.ts","../../src/components/element-title/dynamic-head.component.html","../../src/components/svg-icon/svg-icon.component.ts","../../src/survey-string.component.ts","../../src/components/element-title/title-actions.component.ts","../../src/components/element-title/title-actions.component.html","../../src/components/element-title/element-title.component.ts","../../src/components/element-title/element-title.component.html","../../src/components/survey-header/survey-header.component.ts","../../src/components/survey-header/survey-header.component.html","../../src/errors.component.ts","../../src/errors.component.html","../../src/element.component.ts","../../src/element.component.html","../../src/row.component.ts","../../src/row.component.html","../../src/page.component.ts","../../src/page.component.html","../../src/components/brand-info/brand-info.component.ts","../../src/components/brand-info/brand-info.component.html","../../src/components/notifier/notifier.component.ts","../../src/components/notifier/notifier.component.html","../../src/utils/safe-html.pipe.ts","../../src/survey-content.component.ts","../../src/survey-content.component.html","../../src/survey.component.ts","../../src/popup.survey.component.ts","../../src/popup.survey.component.html","../../src/question.ts","../../src/components/element-header/element-header.component.ts","../../src/components/element-header/element-header.component.html","../../src/comment.component.ts","../../src/comment.component.html","../../src/question.component.ts","../../src/question.component.html","../../src/string-viewer.component.ts","../../src/string-viewer.component.html","../../src/components/text-area/text-area.component.ts","../../src/components/text-area/text-area.component.html","../../src/components/popup/popup-pointer.component.ts","../../src/components/popup/popup-pointer.component.html","../../src/components/popup/popup.component.ts","../../src/components/skeleton.component.ts","../../src/components/skeleton.component.html","../../src/components/dropdown/dropdown.component.ts","../../src/components/dropdown/dropdown.component.html","../../src/components/tagbox/tagbox-filter.component.ts","../../src/components/tagbox/tagbox-filter.component.html","../../src/components/tagbox/tagbox-item.component.ts","../../src/components/tagbox/tagbox-item.component.html","../../src/components/tagbox/tagbox.component.ts","../../src/components/tagbox/tagbox.component.html","../../src/components/renderAs/dropdown-select/dropdown-option-item.component.ts","../../src/comment-other.component.ts","../../src/comment-other.component.html","../../src/components/renderAs/dropdown-select/dropdown-select.component.ts","../../src/components/renderAs/dropdown-select/dropdown-select.component.html","../../src/utils/safe-url.pipe.ts","../../src/components/survey-header/logo-image.component.ts","../../src/components/survey-header/logo-image.component.html","../../src/components/character-counter/character-counter.component.ts","../../src/components/character-counter/character-counter.component.html","../../src/questions/text.component.ts","../../src/questions/text.component.html","../../src/questions/html.component.ts","../../src/questions/html.component.html","../../src/questions/selectbase.component.ts","../../src/questions/selectbase.component.html","../../src/questions/radiogroup.component.ts","../../src/questions/radiogroup-item.component.ts","../../src/questions/radiogroup-item.component.html","../../src/questions/checkbox.component.ts","../../src/questions/checkbox-item.component.ts","../../src/questions/checkbox-item.component.html","../../src/questions/dropdown.component.ts","../../src/questions/dropdown.component.html","../../src/questions/tagbox.component.ts","../../src/questions/tagbox.component.html","../../src/questions/rating.component.ts","../../src/questions/rating.component.html","../../src/questions/boolean.component.ts","../../src/questions/boolean.component.html","../../src/questions/imagepicker-item.component.ts","../../src/questions/imagepicker-item.component.html","../../src/questions/imagepicker.component.ts","../../src/questions/imagepicker.component.html","../../src/questions/button-group/button-group-item.component.ts","../../src/questions/button-group/button-group-item.component.html","../../src/questions/button-group/button-group.component.ts","../../src/questions/button-group/button-group.component.html","../../src/components-container.component.ts","../../src/components-container.component.html","../../src/utils/ng-key2click.directive.ts","../../src/components/action-bar/action-bar-item.component.ts","../../src/components/action-bar/action-bar-item.component.html","../../src/components/action-bar/action-bar-item-dropdown.component.ts","../../src/components/action-bar/action-bar-item-dropdown.component.html","../../src/questions/selectbase-item.ts","../../src/questions/selectbase-item.html","../../src/components/skeleton/skeleton.component.ts","../../src/components/skeleton/skeleton.component.html","../../src/components/timer-panel/timer-panel.component.ts","../../src/components/timer-panel/timer-panel.component.html","../../src/components/list/list-item.component.ts","../../src/components/list/list-item.component.html","../../src/components/list/list.component.ts","../../src/components/list/list.component.html","../../src/components/list/list-item-content.component.ts","../../src/components/list/list-item-content.component.html","../../src/components/list/list-item-group.component.ts","../../src/components/list/list-item-group.component.html","../../src/components/rating/rating-item.component.ts","../../src/components/rating/rating-item.component.html","../../src/components/rating/rating-item-star.component.ts","../../src/components/rating/rating-item-star.component.html","../../src/components/rating/rating-item-smiley.component.ts","../../src/components/rating/rating-item-smiley.component.html","../../src/components/renderAs/rating-dropdown/rating-dropdown-item.component.ts","../../src/components/renderAs/rating-dropdown/rating-dropdown-item.component.html","../../src/components/renderAs/rating-dropdown/rating-dropdown.component.ts","../../src/components/renderAs/rating-dropdown/rating-dropdown.component.html","../../src/components/renderAs/boolean-checkbox/boolean-checkbox.component.ts","../../src/components/renderAs/boolean-checkbox/boolean-checkbox.component.html","../../src/components/renderAs/boolean-radio/boolean-radio-item.component.ts","../../src/components/renderAs/boolean-radio/boolean-radio-item.component.html","../../src/components/renderAs/boolean-radio/boolean-radio.component.ts","../../src/components/renderAs/boolean-radio/boolean-radio.component.html","../../src/components/progress/default/progress.component.ts","../../src/components/progress/default/progress.component.html","../../src/components/progress/buttons/progress.component.ts","../../src/components/progress/buttons/progress.component.html","../../src/components/progress/toc/progress.component.ts","../../src/components/progress/toc/progress.component.html","../../src/panel.component.ts","../../src/panel.component.html","../../src/components/survey-actions/survey-nav-btn.component.ts","../../src/components/survey-actions/survey-nav-btn.component.html","../../src/components/file/file-item.component.ts","../../src/components/file/file-item.component.html","../../src/components/file/file-page.component.ts","../../src/components/file/file-page.component.html","../../src/components/file/file-preview.component.ts","../../src/components/file/file-preview.component.html","../../src/questions/matrix.component.ts","../../src/questions/matrix.component.html","../../src/components/file/choose-file.component.ts","../../src/components/file/choose-file.component.html","../../src/components/loading-indicator/loading-indicator.component.ts","../../src/components/loading-indicator/loading-indicator.component.html","../../src/questions/file.component.ts","../../src/questions/file.component.html","../../src/questions/comment.component.ts","../../src/questions/comment.component.html","../../src/questions/signature.component.ts","../../src/questions/signature.component.html","../../src/questions/multipletextitem.component.ts","../../src/questions/mutlipletextitem.component.html","../../src/questions/multipletextrow.component.ts","../../src/questions/multipletextrow.component.html","../../src/questions/multipletext.component.ts","../../src/questions/multipletext.component.html","../../src/questions/ranking.component.ts","../../src/questions/ranking.component.html","../../src/questions/ranking-item.component.ts","../../src/questions/ranking-item.component.html","../../src/questions/ranking-item-content.component.ts","../../src/questions/ranking-item-content.component.html","../../src/string-editor.component.ts","../../src/string-editor.component.html","../../src/components/paneldynamic-actions/paneldynamic-add-btn.component.ts","../../src/components/paneldynamic-actions/paneldynamic-add-btn.component.html","../../src/components/paneldynamic-actions/paneldynamic-next-btn.component.ts","../../src/components/paneldynamic-actions/paneldynamic-next-btn.component.html","../../src/components/paneldynamic-actions/paneldynamic-prev-btn.component.ts","../../src/components/paneldynamic-actions/paneldynamic-prev-btn.component.html","../../src/components/paneldynamic-actions/paneldynamic-remove-btn.component.ts","../../src/components/paneldynamic-actions/paneldynamic-remove-btn.component.html","../../src/components/paneldynamic-actions/paneldynamic-progress-text.component.ts","../../src/components/paneldynamic-actions/paneldynamic-progress-text.component.html","../../src/questions/paneldynamic.component.ts","../../src/questions/paneldynamic.component.html","../../src/template-renderer.component.ts","../../src/template-renderer.component.html","../../src/questions/customwidget.component.ts","../../src/questions/customwidget.component.html","../../src/questions/matrixcell.component.ts","../../src/questions/matrixcell.component.html","../../src/components/matrix-actions/drag-drop-icon/drag-drop-icon.ts","../../src/components/matrix-actions/drag-drop-icon/drag-drop-icon.component.html","../../src/questions/matrixdropdowncell.component.ts","../../src/questions/matrixdropdowncell.component.html","../../src/questions/matrixrequiredheader.component.ts","../../src/questions/matrix-row.component.ts","../../src/questions/matrix-row.component.html","../../src/questions/matrixtable.component.ts","../../src/questions/matrixtable.component.html","../../src/questions/matrixdropdown.component.ts","../../src/questions/matrixdropdown.component.html","../../src/questions/matrixdynamic.component.ts","../../src/questions/matrixdynamic.component.html","../../src/components/matrix-actions/remove-button/remove-button.component.ts","../../src/components/matrix-actions/remove-button/remove-button.component.html","../../src/components/matrix-actions/detail-button/detail-button.component.ts","../../src/components/matrix-actions/detail-button/detail-button.component.html","../../src/questions/expression.component.ts","../../src/questions/image.component.ts","../../src/questions/image.component.html","../../src/components/question-error/question-error.component.ts","../../src/components/question-error/question-error.component.html","../../src/questions/custom.component.ts","../../src/questions/composite.component.ts","../../src/components/header/header-cell.component.ts","../../src/components/header/header-cell.component.html","../../src/components/header/header-mobile.component.ts","../../src/components/header/header-mobile.component.html","../../src/components/header/header.component.ts","../../src/components/header/header.component.html","../../src/angular-ui.module.ts","../../src/survey-angular-ui.ts"],"sourcesContent":["/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n","import { Component, EmbeddedViewRef, OnInit, TemplateRef, ViewChild, ViewContainerRef } from \"@angular/core\";\n\n@Component({\n  template: \"\",\n})\n\nexport class EmbeddedViewContentComponent implements OnInit {\n  @ViewChild(\"template\", { read: TemplateRef, static: true }) templateRef!: TemplateRef<HTMLElement>\n  protected embeddedView?: EmbeddedViewRef<HTMLElement>;\n  constructor(protected viewContainerRef?: ViewContainerRef) {}\n\n  ngOnInit(): void {\n    if(!!this.templateRef) {\n      this.embeddedView = this.viewContainerRef?.createEmbeddedView(this.templateRef);\n    }\n  }\n}","import { ChangeDetectorRef, Component, DoCheck, OnChanges, OnDestroy, SimpleChange, ViewContainerRef } from \"@angular/core\";\nimport { ArrayChanges, Base, ISurvey, SurveyModel } from \"survey-core\";\nimport { EmbeddedViewContentComponent } from \"./embedded-view-content.component\";\n\n@Component({\n  template: \"\"\n})\nexport abstract class BaseAngular<T extends Base = Base> extends EmbeddedViewContentComponent implements DoCheck, OnDestroy {\n  constructor(protected changeDetectorRef: ChangeDetectorRef, viewContainerRef?: ViewContainerRef) {\n    super(viewContainerRef);\n  }\n  protected get surveyModel(): ISurvey {\n    return this.getModel().getSurvey();\n  }\n  protected abstract getModel(): T;\n  protected previousModel?: T;\n  private isModelSubsribed: boolean = false;\n\n  public ngDoCheck(): void {\n    if (this.previousModel !== this.getModel()) {\n      this.unMakeBaseElementAngular(this.previousModel);\n      this.makeBaseElementAngular(this.getModel());\n      this.onModelChanged();\n      this.previousModel = this.getModel();\n    }\n    this.setIsRendering(true);\n  }\n\n  protected onModelChanged() { }\n\n  private setIsRendering(val: boolean) {\n    const model = this.getModel();\n    if (!!model) {\n      (<any>model).isRendering = val;\n    }\n  }\n  private getIsRendering() {\n    const model = this.getModel();\n    return !!model && !!(<any>model).isRendering;\n  }\n  private isDestroyed: boolean = false;\n  ngOnDestroy() {\n    this.isDestroyed = true;\n    this.unMakeBaseElementAngular(this.getModel());\n    this.previousModel = undefined;\n  }\n\n  private makeBaseElementAngular(stateElement: T) {\n    if (!!stateElement && !(<any>stateElement).__ngImplemented) {\n      this.isModelSubsribed = true;\n      (<any>stateElement).__ngImplemented = true;\n      stateElement.iteratePropertiesHash((hash, key) => {\n        var val: any = hash[key];\n        if (Array.isArray(val)) {\n          var val: any = val;\n          val[\"onArrayChanged\"] = (arrayChanges: ArrayChanges) => {\n            this.update(key);\n          };\n        }\n      });\n      stateElement.setPropertyValueCoreHandler = (\n        hash: any,\n        key: string,\n        val: any\n      ) => {\n        if (hash[key] !== val) {\n          hash[key] = val;\n          this.update(key);\n        }\n      };\n      stateElement.enableOnElementRerenderedEvent();\n    }\n  }\n  private unMakeBaseElementAngular(stateElement?: Base) {\n    if (!!stateElement && this.isModelSubsribed) {\n      this.isModelSubsribed = false;\n      (<any>stateElement).__ngImplemented = false;\n      stateElement.setPropertyValueCoreHandler = <any>undefined;\n      stateElement.iteratePropertiesHash((hash, key) => {\n        var val: any = hash[key];\n        if (Array.isArray(val)) {\n          var val: any = val;\n          val[\"onArrayChanged\"] = () => { };\n        }\n      });\n      stateElement.disableOnElementRerenderedEvent();\n    }\n  }\n\n  protected update(key?: string): void {\n    if (this.getIsRendering()) return;\n    this.beforeUpdate();\n    if (key && this.getPropertiesToUpdateSync().indexOf(key) > -1) {\n      this.detectChanges();\n      this.afterUpdate(true);\n    } else {\n      queueMicrotask(() => {\n        if (!this.isDestroyed) {\n          this.setIsRendering(true);\n          this.detectChanges();\n        }\n        this.afterUpdate();\n      });\n    }\n  }\n  private getChangeDetectorRef() {\n    return this.embeddedView ? this.embeddedView : this.changeDetectorRef;\n  }\n  protected getPropertiesToUpdateSync(): Array<string> {\n    return [];\n  }\n  protected detectChanges() {\n    this.getChangeDetectorRef().detectChanges();\n  }\n\n  protected getShouldReattachChangeDetector(): boolean {\n    return true;\n  }\n\n  protected beforeUpdate(): void {\n    this.setIsRendering(true);\n  }\n  protected afterUpdate(isSync: boolean = false): void {\n    this.setIsRendering(false);\n    const model = this.getModel();\n    if(model && !this.isDestroyed) {\n      model.afterRerender();\n    }\n  }\n  ngAfterViewChecked(): void {\n    this.setIsRendering(false);\n  }\n}","import { Component, ComponentFactoryResolver, ComponentRef, Type, ViewContainerRef } from \"@angular/core\";\n\nexport class AngularComponentFactory {\n  public static Instance: AngularComponentFactory = new AngularComponentFactory();\n  private creatorHash: { [index: string]: Type<Component> } = {};\n\n  public registerComponent(\n    typeName: string,\n    componentType: Type<any>\n  ): void {\n    this.creatorHash[typeName] = componentType;\n  }\n  public getAllTypes(): Array<string> {\n    var result = new Array<string>();\n    for (var key in this.creatorHash) {\n      result.push(key);\n    }\n    return result.sort();\n  }\n  public isComponentRegistered(elementType: string): boolean {\n    return !!this.creatorHash[elementType];\n  }\n  public create(containerRef: ViewContainerRef, elementType: string, resolver: ComponentFactoryResolver): ComponentRef<Component> {\n    var componentType = this.creatorHash[elementType];\n    if (!componentType) return (null as any);\n    return containerRef.createComponent(resolver.resolveComponentFactory(componentType));\n  }\n}\n","import { ComponentFactoryResolver, Directive, ElementRef, Input, OnChanges, SimpleChanges, TemplateRef, ViewContainerRef } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\ninterface IDynamicComponent {\n  name: string;\n  data?: any;\n  default?: string;\n}\n\n@Directive({\n  selector: \"[component]\"\n})\n\nexport class DynamicComponentDirective implements OnChanges {\n  constructor(private containerRef: ViewContainerRef, private templateRef: TemplateRef<unknown>, private resolver: ComponentFactoryResolver) { }\n  @Input() component!: IDynamicComponent;\n  private componentInstance: any;\n  ngOnChanges(changes: SimpleChanges): void {\n    const componentChanges = changes[\"component\"];\n    if(componentChanges.currentValue.name !== componentChanges.previousValue?.name ||\n      (componentChanges.currentValue.name === undefined && componentChanges.previousValue === undefined && !this.componentInstance)) {\n      this.createComponent();\n    } else {\n      this.updateComponentData();\n    }\n  }\n  createComponent(): void {\n    this.containerRef.clear();\n    if(AngularComponentFactory.Instance.isComponentRegistered(this.component.name)) {\n      this.componentInstance = AngularComponentFactory.Instance.create(this.containerRef, this.component.name, this.resolver).instance;\n    } else if (this.component.default) {\n      this.componentInstance = AngularComponentFactory.Instance.create(this.containerRef, this.component.default, this.resolver).instance;\n    }\n    if(!this.componentInstance) {\n      throw new Error(`Can't create component with name: ${this.component.name} and default: ${this.component.default}`);\n    } else {\n      this.componentInstance.contentTempl = this.templateRef;\n    }\n    this.updateComponentData();\n  }\n  updateComponentData(): void {\n    const data = this.component.data;\n    Object.keys(data).forEach((key) => {\n      this.componentInstance[key] = data[key];\n    });\n  }\n}","import { Component, Input, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-action\",\n  templateUrl: \"./action.component.html\",\n  styles: [\":host { display: none; }\"],\n})\nexport class ActionComponent extends BaseAngular {\n  @Input() model: any;\n  @ViewChild(\"actionContent\", { read: ViewContainerRef, static: true }) actionContent!: ViewContainerRef;\n  getModel() {\n    return this.model;\n  }\n  protected override getPropertiesToUpdateSync(): string[] {\n    return [\"mode\"];\n  }\n  public get id() {\n    return this.model.id || '';\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-action\", ActionComponent);","<ng-template #template>\n  <div [class]=\"model.getActionRootCss()\" [id]=\"id\">\n    <div class=\"sv-action__content\">\n      <ng-container *ngIf=\"model.needSeparator\">\n        <div class=\"sv-action-bar-separator\"></div>\n      </ng-container>\n      <ng-template [component]=\"{ name: model.component, data: { model }, default: 'sv-action-bar-item'}\"></ng-template>\n    </div>\n  </div>\n</ng-template>","import { Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { ActionContainer } from \"survey-core\";\n\n@Component({\n  selector: \"sv-action-bar, sv-ng-action-bar\",\n  templateUrl: \"./action-bar.component.html\",\n  styles: [\":host { display: none }\"]\n})\nexport class ActionBarComponent extends BaseAngular<ActionContainer> {\n  @Input() model!: ActionContainer;\n  @Input() handleClick: any;\n  @ViewChild(\"container\") container!: ElementRef<HTMLDivElement>;\n  getModel(): ActionContainer {\n    return this.model;\n  }\n\n  get allowOnClick(): boolean {\n    return this.handleClick !== undefined ? this.handleClick : true;\n  }\n\n  protected override onModelChanged() {\n    super.onModelChanged();\n    this.previousModel?.resetResponsivityManager();\n    if (!!this.model.hasActions && !!this.container && !!this.container.nativeElement) {\n      this.model.initResponsivityManager(this.container.nativeElement);\n    }\n  }\n\n  onClick(event: Event): void {\n    if (this.allowOnClick) {\n      event.stopPropagation();\n    }\n  }\n  ngAfterViewInit() {\n    if (!!this.model.hasActions) {\n      this.model.initResponsivityManager(this.container.nativeElement);\n    }\n  }\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.model.resetResponsivityManager();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-action-bar\", ActionBarComponent);","<ng-template #template>\n  <div *ngIf=\"model.hasActions\" [class]=\"model.getRootCss()\" (click)=\"onClick($event)\" #container>\n    <ng-container *ngFor=\"let action of model.renderedActions\">\n      <sv-ng-action [model]=\"action\"></sv-ng-action>\n    </ng-container>\n  </div>\n</ng-template>","import { Directive, ElementRef, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\n@Directive({\n  selector: \"[visible]\"\n})\nexport class VisibleDirective implements OnChanges {\n  constructor(private el: ElementRef) { }\n  @Input() visible?: boolean;\n  ngOnChanges(changes: SimpleChanges): void {\n    changes[\"visible\"].currentValue ? this.show() : this.hide();\n  }\n  private hide() {\n    this.el.nativeElement.style.display = \"none\";\n  }\n  private show() {\n    this.el.nativeElement.style.display = \"\";\n  }\n}","import { ChangeDetectorRef, Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { PopupBaseViewModel, PopupModalViewModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-popup-container, '[sv-ng-popup-container]'\",\n  templateUrl: \"./popup-container.component.html\"\n  })\n\nexport class PopupBaseContainerComponent<T extends PopupBaseViewModel = PopupBaseViewModel> extends BaseAngular<T> {\n  @Input() model!: T;\n\n  constructor(changeDetectorRef: ChangeDetectorRef) {\n    super(changeDetectorRef);\n    this.changeDetectorRef.detach();\n  }\n  protected getModel(): T {\n    return this.model;\n  }\n\n  get applyButtonText(): string | null {\n    const popupModalModel = this.model as any as PopupModalViewModel;\n    if(!popupModalModel) return null;\n\n    return popupModalModel.applyButtonText;\n  }\n\n  apply(): void {\n    const popupModalModel = this.model as any as PopupModalViewModel;\n    if(!popupModalModel) return;\n\n    popupModalModel.apply();\n  }\n\n  protected override getPropertiesToUpdateSync(): string[] {\n    return [\"height\"];\n  }\n\n  protected override getShouldReattachChangeDetector(): boolean {\n    return false;\n  }\n\n  protected override onModelChanged(): void {\n    this.changeDetectorRef.detectChanges();\n  }\n\n  protected override afterUpdate(isSync: boolean = false): void {\n    super.afterUpdate(isSync);\n    if(!isSync) {\n      if (!this.model.isPositionSet && this.model.isVisible) {\n        this.model.updateOnShowing();\n      }\n    }\n  }\n  public clickInside(event: any) {\n    event.stopPropagation();\n  }\n}","<div class=\"sv-popup\" tabindex=\"-1\" [class]=\"model.styleClass\" [visible]=\"model.isVisible\" (click)=\"model.clickOutside($event)\" (keydown)=\"model.onKeyDown($event)\">\n    <div class=\"sv-popup__container\" [style]=\"{ left: model.left, top: model.top, height: model.height, minWidth: model.minWidth, width: model.width }\" (click)=\"clickInside($event)\">\n        <ng-container *ngIf=\"model.showHeader\">\n            <ng-template [component]=\"{ name: model.popupHeaderTemplate, data: { model: model } }\"></ng-template>\n        </ng-container>\n        <div class=\"sv-popup__body-content\">\n            <div *ngIf=\"model.title\" class=\"sv-popup__body-header\">{{ model.title }}</div>\n            <div class=\"sv-popup__scrolling-content\">\n                <div class=\"sv-popup__content\">\n                    <ng-template [component]=\"{ name: model.contentComponentName, data: model.contentComponentData }\"></ng-template>\n                </div>\n            </div>\n            <div *ngIf=\"model.showFooter\" class=\"sv-popup__body-footer\">\n                <sv-ng-action-bar [model]=\"model.footerToolbar\"></sv-ng-action-bar>\n            </div>\n        </div>\n    </div>\n</div>","import { ApplicationRef, ComponentFactoryResolver, Injectable, Injector } from \"@angular/core\";\nimport { ComponentPortal, DomPortalOutlet } from \"@angular/cdk/portal\";\nimport { PopupBaseViewModel } from \"survey-core\";\nimport { PopupBaseContainerComponent } from \"./popup-container.component\";\n\n@Injectable()\nexport class PopupService {\n  constructor(private injector: Injector,\n              private applicationRef: ApplicationRef,\n              private componentFactoryResolver: ComponentFactoryResolver) {}\n\n  createComponent(popupViewModel: PopupBaseViewModel): DomPortalOutlet {\n    const portalHost = new DomPortalOutlet(popupViewModel.container, this.componentFactoryResolver, this.applicationRef, this.injector);\n    const portal = new ComponentPortal(PopupBaseContainerComponent);\n    const componentRef = portalHost.attach(portal);\n    popupViewModel.setComponentElement(<HTMLElement>popupViewModel.container.children[0]);\n    componentRef.instance.model = popupViewModel;\n    componentRef.changeDetectorRef.detectChanges();\n    return portalHost;\n  }\n}","import { DomPortalOutlet } from \"@angular/cdk/portal\";\nimport { Component } from \"@angular/core\";\nimport { createDialogOptions, IDialogOptions, PopupBaseViewModel, createPopupModalViewModel, settings } from \"survey-core\";\nimport { PopupService } from \"./popup.service\";\n\n@Component({\n  selector: \"sv-ng-modal-container\",\n  template: \"\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\n\nexport class ModalComponent {\n\n  public model!: PopupBaseViewModel;\n  private portalHost!: DomPortalOutlet;\n  private functionDefined: boolean = false;\n\n  constructor(private popupService: PopupService) {\n  }\n  showDialog(dialogOptions: IDialogOptions, rootElement?: HTMLElement): PopupBaseViewModel {\n    const popupViewModel = this.model = createPopupModalViewModel(dialogOptions, rootElement);\n    const onVisibilityChangedCallback = (_: PopupBaseViewModel, options: { isVisible: boolean }) => {\n      if(!options.isVisible) {\n        this.portalHost.detach();\n        this.model.dispose();\n      }\n    };\n    popupViewModel.onVisibilityChanged.add(onVisibilityChangedCallback);\n    this.portalHost = this.popupService.createComponent(this.model);\n    this.model.model.isVisible = true;\n    return this.model;\n  }\n  ngOnInit(): void {\n    if (!!settings.showModal) return;\n    this.functionDefined = true;\n    settings.showModal = (\n      componentName: string,\n      data: any,\n      onApply: () => boolean,\n      onCancel?: () => void,\n      cssClass?: string,\n      title?: string,\n      displayMode: \"popup\" | \"overlay\" = \"popup\"\n    ): PopupBaseViewModel => {\n      const options = createDialogOptions(\n        componentName,\n        data,\n        onApply,\n        onCancel,\n        undefined,\n        undefined,\n        cssClass,\n        title,\n        displayMode\n      );\n      return this.showDialog(options);\n    };\n\n    settings.showDialog = (dialogOptions: IDialogOptions, rootElement?: HTMLElement) => {\n      return this.showDialog(dialogOptions, rootElement);\n    };\n  }\n  ngOnDestroy() {\n    this.portalHost?.detach();\n    this.model?.dispose();\n    if (this.functionDefined) {\n      settings.showModal = <any>undefined;\n      settings.showDialog = <any>undefined;\n    }\n  }\n}\n\n","import { SvgRegistry } from \"survey-core\";\nimport { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\n@Component({\n  selector: \"sv-svg-bundle\",\n  template: \"<svg id='sv-icon-holder-global-container' #svgContainer></svg>\",\n  styles: [\":host { display: none; }\"]\n})\nexport class SvgBundleComponent implements OnInit {\n  @ViewChild(\"svgContainer\", { static: true }) svgContainer!: ElementRef<SVGElement>;\n  ngOnInit(): void {\n    this.svgContainer.nativeElement.innerHTML = SvgRegistry.iconsRenderedHtml();\n  }\n}","import { Component, Input } from \"@angular/core\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\nimport { SurveyElement } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-dynamic-head\",\n  templateUrl: \"./dynamic-head.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class DynamicHeadComponent extends EmbeddedViewContentComponent {\n  @Input() tagName!: string;\n  @Input() element!: SurveyElement;\n  get ariaLabel(): string | null {\n    return this.element.titleAriaLabel;\n  }\n}","<ng-template #template>\n  <ng-container [ngSwitch]=\"tagName\">\n    <h1 *ngSwitchCase=\"'h1'\" [class]=\"element.cssTitle\" [attr.id]=\"element.ariaTitleId\" [attr.tabindex]=\"element.titleTabIndex\" [attr.aria-expanded]=\"element.titleAriaExpanded\" [attr.role]=\"element.titleAriaRole\" [attr.aria-label]=\"ariaLabel\"><ng-container *ngTemplateOutlet=\"titleContent\"></ng-container></h1>\n    <h2 *ngSwitchCase=\"'h2'\"[class]=\"element.cssTitle\" [attr.id]=\"element.ariaTitleId\" [attr.tabindex]=\"element.titleTabIndex\" [attr.aria-expanded]=\"element.titleAriaExpanded\" [attr.role]=\"element.titleAriaRole\" [attr.aria-label]=\"ariaLabel\"><ng-container *ngTemplateOutlet=\"titleContent\"></ng-container></h2>\n    <h3 *ngSwitchCase=\"'h3'\"[class]=\"element.cssTitle\" [attr.id]=\"element.ariaTitleId\" [attr.tabindex]=\"element.titleTabIndex\" [attr.aria-expanded]=\"element.titleAriaExpanded\" [attr.role]=\"element.titleAriaRole\" [attr.aria-label]=\"ariaLabel\"><ng-container *ngTemplateOutlet=\"titleContent\"></ng-container></h3>\n    <h4 *ngSwitchCase=\"'h4'\"[class]=\"element.cssTitle\" [attr.id]=\"element.ariaTitleId\" [attr.tabindex]=\"element.titleTabIndex\" [attr.aria-expanded]=\"element.titleAriaExpanded\" [attr.role]=\"element.titleAriaRole\" [attr.aria-label]=\"ariaLabel\"><ng-container *ngTemplateOutlet=\"titleContent\"></ng-container></h4>\n    <h5 *ngSwitchCase=\"'h5'\"[class]=\"element.cssTitle\" [attr.id]=\"element.ariaTitleId\" [attr.tabindex]=\"element.titleTabIndex\" [attr.aria-expanded]=\"element.titleAriaExpanded\" [attr.role]=\"element.titleAriaRole\" [attr.aria-label]=\"ariaLabel\"><ng-container *ngTemplateOutlet=\"titleContent\"></ng-container></h5>\n    <h6 *ngSwitchCase=\"'h6'\"[class]=\"element.cssTitle\" [attr.id]=\"element.ariaTitleId\" [attr.tabindex]=\"element.titleTabIndex\" [attr.aria-expanded]=\"element.titleAriaExpanded\" [attr.role]=\"element.titleAriaRole\" [attr.aria-label]=\"ariaLabel\"><ng-container *ngTemplateOutlet=\"titleContent\"></ng-container></h6>\n  </ng-container>\n  <ng-template #titleContent>\n    <ng-content></ng-content>\n  </ng-template>\n</ng-template>","import { Component, HostBinding, Input, OnChanges, ViewContainerRef } from \"@angular/core\";\nimport * as Survey from \"survey-core\";\n\n@Component({\n  selector: \"'[sv-ng-svg-icon]'\",\n  template: \"\"\n})\nexport class SvgIconComponent implements OnChanges {\n  @Input() size?: number | string;\n  @Input() width?: number;\n  @Input() height?: number;\n  @Input() iconName!: string;\n  @Input() partCss?: string;\n  @Input() css?: string;\n  @Input() title?: string;\n  constructor(private viewContaierRef: ViewContainerRef) {\n  }\n  private createSvg() {\n    if(!!this.iconName) {\n      (Survey as any).createSvg(\n        this.size,\n        this.width,\n        this.height,\n        this.iconName,\n        this.viewContaierRef.element.nativeElement,\n        this.title\n      );\n    }\n  }\n  @HostBinding(\"class\") get rootClass(): string {\n    let className = \"sv-svg-icon\";\n    if(!this.css && !!this.partCss) {\n      className += \" \" + this.partCss;\n    } else if(!!this.css) {\n      className = this.css;\n    }\n    return className;\n  }\n  @HostBinding(\"[attr.role]\") get rootRole(): string {\n    return \"img\";\n  }\n  ngOnChanges(): void {\n    const el = this.viewContaierRef.element.nativeElement;\n    el.innerHTML = \"\";\n    el.appendChild(document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\"));\n    this.createSvg();\n  }\n}","import { Component, Input } from \"@angular/core\";\nimport { LocalizableString } from \"survey-core\";\n\n@Component(\n  {\n    selector: \"sv-ng-string, '[sv-ng-string]'\",\n    template: \"<ng-template [component]='{ name: model.renderAs, data: { model: model.renderAsData } }'></ng-template>\"\n  }\n)\nexport class SurveyStringComponent {\n  @Input() model!: LocalizableString;\n}","import { Component, Input } from \"@angular/core\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\n\n@Component({\n  selector: \"sv-ng-element-title-actions\",\n  templateUrl: \"./title-actions.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class ElementTitleActionsComponent extends EmbeddedViewContentComponent {\n  @Input() element: any;\n  get cssClasses() {\n    return (this.element.isPanel ? this.element.cssClasses.panel : this.element.cssClasses) || {};\n  }\n}","<ng-template #template>\n  <ng-container *ngIf=\"!element.hasTitleActions\">\n    <ng-container *ngTemplateOutlet=\"elementTitleContent\"></ng-container>\n  </ng-container>\n  <ng-container *ngIf=\"element.hasTitleActions\">\n    <div class=\"sv-title-actions\">\n      <span class=\"sv-title-actions__title\">\n        <ng-container *ngTemplateOutlet=\"elementTitleContent\"></ng-container>\n      </span>\n      <sv-ng-action-bar [model]=\"element.getTitleToolbar()\"></sv-ng-action-bar>\n    </div>\n  </ng-container>\n  <ng-template #elementTitleContent>\n    <sv-ng-string *ngIf=\"element.isTitleRenderedAsString\" [model]=\"element.locTitle\"></sv-ng-string>\n    <ng-container *ngIf=\"!element.isTitleRenderedAsString\">\n      <span\n        *ngIf=\"element.isRequireTextOnStart\"\n        [class]=\"element.cssRequiredText\"\n        [attr.aria-hidden]=\"true\"\n        >{{ element.requiredText }}</span>\n      <span\n        *ngIf=\"element.no\"\n        style=\"position: static\"\n        [class]=\"element.cssTitleNumber\"\n        [attr.aria-hidden]=\"true\"\n        >{{ element.no }}</span>\n      <span *ngIf=\"element.no\">&nbsp;</span>\n      <span\n        *ngIf=\"element.isRequireTextBeforeTitle\"\n        [class]=\"element.cssRequiredText\"\n        [attr.aria-hidden]=\"true\"\n        >{{ element.requiredText }}</span>\n      <span *ngIf=\"element.isRequireTextBeforeTitle\">&nbsp;</span>\n      <sv-ng-string [model]=\"element.locTitle\"></sv-ng-string>\n      <span *ngIf=\"element.isRequireTextAfterTitle\">&nbsp;</span>\n      <span\n        *ngIf=\" element.isRequireTextAfterTitle\"\n        [class]=\"element.cssRequiredText\"\n        [attr.aria-hidden]=\"true\"\n        >{{ element.requiredText }}</span> \n  </ng-container>\n  </ng-template>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\n\n@Component({\n  selector: \"sv-ng-element-title\",\n  templateUrl: \"./element-title.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class ElementTitleComponent extends EmbeddedViewContentComponent {\n  @Input() element: any;\n}","<ng-template #template>\n  <sv-ng-dynamic-head [tagName]=\"element.titleTagName\" [element]=\"element\" *ngIf=\"element.hasTitle\">\n    <svg *ngIf=\"!element.isExpanded && element.getCssTitleExpandableSvg()\" [iconName]=\"'icon-expand-16x16'\" [partCss]=\"element.getCssTitleExpandableSvg()\" [size]=\"'16'\" sv-ng-svg-icon></svg>\n    <svg *ngIf=\"element.isExpanded && element.getCssTitleExpandableSvg()\" [iconName]=\"'icon-collapse-16x16'\" [partCss]=\"element.getCssTitleExpandableSvg()\" [size]=\"'16'\" sv-ng-svg-icon></svg>\n    <sv-ng-element-title-actions [element]=\"element\"></sv-ng-element-title-actions>\n  </sv-ng-dynamic-head>\n</ng-template>","import { AfterViewInit, ChangeDetectorRef, Component, Input, OnDestroy, ViewContainerRef } from \"@angular/core\";\nimport { SurveyModel } from \"survey-core\";\n\n@Component({\n  selector: \"'[sv-ng-survey-header]'\",\n  templateUrl: \"survey-header.component.html\"\n})\nexport class SurveyHeaderComponent implements AfterViewInit, OnDestroy {\n  @Input() survey!: SurveyModel;\n  constructor(private viewContainerRef: ViewContainerRef, private changeDetectorRef: ChangeDetectorRef) {}\n  ngAfterViewInit(): void {\n    this.survey.afterRenderHeader(this.viewContainerRef.element.nativeElement);\n    this.survey.locLogo.onChanged = () => {\n      this.changeDetectorRef.detectChanges();\n    };\n  }\n  ngOnDestroy(): void {\n    this.survey.locLogo.onChanged = () => {};\n  }\n}","<ng-template *ngIf=\"survey.isLogoBefore\" [component]=\"{ name: survey.getElementWrapperComponentName(survey, 'logo-image'), data: { data: survey.getElementWrapperComponentData(survey, 'logo-image') } }\"></ng-template>\n<div\n  *ngIf=\"survey.renderedHasTitle\"\n  [class]=\"survey.css.headerText\"\n  [style.maxWidth]=\"survey.titleMaxWidth\"\n>\n  <sv-ng-element-title [element]=\"survey\"></sv-ng-element-title>\n  <div *ngIf=\"survey.renderedHasDescription\" [class]=\"survey.css.description\" [model]=\"survey.locDescription\" sv-ng-string></div>\n</div>\n\n<ng-template *ngIf=\"survey.isLogoAfter\" [component]=\"{ name: survey.getElementWrapperComponentName(survey, 'logo-image'), data: { data: survey.getElementWrapperComponentData(survey, 'logo-image') } }\"></ng-template>\n<div [class]=\"survey.css.headerClose\"></div>","import { Component, HostBinding, Input } from \"@angular/core\";\nimport { SurveyElement } from \"survey-core\";\n\n@Component({\n  templateUrl: \"./errors.component.html\",\n  selector: \"'[sv-ng-errors]'\"\n})\nexport class ErrorsComponent {\n  @Input() element!: SurveyElement | any;\n  @Input() location?: String;\n  constructor() {}\n  @HostBinding(\"attr.role\") get role (): string {\n    return \"alert\";\n  }\n  @HostBinding(\"id\") get id(): string {\n    return this.element.id + \"_errors\";\n  }\n  @HostBinding(\"attr.aria-live\") get ariaLive(): string {\n    return \"polite\";\n  }\n  @HostBinding(\"class\") get class(): string {\n    return this.element.cssError;\n  }\n}","<ng-container *ngFor=\"let error of element.errors;\">\n  <ng-template [component]=\"{ name: element.survey.questionErrorComponent, data: { element: element, cssClasses: element.cssClasses, error: error } }\"></ng-template>\n</ng-container>\n","import { AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild } from \"@angular/core\";\nimport { PanelModel, Question, SurveyModel } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\n\n@Component({\n  selector: \"sv-ng-element\",\n  templateUrl: \"./element.component.html\",\n  styleUrls: [\"./hide-host.scss\"]\n})\nexport class ElementComponent extends BaseAngular<PanelModel | Question> implements AfterViewInit {\n  @Input() model!: PanelModel | Question;\n  @ViewChild(\"container\", { static: false, read: ElementRef }) container!: ElementRef<HTMLDivElement>;\n  protected getModel(): PanelModel | Question {\n    return this.model;\n  }\n  protected get elementComponentName(): string {\n    return this.model.isPanel ? \"panel\": \"question\";\n  }\n\n  protected override onModelChanged(): void {\n    super.onModelChanged();\n    if(this.previousModel) {\n      this.previousModel.setWrapperElement(undefined)\n    }\n    if(this.model && this.container?.nativeElement) {\n      this.model.setWrapperElement(this.container.nativeElement);\n    }\n  }\n\n  public get componentName(): string {\n    const survey = this.surveyModel as SurveyModel;\n    if(!!survey) {\n      const name = survey.getElementWrapperComponentName(this.model);\n      if(!!name) {\n        return name;\n      }\n    }\n    return this.elementComponentName;\n  }\n  public get rootStyle() {\n    //use this if to check if cssClassses are calculated and allowRootStyle flag was set\n    if(!!this.model.cssClasses) {\n      return this.model.rootStyle;\n    } else {\n      return {};\n    }\n  }\n  public get componentData(): any {\n    const survey = this.surveyModel as SurveyModel;\n    let data: any;\n    if(!!survey) {\n      data = survey.getElementWrapperComponentData(this.model);\n    }\n    return {\n      componentName: this.elementComponentName,\n      componentData: {\n        model: this.model,\n        data: data\n      }\n    };\n  }\n  public ngAfterViewInit(): void {\n    if(this.model && this.container?.nativeElement) {\n      this.model.setWrapperElement(this.container.nativeElement)\n    }\n  }\n  public override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.model.setWrapperElement(undefined);\n  }\n}\n","<ng-template #template>\n    <div *ngIf=\"!!model\" [class]=\"model.cssClasses.questionWrapper\" [style]=\"rootStyle\" (focusin)=\"model.focusIn()\" #container>\n        <ng-template [component]=\"{ name: componentName, data: componentData }\"></ng-template>\n    </div>\n</ng-template>","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, Input, NgZone, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { IElement, QuestionRowModel } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\n@Component({\n  selector: \"sv-ng-row\",\n  templateUrl: \"./row.component.html\",\n  styleUrls: [\"./hide-host.scss\"]\n})\nexport class RowComponent extends BaseAngular<QuestionRowModel> implements AfterViewInit {\n  @Input() row!: QuestionRowModel;\n  @ViewChild(\"container\", { read: ElementRef }) container?: ElementRef<HTMLDivElement>;\n  constructor(cdr: ChangeDetectorRef, vcr: ViewContainerRef, private ngZone: NgZone) {\n    super(cdr, vcr);\n  }\n\n  protected getModel(): QuestionRowModel {\n    return this.row;\n  }\n  trackElementBy (index: number, element: IElement): string {\n    return element.name + index;\n  }\n  public ngAfterViewInit(): void {\n    const el = this.container?.nativeElement;\n    if (!!el) {\n      this.row.setRootElement(el);\n      if(!this.row.isNeedRender) {\n        this.ngZone.runOutsideAngular(() => {\n          setTimeout(() => {\n            this.row.startLazyRendering(el);\n          }, 10);\n        });\n      }\n    }\n  }\n  protected override onModelChanged(): void {\n    super.onModelChanged();\n    if(!this.previousModel) {\n      return;\n    } else {\n      this.previousModel.setRootElement(undefined);\n      if(this.container?.nativeElement) {\n        this.row.setRootElement(this.container.nativeElement);\n      }\n      this.row.isNeedRender = this.previousModel.isNeedRender;\n      this.stopLazyRendering();\n    }\n  }\n  private stopLazyRendering() {\n    this.row.stopLazyRendering();\n    this.row.isNeedRender = !this.row.isLazyRendering();\n  }\n  public override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.row.setRootElement(undefined);\n    this.stopLazyRendering();\n  }\n}","<ng-template #template>\n  <div [class]=\"row.getRowCss()\" #container>\n    <ng-container *ngFor=\"let element of row.visibleElements; trackBy: trackElementBy\">\n      <sv-ng-element [model]=\"$any(element)\" *ngIf=\"row.isNeedRender\"></sv-ng-element>\n      <ng-template *ngIf=\"!row.isNeedRender && element.skeletonComponentName\" [component]=\"{ name: element.skeletonComponentName, data: { element: element } }\"></ng-template>\n    </ng-container>\n  </div>\n</ng-template>","import { AfterViewInit, Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from \"@angular/core\";\nimport { PageModel, SurveyModel } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\n@Component({\n  selector: \"page, sv-ng-page\",\n  templateUrl: \"./page.component.html\",\n  styleUrls: [\"./hide-host.scss\"]\n  })\nexport class PageComponent extends BaseAngular<PageModel> {\n  @Input() model!: PageModel;\n  @Input() survey?: SurveyModel;\n  @ViewChild(\"pageContainer\", { static: false, read: ElementRef }) pageContainerRef!: ElementRef<HTMLDivElement>;\n  protected getModel(): PageModel {\n    return this.model;\n  }\n  protected override onModelChanged(): void {\n    if(!!this.pageContainerRef && this.pageContainerRef.nativeElement) {\n      this.model.survey.afterRenderPage(this.pageContainerRef.nativeElement);\n    }\n  }\n  ngAfterViewInit(): void {\n    this.model.survey?.afterRenderPage(this.pageContainerRef?.nativeElement);\n  }\n}","<ng-template #template>\n  <ng-container *ngIf=\"!!this.survey && !!this.model && this.model.isVisible && !!this.model.survey\">\n    <div [class]=\"model.cssRoot\" #pageContainer>\n      <sv-ng-element-title [element]=\"model\"></sv-ng-element-title>\n      <div *ngIf=\"model._showDescription\" [class]=\"model.cssClasses.page.description\">\n        <sv-ng-string [model]=\"model.locDescription\"></sv-ng-string>\n      </div>\n      <div *ngIf=\"model.hasVisibleErrors\" [element]=\"model\" sv-ng-errors></div>\n      <ng-container *ngFor=\"let row of model.visibleRows\">\n        <ng-template [component]=\"{ name: $any(model.survey).getRowWrapperComponentName(row), data: { componentData: $any(model.survey).getRowWrapperComponentData(row) } }\">\n          <sv-ng-row [row]=\"row\"></sv-ng-row>\n        </ng-template>\n      </ng-container>\n    </div>\n  </ng-container>  \n</ng-template>","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n@Component({\n  selector: \"sv-brand-info\",\n  templateUrl: \"./brand-info.component.html\"\n})\nexport class BrandInfoComponent {}\nAngularComponentFactory.Instance.registerComponent(\"sv-brand-info\", BrandInfoComponent);","<div class=\"sv-brand-info\">\n  <a class=\"sv-brand-info__logo\" href=\"https://surveyjs.io/?utm_source=built-in_links&utm_medium=online_survey_tool&utm_campaign=landing_page\"><img src=\"https://surveyjs.io/Content/Images/poweredby.svg\"/></a>\n  <div class=\"sv-brand-info__text\">Try and see how easy it is to <a href=\"https://surveyjs.io/create-survey?utm_source=built-in_links&utm_medium=online_survey_tool&utm_campaign=create_survey\">create a survey</a></div>\n  <div class=\"sv-brand-info__terms\"><a href=\"https://surveyjs.io/TermsOfUse\">Terms of Use & Privacy Statement</a></div>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { Base, Notifier } from \"survey-core\";\n\n@Component({\n  selector: \"sv-notifier\",\n  templateUrl: \"./notifier.component.html\",\n  styles: [\":host { display: none; }\"]\n  })\nexport class NotifierComponent extends BaseAngular<Notifier> {\n  @Input() notifier!: Notifier;\n  protected getStateElement(): Base {\n    return this.notifier;\n  }\n  protected getModel(): Notifier {\n    return this.notifier;\n  }\n}","<ng-template #template>\n  <ng-container *ngIf=\"notifier.isDisplayed\">\n    <div [class]=\"notifier.css\" [style]=\"{ visibility: notifier.active ? 'visible' : 'hidden' }\" role=\"alert\" aria-live=\"polite\">\n      <span>{{notifier.message}}</span>\n      <sv-action-bar [model]=\"notifier.actionBar\"></sv-action-bar> \n    </div>\n  </ng-container>\n</ng-template>","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { DomSanitizer, SafeUrl } from \"@angular/platform-browser\";\n\n@Pipe({ name: \"safeHtml\" })\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(private domSanitizer: DomSanitizer) {}\n  transform(url: string): SafeUrl {\n    return this.domSanitizer.bypassSecurityTrustHtml(url);\n  }\n}","\nimport { AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild } from \"@angular/core\";\nimport { SurveyModel, SvgRegistry } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\nimport { AngularComponentFactory } from \"./component-factory\";\n@Component({\n  selector: \"survey-content\",\n  templateUrl: \"./survey-content.component.html\"\n})\nexport class SurveyContentComponent extends BaseAngular<SurveyModel> implements OnInit, AfterViewInit {\n  @Input() model!: SurveyModel;\n  @ViewChild(\"surveyContainer\", { static: false }) rootEl!: ElementRef<HTMLDivElement>;\n  private isSurveyUpdated: boolean = false;\n  protected getModel(): SurveyModel {\n    return this.model;\n  }\n  protected override onModelChanged(): void {\n    if (!!this.previousModel) {\n      this.previousModel.destroyResizeObserver();\n      this.previousModel.renderCallback = <any>undefined;\n    }\n    if (!!this.model) {\n      this.model.renderCallback = () => {\n        this.detectChanges();\n      };\n    }\n    this.isSurveyUpdated = true;\n  }\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    if (!!this.model) {\n      this.model.rootElement = undefined as any;\n      this.model.destroyResizeObserver();\n      this.model.renderCallback = <any>undefined;\n    }\n  }\n  ngAfterViewInit(): void {\n    this.isSurveyUpdated = true;\n  }\n  override ngAfterViewChecked(): void {\n    if (!!this.model && this.isSurveyUpdated) {\n      this.model.afterRenderSurvey(this.rootEl.nativeElement);\n      this.model.startTimerFromUI();\n    }\n    super.ngAfterViewChecked();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"survey\", SurveyContentComponent);","<ng-template #template>\n  <div #surveyContainer *ngIf=\"!!model\" [class]=\"model.getRootCss()\" [style]=\"model.themeVariables\" [lang]=\"model.locale || 'en'\" [dir]=\"model.localeDir\">\n    <sv-svg-bundle *ngIf=\"model.needRenderIcons\"></sv-svg-bundle>\n    <div [class]=\"model.wrapperFormCss\">\n      <div *ngIf=\"!!model.renderBackgroundImage\" [class]=\"model.css.rootBackgroundImage\" [style]=\"model.backgroundImageStyle\"></div>\n      <form onsubmit=\"return false;\">\n        <div class=\"sv_custom_header\" [hidden]=\"model.hasLogo\"></div>\n        <div [class]=\"model.css.container\">\n          <div *ngIf=\"model.headerView === 'basic' && model.renderedHasHeader\" [class]=\"model.css.header\" [survey]=\"model\" sv-ng-survey-header></div>\n          <ng-template [component]=\"{ name: 'sv-components-container', data: { survey: model, container: 'header', needRenderWrapper: false } }\"></ng-template>\n          <div *ngIf=\"model.isShowingPage\" [class]=\"model.bodyContainerCss\">\n            <ng-template [component]=\"{ name: 'sv-components-container', data: { survey: model, container: 'left' } }\"></ng-template>\n            <div class=\"sv-components-column sv-components-column--expandable\">\n              <ng-template [component]=\"{ name: 'sv-components-container', data: { survey: model, container: 'center' } }\"></ng-template>\n              <div [class]=\"model.bodyCss\" [style.maxWidth]=\"model.renderedWidth\" [id]=\"model.activePage ? model.activePage.id : ''\">\n                <ng-template [component]=\"{ name: 'sv-components-container', data: { survey: model, container: 'contentTop' } }\"></ng-template>\n                <!-- ko if: activePage -->\n                  <ng-container *ngIf=\"model.activePage\">\n                      <sv-ng-page [model]=\"model.activePage\" [survey]=\"model\"></sv-ng-page>\n                  </ng-container>\n                  <!-- ko if: activePage.rows.length == 0 && $data.emptyPageTemplate -->\n                  <!-- ko template: { name: emptyPageTemplate, data: $data.emptyPageTemplateData || $data } -->\n                  <!-- /ko -->\n                  <!-- /ko -->\n                <!-- /ko -->\n                <ng-template [component]=\"{ name: 'sv-components-container', data: { survey: model, container: 'contentBottom' } }\"></ng-template>\n                <sv-brand-info *ngIf=\"model.showBrandInfo\"></sv-brand-info>\n              </div>\n            </div>\n            <ng-template [component]=\"{ name: 'sv-components-container', data: { survey: model, container: 'right' } }\"></ng-template>\n          </div>\n          <ng-template [component]=\"{ name: 'sv-components-container', data: { survey: model, container: 'footer', needRenderWrapper: false } }\"></ng-template>\n          <div *ngIf=\"model.state === 'completed' && model.showCompletedPage\" [class]=\"model.completedCss\"\n            [innerHtml]=\"model.processedCompletedHtml | safeHtml\"></div>\n          <ng-template *ngIf=\"model.state === 'completed' && model.showCompletedPage\" [component]=\"{ name: 'sv-components-container', data: { survey: model, container: 'completePage' } }\"></ng-template>\n          <div *ngIf=\"model.state === 'completedbefore'\" [class]=\"model.completedBeforeCss\"\n            [innerHtml]=\"model.processedCompletedBeforeHtml | safeHtml\"></div>\n          <div *ngIf=\"model.state === 'loading'\" [class]=\"model.loadingBodyCss\" [innerHtml]=\"model.processedLoadingHtml\"></div>\n          <div *ngIf=\"model.state === 'empty'\" [class]=\"model.css.bodyEmpty\">{{model.emptySurveyText}}</div>\n        </div>\n      </form>\n      <sv-notifier [notifier]=\"model.notifier\"></sv-notifier>\n    </div>\n  </div>\n</ng-template>","import { ChangeDetectorRef, Component, Input } from \"@angular/core\";\nimport { SurveyModel } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\n@Component({\n  selector: \"survey\",\n  template: \"<sv-ng-modal-container></sv-ng-modal-container><survey-content [model]='model'></survey-content>\"\n  })\nexport class SurveyComponent extends BaseAngular<SurveyModel> {\n  @Input() model!: SurveyModel;\n  protected getModel(): SurveyModel {\n    return this.model;\n  }\n  constructor(changeDetectorRef: ChangeDetectorRef) {\n    super(changeDetectorRef);\n    changeDetectorRef.detach();\n  }\n  protected override getShouldReattachChangeDetector(): boolean {\n    return false;\n  }\n  protected override onModelChanged(): void {\n    this.changeDetectorRef.detectChanges();\n  }\n}","import { ChangeDetectorRef, Component, Input, OnChanges, SimpleChanges } from \"@angular/core\";\nimport { PopupSurveyModel, SurveyModel } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\n@Component({\n  selector: \"popup-survey\",\n  templateUrl: \"./popup.survey.component.html\",\n  styleUrls: [\"./popup.survey.component.scss\"]\n})\nexport class PopupSurveyComponent extends BaseAngular<PopupSurveyModel> implements OnChanges {\n  @Input() model!: SurveyModel;\n  @Input() isExpanded?: boolean;\n  @Input() allowClose?: boolean;\n  @Input() closeOnCompleteTimeout?: number;\n  @Input() allowFullScreen?: boolean;\n  @Input() onClose?: () => void;\n  public popup!: PopupSurveyModel;\n\n  constructor(changeDetectorRef: ChangeDetectorRef) {\n    super(changeDetectorRef);\n    changeDetectorRef.detach();\n  }\n  protected getModel(): PopupSurveyModel {\n    return this.popup;\n  }\n  protected override getShouldReattachChangeDetector(): boolean {\n    return false;\n  }\n  public getHeaderCss(): string {\n    let headerCss = this.popup.cssHeaderRoot;\n    if (this.popup.isCollapsed) {\n      headerCss += \" \" + this.popup.cssRootCollapsedMod;\n    }\n    return headerCss;\n  }\n\n  public closeHandler() {\n    this.popup.hide();\n    if (!!this.onClose) {\n      this.onClose();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes[\"model\"]?.currentValue !== changes[\"model\"]?.previousValue) {\n      this.popup = new PopupSurveyModel(null, this.model);\n    }\n    if (this.isExpanded !== undefined) {\n      this.popup.isExpanded = this.isExpanded;\n    }\n    if (this.allowClose !== undefined) {\n      this.popup.allowClose = this.allowClose;\n    }\n    if (this.allowFullScreen !== undefined) {\n      this.popup.allowFullScreen = this.allowFullScreen;\n    }\n    if (this.closeOnCompleteTimeout !== undefined) {\n      this.popup.closeOnCompleteTimeout = this.closeOnCompleteTimeout;\n    }\n    this.popup.isShowing = true;\n    this.changeDetectorRef.detectChanges();\n  }\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.popup.dispose();\n  }\n}","<div *ngIf=\"!!popup && popup.isShowing\" [class]=\"popup.cssRoot\" [style.width]=\"popup.renderedWidth\" [style.maxWidth]=\"popup.renderedWidth\" (scroll)=\"popup.onScroll()\">\n  <div [class]=\"popup.cssRootContent\">\n    <div [class]=\"getHeaderCss()\">\n      <div *ngIf=\"popup.isCollapsed && !!popup.locTitle\" [class]=\"popup.cssHeaderTitleCollapsed\">\n        {{popup.locTitle.renderedHtml}}\n      </div>\n      <div [class]=\"popup.cssHeaderButtonsContainer\">\n        <div *ngIf=\"popup.allowFullScreen\" [class]=\"popup.cssHeaderFullScreenButton\" (click)=\"popup.toggleFullScreen()\">\n          <svg *ngIf=\"popup.isFullScreen\" [iconName]=\"'icon-back-to-panel_16x16'\" [size]=\"16\" sv-ng-svg-icon></svg>\n          <svg *ngIf=\"!popup.isFullScreen\" [iconName]=\"'icon-full-screen_16x16'\" [size]=\"16\" sv-ng-svg-icon></svg>\n        </div>\n\n        <div [class]=\"popup.cssHeaderCollapseButton\" (click)=\"popup.changeExpandCollapse()\">\n            <svg *ngIf=\"popup.isExpanded\" [iconName]=\"'icon-minimize_16x16'\" [size]=\"16\" sv-ng-svg-icon></svg>\n            <svg *ngIf=\"popup.isCollapsed\" [iconName]=\"'icon-restore_16x16'\" [size]=\"16\" sv-ng-svg-icon></svg>\n        </div>\n\n        <div *ngIf=\"popup.allowClose\" [class]=\"popup.cssHeaderCloseButton\" (click)=\"closeHandler()\">\n          <svg [iconName]=\"'icon-close_16x16'\" [size]=\"16\" sv-ng-svg-icon></svg>\n        </div>\n      </div>\n  </div>\n  <div [class]=\"popup.cssBody\">\n    <survey [model]=\"popup.survey\"></survey>\n  </div>\n  </div>\n</div>","import { AfterViewInit, Component, ElementRef, Input, OnDestroy, ViewChild } from \"@angular/core\";\nimport { Question } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\n\n@Component({\n  template: \"\"\n})\nexport class QuestionAngular<T extends Question = Question> extends BaseAngular<Question> implements AfterViewInit, OnDestroy {\n  @Input() public model!: T;\n\n  @ViewChild(\"contentElement\") elementContentRef!: ElementRef<HTMLElement>;\n\n  protected getModel() {\n    return this.model;\n  }\n\n  ngAfterViewInit() {\n    if (!!this.model) {\n      this.model.afterRenderQuestionElement(this.elementContentRef?.nativeElement);\n    }\n  }\n  override ngOnDestroy() {\n    if (!!this.model) {\n      this.model.beforeDestroyQuestionElement(this.elementContentRef?.nativeElement);\n    }\n    super.ngOnDestroy();\n  }\n}\n\nexport function getComponentName(question: Question): string {\n  if (question.customWidget) return \"survey-customwidget\";\n  if (question.isDefaultRendering()) {\n    return question.getTemplate() + \"-question\";\n  }\n  return question.getComponentName();\n}","import { Component, HostBinding, HostListener, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"'[sv-ng-element-header]'\",\n  templateUrl: \"./element-header.component.html\"\n})\nexport class ElementHeaderComponent {\n  @Input() element: any;\n  constructor() {\n  }\n  @HostBinding(\"class\") get rootClass(): string {\n    return this.element.cssHeader;\n  }\n  @HostBinding(\"style.width\") get width(): string {\n    return this.element.titleWidth;\n  }\n  @HostListener(\"click\", [\"$event\"]) click(e: MouseEvent): void {\n    if (this.element.clickTitleFunction !== undefined) {\n      this.element.clickTitleFunction(e);\n    }\n  }\n}","<sv-ng-element-title [element]=\"element\"></sv-ng-element-title>\n<div *ngIf=\"element.hasDescriptionUnderTitle\" [class]=\"element.cssDescription\" [model]=\"element.locDescription\" [attr.id]=\"element.ariaDescriptionId\" [style.display]=\"element.hasDescription ? '': 'none' \" sv-ng-string></div>\n<ng-container *ngIf=\"element.hasAdditionalTitleToolbar\">\n<sv-ng-action-bar [model]=\"element.additionalTitleToolbar\"></sv-ng-action-bar>\n</ng-container>","import { Component, Input } from \"@angular/core\";\nimport { Question } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-comment, '[sv-ng-comment]'\",\n  templateUrl: \"./comment.component.html\",\n})\nexport class SurveyCommentComponent {\n  @Input() question!: Question;\n  constructor() {\n  }\n  public get comment(): string {\n    if(!this.question.comment) return \"\";\n    return this.question.comment;\n  }\n}","<ng-container *ngIf=\"!question.isReadOnlyRenderDiv()\">\n  <ng-template [component]=\"{ name: 'sv-text-area', data: { model: question.commentTextAreaModel } }\"></ng-template>\n</ng-container>\n<div *ngIf=\"question.isReadOnlyRenderDiv()\">{{ question.comment }}</div>\n","import { Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { Question } from \"survey-core\";\nimport { AngularComponentFactory } from \"./component-factory\";\nimport { EmbeddedViewContentComponent } from \"./embedded-view-content.component\";\nimport { getComponentName } from \"./question\";\n\n@Component({\n  selector: \"sv-ng-question\",\n  templateUrl: \"./question.component.html\"\n})\nexport class QuestionComponent extends EmbeddedViewContentComponent {\n  @Input() model!: Question;\n  @ViewChild(\"elementContainer\") rootEl?: ElementRef<HTMLDivElement>;\n  protected getModel(): Question {\n    return this.model;\n  }\n  ngAfterViewInit(): void {\n    if (!!this.rootEl?.nativeElement) {\n      this.model.afterRender(this.rootEl?.nativeElement);\n    }\n  }\n  ngOnDestroy() {\n    if(!!this.model) {\n      this.model.destroyResizeObserver();\n    }\n  }\n  public getComponentName(): string { return getComponentName(this.model); }\n  public getQuestionContentWrapperComponentName(): string {\n    return (<any>this.model.survey).getQuestionContentWrapperComponentName(this.model);\n  }\n  public getQuestionContentWrapperComponentData(): any {\n    return {\n      componentData: {\n        model: this.model,\n        data: (<any>this.model.survey).getElementWrapperComponentData(this.model)\n      }\n    };\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"question\", QuestionComponent);","<ng-template #template>\n  <div *ngIf=\"!!model\" #elementContainer [class]=\"model.getRootCss()\" [style]=\"model.getRootStyle()\" [id]=\"model.id\" [attr.data-name]=\"model.name\" [attr.role]=\"model.ariaRole\" [attr.aria-required]=\"model.ariaRequired\" [attr.aria-invalid]=\"model.ariaInvalid\" [attr.aria-labelledby]=\"model.ariaLabelledBy\" [attr.aria-describedby]=\"model.ariaDescribedBy\" [attr.aria-expanded]=\"model.ariaExpanded\">\n    <div *ngIf=\"model.showErrorsAboveQuestion && model.hasVisibleErrors\" [element]=\"model\" sv-ng-errors></div>\n    <div [element]=\"model\" *ngIf=\"model.hasTitleOnLeftTop\" sv-ng-element-header></div>\n    <ng-template [component]=\"{ name: getQuestionContentWrapperComponentName(), data: getQuestionContentWrapperComponentData() }\">\n      <div [class]=\"model.cssContent\" role=\"presentation\" [visible]=\"model.renderedIsExpanded\">\n        <div *ngIf=\"model.showErrorOnTop && model.hasVisibleErrors\" [element]=\"model\" sv-ng-errors></div>\n        <ng-template [component]=\"{ name: getComponentName(), data: { model: model }, default: 'skeleton-question' }\"></ng-template>\n        <div *ngIf=\"model.hasComment\" [class]=\"model.getCommentAreaCss(false)\">\n          <div [model]=\"model.locCommentText\" sv-ng-string></div>\n          <sv-ng-comment [question]=\"model\"></sv-ng-comment>\n        </div>\n        <div *ngIf=\"model.showErrorOnBottom && model.hasVisibleErrors\" [element]=\"model\" sv-ng-errors></div>\n        <div *ngIf=\"model.hasDescriptionUnderInput\" [class]=\"model.cssDescription\" [attr.id]=\"model.ariaDescriptionId\" [model]=\"model.locDescription\" sv-ng-string></div>\n      </div>\n    </ng-template>\n    <div [element]=\"model\" *ngIf=\"model.hasTitleOnBottom\" sv-ng-element-header></div>\n    <div *ngIf=\"model.showErrorsBelowQuestion && model.hasVisibleErrors\" [element]=\"model\" sv-ng-errors></div>\n  </div>\n</ng-template>","import { ChangeDetectorRef, Component, DoCheck, Input, OnChanges, OnDestroy, SimpleChanges } from \"@angular/core\";\nimport { LocalizableString } from \"survey-core\";\nimport { AngularComponentFactory } from \"./component-factory\";\n\n@Component({\n  selector: \"sv-ng-string-viewer, string-viewer, '[sv-ng-string-viewer]'\",\n  templateUrl: \"./string-viewer.component.html\",\n  styleUrls: [\"./string-viewer.component.scss\"]\n})\nexport class StringViewerComponent implements DoCheck {\n  @Input() model!: LocalizableString;\n  className: string = \"\";\n  private previousModel: LocalizableString | undefined;\n  constructor(private changeDetectorRef: ChangeDetectorRef) {}\n  ngDoCheck(): void {\n    if(this.model !== this.previousModel) {\n      this.className = this.model.allowLineBreaks ? \"sv-string-viewer sv-string-viewer--multiline\" : \"sv-string-viewer\";\n      if(!!this.previousModel) {\n        this.clearOnChanged(this.previousModel);\n      }\n      if(!!this.model) {\n        this.model.onChanged = () => { this.changeDetectorRef.detectChanges(); };\n      }\n      this.previousModel = this.model;\n    }\n  }\n  clearOnChanged(model: LocalizableString) {\n    model.onChanged = () => {};\n  }\n  ngOnDestroy(): void {\n    !!this.model && this.clearOnChanged(this.model);\n  }\n}\nAngularComponentFactory.Instance.registerComponent(LocalizableString.defaultRenderer, StringViewerComponent);","<span *ngIf=\"!model.hasHtml\" [class]=\"className\">{{model.renderedHtml}}</span>\n<span *ngIf=\"model.hasHtml\" [class]=\"className\" [innerHtml]=\"model.renderedHtml | safeHtml\"></span>","import { Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { TextAreaModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\n\n@Component({\n  selector: \"sv-text-area\",\n  templateUrl: \"./text-area.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class TextAreaComponent extends EmbeddedViewContentComponent {\n  @Input() model!: TextAreaModel;\n  @ViewChild(\"contentElement\") elementContentRef!: ElementRef<HTMLElement>;\n\n  get value() {\n    return this.model.getTextValue() || \"\";\n  }\n\n  public ngAfterViewInit(): void {\n    if (!!this.model && !!this.elementContentRef?.nativeElement) {\n      const element = this.elementContentRef.nativeElement;\n      this.model.setElement(element as HTMLTextAreaElement);\n    }\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-text-area\", TextAreaComponent);","<ng-template #template>\n<textarea\n[readonly]=\"model.isReadOnlyAttr\"\n[disabled]=\"model.isDisabledAttr\"\n[id]=\"model.id\"\n[attr.maxlength]=\"model.maxLength\"\n[attr.cols]=\"model.cols\"\n[attr.rows]=\"model.rows\"\n[attr.placeholder]=\"model.placeholder\"\n[class]=\"model.className\"\n[value]=\"value\"\n(input)=\"model.onTextAreaInput($event)\"\n(keydown)=\"model.onTextAreaKeyDown($event)\"\n(focus)=\"model.onTextAreaFocus($event)\"\n(blur)=\"model.onTextAreaBlur($event)\"\n(change)=\"model.onTextAreaChange($event)\"\n[attr.aria-required]=\"model.ariaRequired\"\n[attr.aria-label]=\"model.ariaLabel\"\n[attr.aria-labelledby]=\"model.ariaLabelledBy\"\n[attr.aria-describedby]=\"model.ariaDescribedBy\"\n[attr.aria-invalid]=\"model.ariaInvalid\"\n[attr.aria-errormessage]=\"model.ariaErrormessage\"\n[style.resize]=\"model.question.resizeStyle\"\n#contentElement></textarea>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { PopupBaseViewModel, PopupDropdownViewModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-popup-pointer, '[sv-ng-popup-pointer]'\",\n  templateUrl: \"./popup-pointer.component.html\"\n})\n\nexport class PopupPointerComponent extends BaseAngular<PopupBaseViewModel> {\n  @Input() model!: PopupBaseViewModel;\n\n  get popupModel(): PopupDropdownViewModel {\n    return this.model as PopupDropdownViewModel;\n  }\n\n  protected getModel(): PopupBaseViewModel {\n    return this.model;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"popup-pointer\", PopupPointerComponent);","<span class=\"sv-popup__pointer\" [style]=\"{ left: popupModel.pointerTarget.left, top: popupModel.pointerTarget.top }\"></span>","import { ChangeDetectorRef, Component, ElementRef, Input, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { PopupBaseViewModel, PopupModel, createPopupViewModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-popup, '[sv-ng-popup]'\",\n  template: \"<div #containerRef><sv-ng-popup-container [model]='model' ></sv-ng-popup-container></div>\"\n})\n\nexport class PopupComponent extends BaseAngular<PopupModel> {\n  @Input() popupModel!: PopupModel;\n  @Input() getTarget?: (container: HTMLElement) => HTMLElement;\n  @Input() getArea?: (container: HTMLElement) => HTMLElement;\n  @ViewChild(\"containerRef\") containerRef!: ElementRef<HTMLDivElement>;\n\n  public model!: PopupBaseViewModel;\n\n  protected getModel(): PopupModel {\n    return this.popupModel;\n  }\n\n  constructor(viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\n    super(changeDetectorRef, viewContainerRef);\n  }\n  protected override onModelChanged(): void {\n    if (this.model) {\n      this.model.resetComponentElement();\n      this.model.dispose();\n    }\n    this.model = createPopupViewModel(this.popupModel, this.viewContainerRef?.element.nativeElement);\n    this.setContainerElement();\n  }\n\n  private setContainerElement(): void {\n    if (!!this.containerRef?.nativeElement) {\n      const container = this.containerRef.nativeElement as HTMLElement;\n      this.model.setComponentElement(container,\n        this.getTarget ? this.getTarget(container.parentElement as HTMLElement) : container?.parentElement?.parentElement,\n        this.getArea ? this.getArea(container.parentElement as HTMLElement) : undefined);\n    }\n  }\n  ngAfterViewInit(): void {\n    this.setContainerElement();\n  }\n  override ngOnInit() {\n    this.onModelChanged();\n  }\n  override ngOnDestroy(): void {\n    this.model.resetComponentElement();\n    this.model.dispose();\n    super.ngOnDestroy();\n  }\n}","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"question-skeleton\",\n  templateUrl: \"./skeleton.component.html\",\n  styleUrls: [\"./skeleton.component.scss\"]\n})\nexport class QuestionSkeletonComponent {\n  @Input() model: any;\n}\n\nAngularComponentFactory.Instance.registerComponent(\"skeleton-question\", QuestionSkeletonComponent);","<div class=\"sv-skeleton--not-implemented\">\n  <div>{{ model.getType() + \" question type renderer is not implemented yet.\" }}</div>\n  <div>{{ model.value }}</div>\n</div>\n","import { Component, ElementRef, Input, OnInit, ViewChild } from \"@angular/core\";\nimport { DropdownListModel, Helpers } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\n\n@Component({\n  selector: \"sv-ng-dropdown, '[sv-ng-dropdown]'\",\n  templateUrl: \"./dropdown.component.html\"\n})\nexport class DropdownComponent extends BaseAngular implements OnInit {\n  @Input() model: any;\n  @ViewChild(\"inputElement\") inputElementRef!: ElementRef<HTMLDivElement>;\n  get dropdownModel(): DropdownListModel {\n    return this.model?.dropdownListModel;\n  }\n  protected getModel() {\n    return this.model.dropdownListModel;\n  }\n\n  override ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  click(event: any) {\n    this.dropdownModel?.onClick(event);\n  }\n  chevronPointerDown(event: any) {\n    this.dropdownModel?.chevronPointerDown(event);\n  }\n  clear(event: any) {\n    this.dropdownModel?.onClear(event);\n  }\n  keyhandler(event: any) {\n    this.dropdownModel?.keyHandler(event);\n  }\n  blur(event: any) {\n    this.model.onBlur(event);\n    this.updateInputDomElement();\n  }\n  focus(event: any) {\n    this.model.onFocus(event);\n  }\n  inputChange(event: any) {\n    this.detectChanges();\n  }\n  updateInputDomElement() {\n    if (!!this.inputElementRef?.nativeElement) {\n      const control: any = this.inputElementRef.nativeElement;\n      const newValue = this.model.inputStringRendered;\n      if (!Helpers.isTwoValueEquals(newValue, control.value, false, true, false)) {\n        control.value = this.model.inputStringRendered || \"\";\n      }\n    }\n  }\n}","<div [class]=\"model.cssClasses.selectWrapper\" (click)=\"click($event)\">\n    <div *ngIf=\"!model.isReadOnly\" [attr.tabindex]=\"dropdownModel.noTabIndex ? null : 0\" [class]=\"model.getControlClass()\"\n        [attr.disabled]=\"model.isDisabledAttr ? true : null\" (blur)=\"blur($event)\"\n        (keydown)=\"keyhandler($event)\" [attr.id]=\"model.inputId\" [attr.aria-required]=\"model.ariaRequired\"\n        [attr.aria-label]=\"model.ariaLabel\" [attr.aria-invalid]=\"model.ariaInvalid\"\n        [attr.aria-errormessage]=\"model.ariaErrormessage\" [attr.role]=\"model.ariaRole\"\n        [attr.aria-controls]=\"dropdownModel.listElementId\"\n        [attr.aria-expanded]=\"model.ariaExpanded\"\n        [attr.aria-activedescendant]=\"dropdownModel.ariaActivedescendant\">\n        <div *ngIf=\"dropdownModel.showHintPrefix\" [class]=\"model.cssClasses.hintPrefix\">\n            <span>{{ dropdownModel.hintStringPrefix }}</span>\n        </div>\n        <div [class]=\"model.cssClasses.controlValue\">\n            <div *ngIf=\"dropdownModel.showHintString\" [class]=\"model.cssClasses.hintSuffix\">\n                <span style=\"visibility: hidden\">{{ dropdownModel.inputStringRendered }}</span>\n                <span>{{ dropdownModel.hintStringSuffix }}</span>\n            </div>\n            <ng-container *ngIf=\"dropdownModel.showInputFieldComponent\">\n                <ng-template [component]=\"{ name: model.inputFieldComponentName, data: { model: dropdownModel.getSelectedAction(), question: model } }\"></ng-template>\n            </ng-container>\n            <sv-ng-string *ngIf=\"model.showSelectedItemLocText\" [model]=\"model.selectedItemLocText\"></sv-ng-string>\n            <input #inputElement type=\"text\" autocomplete=\"off\" [(ngModel)]=\"dropdownModel.inputStringRendered\" [class]=\"model.cssClasses.filterStringInput\"\n            [attr.role]=\"dropdownModel.filterStringEnabled ? model.ariaRole : null\"\n            [attr.id]=\"model.getInputId()\"\n            [attr.inputmode]=\"dropdownModel.inputMode\"\n            [attr.tabindex]=\"dropdownModel.noTabIndex ? null : -1\"\n            [attr.disabled]=\"model.isDisabledAttr ? true : null\"\n            [attr.aria-controls]=\"dropdownModel.listElementId\"\n            [attr.aria-label]=\"model.a11y_input_ariaLabel\"\n            [attr.aria-labelledby]=\"model.a11y_input_ariaLabelledBy\"\n            [attr.aria-describedby]=\"model.a11y_input_ariaDescribedBy\"\n            [attr.aria-expanded]=\"model.ariaExpanded\"\n            [attr.aria-activedescendant]=\"dropdownModel.ariaActivedescendant\"\n            [attr.placeholder]=\"dropdownModel.placeholderRendered\" \n            [attr.readonly]=\"dropdownModel.filterReadOnly ? true : null\" \n            (change)=\"inputChange($event)\" (blur)=\"blur($event)\" (focus)=\"focus($event)\"/>\n        </div>\n        <div *ngIf=\"(model.allowClear && model.cssClasses.cleanButtonIconId)\" aria-hidden=\"true\"\n            [class]=\"model.cssClasses.cleanButton\" (click)=\"clear($event)\" [visible]=\"model.showClearButton\">\n            <!-- ko component: { name: 'sv-svg-icon', params: { css: model.cssClasses.cleanButtonSvg, iconName: model.cssClasses.cleanButtonIconId, size: 'auto' } } -->\n            <!-- /ko -->\n            <svg [iconName]=\"model.cssClasses.cleanButtonIconId\" [partCss]=\"model.cssClasses.cleanButtonSvg\" [title]=\"model.clearCaption\"\n                [size]=\"'auto'\" sv-ng-svg-icon></svg>\n        </div>\n    </div>\n    <sv-ng-popup *ngIf=\"!model.isReadOnly\" [popupModel]=\"dropdownModel.popupModel\"></sv-ng-popup>\n    <div *ngIf=\"model.isReadOnly\" [class]=\"model.getControlClass()\" [attr.id]=\"model.inputId\" \n    [attr.tabindex]=\"model.isDisabledAttr ? null : 0\"\n    [attr.disabled]=\"model.isDisabledAttr ? true : null\"\n    [attr.aria-label]=\"model.a11y_input_ariaLabel\"\n    [attr.aria-labelledby]=\"model.a11y_input_ariaLabelledBy\"\n    [attr.aria-describedby]=\"model.a11y_input_ariaDescribedBy\">\n        <sv-ng-string *ngIf=\"model.selectedItemLocText\" [model]=\"model.selectedItemLocText\"></sv-ng-string>\n        <div>{{ model.readOnlyText }}</div>\n    </div>\n    <div *ngIf=\"model.cssClasses.chevronButtonIconId\" [class]=\"model.cssClasses.chevronButton\" (pointerdown)=\"chevronPointerDown($event)\" aria-hidden=\"true\">\n        <svg [iconName]=\"model.cssClasses.chevronButtonIconId\" [partCss]=\"model.cssClasses.chevronButtonSvg\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n    </div>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { DropdownMultiSelectListModel, QuestionTagboxModel } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-tagbox-filter\",\n  templateUrl: \"./tagbox-filter.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class TagboxFilterComponent extends BaseAngular {\n  @Input() model!: DropdownMultiSelectListModel;\n  @Input() question!: QuestionTagboxModel;\n\n  getModel() {\n    return this.model;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-tagbox-filter\", TagboxFilterComponent);","<ng-template #template>\n  <div [class]=\"question.cssClasses.hint\">\n    <div *ngIf=\"model.showHintPrefix\" [class]=\"question.cssClasses.hintPrefix\">\n        <span>{{ model.hintStringPrefix }}</span>\n    </div>\n    <div [class]=\"question.cssClasses.hintSuffixWrapper\">\n        <div *ngIf=\"model.showHintString\" [class]=\"question.cssClasses.hintSuffix\">\n            <span style=\"visibility: hidden\">{{ model.inputStringRendered }}</span>\n            <span>{{ model.hintStringSuffix }}</span>\n        </div>\n    <input\n      type=\"text\"\n      autocomplete=\"off\"\n      [(ngModel)]=\"model.inputStringRendered\"\n      [attr.id]=\"question.getInputId()\"\n      [class]=\"question.cssClasses.filterStringInput\"\n      [attr.inputmode]=\"model.inputMode\"\n      [attr.role]=\"model.filterStringEnabled ? question.ariaRole : null\"\n      [attr.readonly]=\"model.filterReadOnly ? true : null\"\n      [attr.disabled]=\"question.isDisabledAttr ? true : null\"\n      [attr.size]=\"!model.inputStringRendered ? 1 : null\"\n      [attr.aria-label]=\"question.a11y_input_ariaLabel\"\n      [attr.aria-labelledby]=\"question.a11y_input_ariaLabelledBy\"\n      [attr.aria-describedby]=\"question.a11y_input_ariaDescribedBy\"\n      [attr.aria-controls]=\"model.listElementId\"\n      [attr.aria-expanded]=\"question.ariaExpanded\"\n      [attr.aria-activedescendant]=\"model.ariaActivedescendant\"\n      [attr.placeholder]=\"model.filterStringPlaceholder\"\n      (keydown)=\"model.inputKeyHandler($event)\"\n      (blur)=\"question.onBlur($event)\"\n      (focus)=\"question.onFocus($event)\"\n    />\n    </div>\n  </div>\n</ng-template>\n","import { Component, Input } from \"@angular/core\";\nimport { ItemValue, QuestionTagboxModel } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-tagbox-item, '[sv-ng-tagbox-item]'\",\n  templateUrl: \"./tagbox-item.component.html\",\n})\nexport class TagboxItemComponent extends BaseAngular {\n  @Input() item!: ItemValue;\n  @Input() question!: QuestionTagboxModel;\n\n  removeItem(event: any) {\n    this.question.dropdownListModel.deselectItem(this.item.value);\n    event.stopPropagation();\n  }\n\n  getModel() {\n    return this.item;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-tagbox-item\", TagboxItemComponent);","<div class=\"sv-tagbox__item\">\n  <div class=\"sv-tagbox__item-text\" [model]=\"item.locText\" sv-ng-string></div>  \n  <div [class]=\"question.cssClasses.cleanItemButton\" (click)=\"removeItem($event)\">\n    <svg [iconName]=\"question.cssClasses.cleanItemButtonIconId\" [partCss]=\"question.cssClasses.cleanItemButtonSvg\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n  </div>\n</div>","import { Component, Input, OnInit } from \"@angular/core\";\nimport { DropdownMultiSelectListModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-tagbox, '[sv-ng-tagbox]'\",\n  templateUrl: \"./tagbox.component.html\"\n})\nexport class TagboxComponent implements OnInit {\n    @Input() model: any;\n\n    get dropdownModel(): DropdownMultiSelectListModel {\n      return this.model?.dropdownListModel;\n    }\n\n    getModel() {\n      return this.model;\n    }\n\n    ngOnInit(): void {\n      if (!this.model.dropdownListModel) {\n        this.model.dropdownListModel = new DropdownMultiSelectListModel(this.model);\n      }\n    }\n\n    click(event: any) {\n      this.dropdownModel?.onClick(event);\n    }\n    chevronPointerDown(event: any) {\n      this.dropdownModel?.chevronPointerDown(event);\n    }\n    clear(event: any) {\n      this.dropdownModel?.onClear(event);\n    }\n    keyhandler(event: any) {\n      this.dropdownModel?.keyHandler(event);\n    }\n    blur(event: any) {\n      this.model?.onBlur(event);\n    }\n    focus(event: any) {\n      this.model?.onFocus(event);\n    }\n}","<div [class]=\"model.cssClasses.selectWrapper\" (click)=\"click($event)\">\n    <div *ngIf=\"!model.isReadOnly\" [attr.tabindex]=\"dropdownModel.noTabIndex ? null : 0\" [class]=\"model.getControlClass()\"\n        [attr.disabled]=\"model.isDisabledAttr ? true : null\" (blur)=\"blur($event)\"\n        (keydown)=\"keyhandler($event)\" [attr.id]=\"model.inputId\" [attr.aria-required]=\"model.ariaRequired\"\n        [attr.aria-label]=\"model.ariaLabel\" [attr.aria-invalid]=\"model.ariaInvalid\"\n        [attr.aria-errormessage]=\"model.ariaErrormessage\" [attr.role]=\"model.ariaRole\"\n        [attr.aria-controls]=\"dropdownModel.listElementId\"\n        [attr.aria-expanded]=\"model.ariaExpanded\"\n        [attr.aria-activedescendant]=\"dropdownModel.ariaActivedescendant\">\n        <div [class]=\"model.cssClasses.controlValue\">\n            <ng-container *ngIf=\"!model.isEmpty()\">\n                <sv-ng-tagbox-item *ngFor=\"let item of model.selectedChoices\" [item]=\"item\" [question]=\"model\">\n                </sv-ng-tagbox-item>\n            </ng-container>\n            <ng-template [component]=\"{ name: 'sv-tagbox-filter', data: { model: dropdownModel, question: model } }\"></ng-template>\n        </div>\n        <div *ngIf=\"(model.allowClear && model.cssClasses.cleanButtonIconId)\" [class]=\"model.cssClasses.cleanButton\"\n            (click)=\"clear($event)\" [visible]=\"model.showClearButton\" aria-hidden=\"true\">\n            <!-- ko component: { name: 'sv-svg-icon', params: { css: model.cssClasses.cleanButtonSvg, iconName: model.cssClasses.cleanButtonIconId, size: 'auto' } } -->\n            <!-- /ko -->\n            <svg [iconName]=\"model.cssClasses.cleanButtonIconId\" [partCss]=\"model.cssClasses.cleanButtonSvg\" [title]=\"model.clearCaption\"\n                [size]=\"'auto'\" sv-ng-svg-icon></svg>\n        </div>\n    </div>\n    <sv-ng-popup *ngIf=\"!model.isReadOnly\" [popupModel]=\"model.popupModel\"></sv-ng-popup>\n    <div *ngIf=\"model.isReadOnly\" [class]=\"model.getControlClass()\" [attr.id]=\"model.inputId\"\n    [attr.tabindex]=\"model.isDisabledAttr ? null : 0\"\n    [attr.disabled]=\"model.isDisabledAttr ? true : null\"\n    [attr.aria-label]=\"model.a11y_input_ariaLabel\"\n    [attr.aria-labelledby]=\"model.a11y_input_ariaLabelledBy\"\n    [attr.aria-describedby]=\"model.a11y_input_ariaDescribedBy\">\n        <sv-ng-string *ngIf=\"model.locReadOnlyText\" [model]=\"model.locReadOnlyText\"></sv-ng-string>\n    </div>\n    <div *ngIf=\"model.cssClasses.chevronButtonIconId\" [class]=\"model.cssClasses.chevronButton\" (pointerdown)=\"chevronPointerDown($event)\" aria-hidden=\"true\">\n        <svg [iconName]=\"model.cssClasses.chevronButtonIconId\" [partCss]=\"model.cssClasses.chevronButtonSvg\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n    </div>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../../../base-angular\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-dropdown-option-item, '[sv-ng-dropdown-option-item]'\",\n  template: '<ng-template #template><option [value]=\"item.value\" [disabled]=\"!item.isEnabled\">{{ item.text }}</option><ng-template>',\n})\nexport class DropdownOptionItemComponent extends BaseAngular {\n  @Input() item: any;\n  protected override onModelChanged(): void {\n    if (!this.item.locText) return;\n    this.item.locText.onChanged = () => {\n      this.detectChanges();\n    };\n  }\n  protected getModel() {\n    return this.item;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-dropdown-option-item\", DropdownOptionItemComponent);","import { Component, Input } from \"@angular/core\";\nimport { Question, QuestionSelectBase, TextAreaModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-comment-other, '[sv-ng-comment-other]'\",\n  templateUrl: \"./comment-other.component.html\",\n})\nexport class SurveyCommentOtherComponent {\n  @Input() question!: Question;\n  constructor() {\n  }\n  public get otherValue(): string {\n    const val = (<QuestionSelectBase>this.question).otherValue;\n    return !!val ? val : \"\";\n  }\n  public get textAreaModel(): TextAreaModel {\n    return (<QuestionSelectBase>this.question).otherTextAreaModel;\n  }\n}","<ng-container *ngIf=\"!question.isReadOnlyRenderDiv()\">\n  <ng-template [component]=\"{ name: 'sv-text-area', data: { model: textAreaModel } }\"></ng-template>\n</ng-container>\n<div *ngIf=\"question.isReadOnlyRenderDiv()\">{{ otherValue }}</div>\n","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\nimport { RendererFactory } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-dropdown-select-question\",\n  templateUrl: \"./dropdown-select.component.html\"\n})\nexport class DropdownSelectComponent {\n  @Input() model: any;\n\n  get editableValue() {\n    return this.model.renderedValue || \"\";\n  }\n  set editableValue(newValue: any) {\n    if(newValue === \"\") {\n      this.model.renderedValue = undefined;\n    } else {\n      this.model.renderedValue = newValue;\n    }\n  }\n\n  click(event: any) {\n    this.model.onClick(event);\n  }\n  keyup(event: any) {\n    this.model.onKeyUp(event);\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"dropdown-select-question\", DropdownSelectComponent);\nRendererFactory.Instance.registerRenderer(\"dropdown\", \"select\", \"dropdown-select-question\");","<div [class]=\"model.renderCssRoot\">\n  <div [class]=\"model.cssClasses.selectWrapper\">\n    <select *ngIf=\"!model.isReadOnly\" [attr.id]=\"model.inputId\" [(ngModel)]=\"editableValue\"\n      [disabled]=\"model.isInputReadOnly\" (click)=\"click($event)\" (keyup)=\"keyup($event)\"\n      [class]=\"model.getControlClass()\" [attr.autocomplete]=\"model.autocomplete\" [required]=\"model.isRequired\"\n      [attr.aria-required]=\"model.ariaRequired\" [attr.aria-label]=\"model.ariaLabel\"\n      [attr.aria-invalid]=\"model.ariaInvalid\" [attr.aria-errormessage]=\"model.ariaErrormessage\">\n      <option *ngIf=\"model.allowClear\" value=\"\">{{ model.placeholder }}</option>\n      <ng-template *ngFor=\"let item of model.visibleChoices\" [component]=\"{ name: 'sv-dropdown-option-item', data: { item } }\"></ng-template>\n    </select>\n    <div *ngIf=\"model.isReadOnly\" disabled [class]=\"model.getControlClass()\" [attr.id]=\"model.inputId\">{{ model.readOnlyText }}</div>\n    <div *ngIf=\"model.cssClasses.chevronButtonIconId\" [class]=\"model.cssClasses.chevronButton\">\n      <svg [iconName]=\"model.cssClasses.chevronButtonIconId\" [partCss]=\"model.cssClasses.chevronButtonSvg\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n    </div>\n  </div>\n  <div *ngIf=\"model.isOtherSelected\" [class]=\"model.getCommentAreaCss(true)\"\n    [style.display]=\"model.isFlowLayout ? 'inline': '' \" [question]=\"model\" sv-ng-comment-other></div>\n</div>","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { DomSanitizer, SafeResourceUrl, SafeUrl } from \"@angular/platform-browser\";\n\n//temp: disables angular sanitizer, which breaks a links\n@Pipe({ name: \"safeUrl\" })\nexport class SafeUrlPipe implements PipeTransform {\n  constructor(private domSanitizer: DomSanitizer) {}\n  transform(url: string): SafeUrl {\n    return this.domSanitizer.bypassSecurityTrustUrl(url);\n  }\n}\n\n@Pipe({ name: \"safeResourceUrl\" })\nexport class SafeResourceUrlPipe implements PipeTransform {\n  constructor(private domSanitizer: DomSanitizer) {}\n  transform(url: string): SafeResourceUrl {\n    return this.domSanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n}","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\nimport { SurveyModel } from \"survey-core\";\n@Component({\n  selector: \"sv-logo-image\",\n  templateUrl: \"./logo-image.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class LogoImageComponent extends EmbeddedViewContentComponent {\n  @Input() data!: SurveyModel;\n  get survey(): SurveyModel {\n    return this.data;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-logo-image\", LogoImageComponent);","<ng-template #template>\n  <div [class]=\"survey.logoClassNames\">\n    <img\n    [class]=\"survey.css.logoImage\"\n    [attr.src]=\"survey.locLogo.renderedHtml | safeUrl\"\n    [style.width]=\"survey.renderedStyleLogoWidth\"\n    [style.height]=\"survey.renderedStyleLogoHeight\"\n    [attr.width]=\"survey.renderedLogoWidth\"\n    [attr.height]=\"survey.renderedLogoHeight\"\n    [attr.alt]=\"survey.locTitle.renderedHtml\"\n    [style.objectFit]=\"survey.logoFit\"\n    />\n  </div>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { CharacterCounter } from \"survey-core\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { BaseAngular } from \"../../base-angular\";\n\n@Component({\n  selector: \"sv-ng-character-counter\",\n  templateUrl: \"./character-counter.component.html\",\n  styles: [\":host { display: none; }\"],\n  })\nexport class CharacterCounterComponent extends BaseAngular {\n  @Input() counter!: CharacterCounter;\n  @Input() remainingCharacterCounter!: string;\n\n  getModel() {\n    return this.counter;\n  }\n\n}\n\nAngularComponentFactory.Instance.registerComponent(\"character-counter\", CharacterCounterComponent);","<ng-template #template>\n  <div [class]=\"remainingCharacterCounter\">{{ counter.remainingCharacterCounter }}</div>\n</ng-template>","import { Component, ElementRef, ViewChild } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { Helpers, QuestionTextModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-text-question\",\n  templateUrl: \"./text.component.html\",\n  styleUrls: [\"./text.component.scss\"]\n})\nexport class TextQuestionComponent extends QuestionAngular<QuestionTextModel> {\n  @ViewChild(\"inputElement\") inputElementRef!: ElementRef<HTMLDivElement>;\n\n  get value(): string {\n    return this.model.inputValue ?? \"\";\n  }\n\n  blur(event: any): void {\n    this.model.onBlur(event);\n    this.updateInputDomElement();\n  }\n\n  updateInputDomElement(): void {\n    if (!!this.inputElementRef?.nativeElement) {\n      const control: any = this.inputElementRef.nativeElement;\n      if (!Helpers.isTwoValueEquals(this.value, control.value, false, true, false)) {\n        control.value = this.value;\n      }\n    }\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"text-question\", TextQuestionComponent);","  <ng-container [ngTemplateOutlet]=\"input\" *ngIf=\"!model.dataListId && !model.isReadOnlyRenderDiv()\"></ng-container>\n  <div *ngIf=\"model.dataListId && !model.isReadOnlyRenderDiv()\">\n    <ng-container [ngTemplateOutlet]=\"input\"></ng-container>\n    <datalist [id]=\"model.dataListId\">\n      <option *ngFor=\"let dataListItem of model.dataList\" [value]=\"dataListItem\"></option>\n    </datalist>\n  </div>\n  <div *ngIf=\"model.isReadOnlyRenderDiv()\" #contentElement>{{ value }}</div>\n  <ng-template #input>\n    <input #inputElement [style]=\"model.inputStyle\" [class]=\"model.getControlClass()\" [attr.list]=\"model.dataListId\"\n    (change)=\"model.onChange($event)\" [value]=\"value\" [disabled]=\"model.isDisabledAttr\" [type]=\"model.inputType\" [id]=\"model.inputId\" [attr.placeholder]=\"model.renderedPlaceholder || ''\"\n    (keyup)=\"model.onKeyUp($event)\" (keydown)=\"model.onKeyDown($event)\" (blur)=\"blur($event)\" (focus)=\"model.onFocus($event)\" (compositionupdate)=\"model.onCompositionUpdate($event)\" \n    [attr.size] = \"model.renderedInputSize\" [attr.maxlength]= \"model.getMaxLength()\" [attr.min]=\"model.renderedMin\" [readonly]=\"model.isReadOnlyAttr\"\n    [attr.max]=\"model.renderedMax\" [attr.step]=\"model.renderedStep\" [attr.max]=\"model.renderedMax\" [attr.aria-required]=\"model.a11y_input_ariaRequired\"\n    [attr.aria-label]=\"model.a11y_input_ariaLabel\" [attr.aria-labelledby]=\"model.a11y_input_ariaLabelledBy\" [attr.aria-describedby]=\"model.a11y_input_ariaDescribedBy\"[attr.aria-invalid]=\"model.a11y_input_ariaInvalid\" [attr.aria-errormessage]=\"model.a11y_input_ariaErrormessage\" [attr.autocomplete]=\"model.autocomplete\" #contentElement/>\n    <sv-ng-character-counter *ngIf=\"model.getMaxLength()\" \n    [counter]=\"model.characterCounter\"\n    [remainingCharacterCounter]=\"model.cssClasses.remainingCharacterCounter\">\n  </sv-ng-character-counter>\n  </ng-template>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionHtmlModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n@Component({\n  selector: \"sv-ng-html-question\",\n  templateUrl: \"./html.component.html\",\n  styleUrls: []\n})\nexport class HtmlQuestionComponent extends QuestionAngular<QuestionHtmlModel> {\n  override onModelChanged(): void {\n    super.onModelChanged();\n    this.model.locHtml.onChanged = () => {\n      this.detectChanges();\n    };\n  }\n  override ngOnDestroy(): void {\n    this.model.locHtml.onChanged = () => {};\n    super.ngOnDestroy();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"html-question\", HtmlQuestionComponent);","<div [class]=\"model.renderCssRoot\" [innerHTML]=\"model.locHtml.renderedHtml | safeHtml\" #contentElement></div>","import { Component, Input } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { ItemValue, QuestionRadiogroupModel, QuestionSelectBase } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"['sv-ng-selectbase']\",\n  templateUrl: \"./selectbase.component.html\"\n})\nexport class SelectBaseComponent<T extends QuestionSelectBase> extends QuestionAngular<T> {\n  //#todo temp fix (CanClearButton should be placed in selectbase so it could work with imagepicker)\n  @Input() override model!: any;\n\n  public inputType: string = \"checkbox\";\n  public showLegend: boolean = true;\n\n  public getDefaultComponentName(): string {\n    return \"sv-ng-selectbase-item\";\n  }\n  public trackItemBy(_: number, item: ItemValue): any {\n    return item.value;\n  }\n  public trackColumnBy(index: number): any {\n    return index;\n  }\n\n  public getItemValueComponentName(item: ItemValue): string {\n    return this.model.getItemValueWrapperComponentName(item) || this.getDefaultComponentName();\n  }\n  public getItemValueComponentData(item: ItemValue): any {\n    const itemComponentProperty = this.model.getPropertyByName(\"itemComponent\");\n    const isDefaultItemComponent = itemComponentProperty.isDefaultValue(this.model.itemComponent);\n    const itemComponent = isDefaultItemComponent ? this.getDefaultComponentName() : this.model.itemComponent;\n\n    return {\n      componentName: itemComponent,\n      componentData: {\n        question: this.model,\n        model: item,\n        inputType: this.inputType,\n        data: this.model.getItemValueWrapperComponentData(item)\n      }\n    };\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"selectbase\", SelectBaseComponent);","<fieldset [class]=\"model.getSelectBaseRootCss()\" #contentElement \n  [attr.role]=\"model.a11y_input_ariaRole\"\n  [attr.aria-required]=\"model.a11y_input_ariaRequired\"\n  [attr.aria-label]=\"model.a11y_input_ariaLabel\"\n  [attr.aria-labelledby]=\"model.a11y_input_ariaLabelledBy\"\n  [attr.aria-describedby]=\"model.a11y_input_ariaDescribedBy\"\n  [attr.aria-invalid]=\"model.a11y_input_ariaInvalid\"\n  [attr.aria-errormessage]=\"model.a11y_input_ariaErrormessage\"\n>\n  <legend *ngIf=\"showLegend\" class=\"sv-hidden\">{{model.locTitle.renderedHtml}}</legend>\n  <ng-container *ngIf=\"model.hasHeadItems\">\n    <ng-container *ngFor=\"let item of model.headItems; trackBy: trackItemBy\">\n      <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\"></ng-template>\n    </ng-container>\n  </ng-container>\n  <ng-container *ngIf=\"!model.hasColumns && !model.blockedRow\">\n    <ng-container *ngFor=\"let item of model.bodyItems; trackBy: trackItemBy\" >\n      <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\"></ng-template>\n    </ng-container>\n  </ng-container>\n  <div [class]=\"model.cssClasses.rootRow\" *ngIf=\"!model.hasColumns && model.blockedRow\">\n    <ng-container *ngFor=\"let item of model.dataChoices; trackBy: trackItemBy\">\n      <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\"></ng-template>\n    </ng-container>\n  </div>\n  <ng-container *ngIf=\"model.hasColumns\">\n    <div [class]=\"model.cssClasses.rootMultiColumn\">\n      <div [class]=\"model.getColumnClass()\" *ngFor=\"let column of model.columns; trackBy: trackColumnBy\" role=\"presentation\">\n        <ng-container *ngFor=\"let item of column; trackBy: trackItemBy\">\n          <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\"></ng-template>\n        </ng-container>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"model.hasFootItems\">\n    <ng-container *ngFor=\"let item of model.footItems; trackBy: trackItemBy\">\n      <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\"></ng-template>\n    </ng-container>\n  </ng-container>\n  <div *ngIf=\"model.isOtherSelected\" [class]=\"model.getCommentAreaCss(true)\" [question]=\"model\" sv-ng-comment-other></div>\n  <div *ngIf=\"model.showClearButtonInContent\">\n    <input\n      type=\"button\"\n      (click)=\"model.clearValue(true)\"\n      [value]=\"model.clearButtonCaption\"\n      [class]=\"model.cssClasses.clearButton\"\n    />\n  </div>\n</fieldset>","import { Component } from \"@angular/core\";\nimport { QuestionRadiogroupModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { SelectBaseComponent } from \"./selectbase.component\";\n\n@Component({\n  selector: \"sv-ng-radiogroup-question\",\n  templateUrl: \"./selectbase.component.html\"\n})\nexport class RadiogroupComponent extends SelectBaseComponent<QuestionRadiogroupModel> {\n  override ngOnInit(): void {\n    this.inputType = \"radio\";\n    this.showLegend = false;\n    super.ngOnInit();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"radiogroup-question\", RadiogroupComponent);","import { Component, Input } from \"@angular/core\";\n@Component({\n  selector: \"sv-ng-radiogroup-item, '[sv-ng-radiogroup-item]'\",\n  templateUrl: \"./radiogroup-item.component.html\",\n  styleUrls: [\"./radiogroup-item.component.scss\"]\n})\nexport class RadiogroupItemComponent {\n  @Input() question: any;\n  @Input() model: any;\n  constructor() {\n  }\n}\n","<input type=\"radio\" [name]=\"question.questionName\" [attr.name]=\"question.questionName\" [id]=\"question.getItemId(model)\" [attr.aria-errormessage]=\"question.ariaErrormessage\" [class]=\"question.cssClasses.itemControl\"\n  [disabled]=\"!question.getItemEnabled(model)\" [readonly]=\"question.isReadOnlyAttr\" [(ngModel)]=\"question.renderedValue\" [attr.value]=\"model.value\" [value]=\"model.value\"\n/>\n<ng-content></ng-content>","import { Component } from \"@angular/core\";\nimport { QuestionCheckboxModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { SelectBaseComponent } from \"./selectbase.component\";\n\n@Component({\n  selector: \"sv-ng-checkbox-question\",\n  templateUrl: \"./selectbase.component.html\"\n})\nexport class CheckboxComponent extends SelectBaseComponent<QuestionCheckboxModel> {}\n\nAngularComponentFactory.Instance.registerComponent(\"checkbox-question\", CheckboxComponent);","import { Component, Input } from \"@angular/core\";\nimport { ItemValue, QuestionCheckboxModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-checkbox-item, '[sv-ng-checkbox-item]'\",\n  templateUrl: \"./checkbox-item.component.html\",\n  styleUrls: [\"./checkbox-item.component.scss\"]\n  })\nexport class CheckboxItemComponent {\n  @Input() question!: QuestionCheckboxModel;\n  @Input() model!: ItemValue;\n  constructor() {\n  }\n  onChange(event: any) {\n    this.question[\"clickItemHandler\"](this.model, event.target.checked);\n  }\n  onSelectAllChange(event: any) {\n    this.question.toggleSelectAll();\n  }\n}\n","<input type=\"checkbox\" [name]=\"question.name+model.id\" [id]=\"question.getItemId(model)\" [class]=\"question.cssClasses.itemControl\" [required]=\"question.hasRequiredError()\"\n  [disabled]=\"!question.getItemEnabled(model)\" [readonly]=\"question.isReadOnlyAttr\" [checked]=\"question.isItemSelected(model)\" [value]=\"model.value\" (change)=\"onChange($event)\"/>\n<ng-content></ng-content>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { QuestionDropdownModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-dropdown-question\",\n  templateUrl: \"./dropdown.component.html\"\n})\nexport class DropdownQuestionComponent extends QuestionAngular<QuestionDropdownModel> {\n}\n\nAngularComponentFactory.Instance.registerComponent(\"dropdown-question\", DropdownQuestionComponent);","<div [class]=\"model.renderCssRoot\" #contentElement>\n  <sv-ng-dropdown [model]=\"model\"></sv-ng-dropdown>\n  <div *ngIf=\"model.isOtherSelected\" [class]=\"model.getCommentAreaCss(true)\" [question]=\"model\" sv-ng-comment-other></div>\n</div>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { QuestionTagboxModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-tagbox-question\",\n  templateUrl: \"./tagbox.component.html\"\n})\nexport class TagboxQuestionComponent extends QuestionAngular<QuestionTagboxModel> {\n}\n\nAngularComponentFactory.Instance.registerComponent(\"tagbox-question\", TagboxQuestionComponent);","<div [class]=\"model.renderCssRoot\" #contentElement>\n  <sv-ng-tagbox [model]=\"model\"></sv-ng-tagbox>\n  <div *ngIf=\"model.isOtherSelected\" [class]=\"model.getCommentAreaCss(true)\" [question]=\"model\" sv-ng-comment-other></div>\n</div>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionRatingModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-rating-question\",\n  templateUrl: \"./rating.component.html\"\n})\nexport class RatingQuestionComponent extends QuestionAngular<QuestionRatingModel> {\n  trackByFn(index: number): number {\n    return index;\n  }\n  public onClick(event: any) {\n    event.stopPropagation();\n    this.model.setValueFromClick(event.target.value);\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"rating-question\", RatingQuestionComponent);","  <div [class]=\"model.ratingRootCss\" #contentElement>\n      <fieldset role=\"radiogroup\">\n          <legend role=\"presentation\" class=\"sv-hidden\"></legend>\n          <span *ngIf=\"model.hasMinLabel\" [class]=\"model.cssClasses.minText\" [model]=\"model.locMinRateDescription\" sv-ng-string>\n          </span>\n          <ng-template *ngFor=\"let item of model.renderedRateItems; index as index; trackBy: trackByFn\" [component]=\"{ name: model.itemComponent, data: {model: model, item: item, index: index }}\"></ng-template>\n          <span *ngIf=\"model.hasMaxLabel\" [class]=\"model.cssClasses.maxText\" [model]=\"model.locMaxRateDescription\" sv-ng-string></span>\n      </fieldset>\n  </div>\n","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionBooleanModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-boolean-question\",\n  templateUrl: \"./boolean.component.html\"\n})\nexport class BooleanQuestionComponent extends QuestionAngular<QuestionBooleanModel> {\n  onChange(event: any) {\n    this.model.booleanValue = event.target.value;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"boolean-question\", BooleanQuestionComponent);","<div [class]=\"model.cssClasses.root\" (keydown)=\"model.onKeyDownCore($event)\" #contentElement>\n    <label [class]=\"model.getItemCss()\">\n      <input\n        type=\"checkbox\"\n        [attr.name]=\"model.name\" [attr.id]=\"model.inputId\" \n        [attr.role]=\"model.a11y_input_ariaRole\"\n        [attr.aria-required]=\"model.a11y_input_ariaRequired\"\n        [attr.aria-label]=\"model.a11y_input_ariaLabel\"\n        [attr.aria-labelledby]=\"model.a11y_input_ariaLabelledBy\"\n        [attr.aria-describedby]=\"model.a11y_input_ariaDescribedBy\"\n        [attr.aria-invalid]=\"model.a11y_input_ariaInvalid\"\n        [attr.aria-errormessage]=\"model.a11y_input_ariaErrormessage\"\n        [class]=\"model.cssClasses.control\" [disabled]=\"model.isDisabledAttr\" [readonly]=\"model.isReadOnlyAttr\"  [indeterminate]=\"model.isIndeterminate\" [value]=\"model.booleanValue\" [(ngModel)]=\"model.booleanValue\" />\n      <div [class]=\"model.cssClasses.sliderGhost\" (click)=\"model.onLabelClick($event, model.swapOrder)\">\n        <span [class]=\"model.getLabelCss(model.swapOrder)\" [model]=\"model.locLabelLeft\" sv-ng-string></span>\n      </div>\n      <div [class]=\"model.cssClasses.switch\" (click)=\"model.onSwitchClickModel($event)\">\n        <span [class]=\"model.cssClasses.slider\">\n            <span *ngIf=\"model.cssClasses.sliderText && model.isDeterminated\" [class]=\"model.cssClasses.sliderText\" [model]=\"model.getCheckedLabel()\" sv-ng-string></span>\n        </span>\n      </div>\n      <div [class]=\"model.cssClasses.sliderGhost\" (click)=\"model.onLabelClick($event, !model.swapOrder)\">\n        <span [class]=\"model.getLabelCss(!model.swapOrder)\" [model]=\"model.locLabelRight\"  sv-ng-string></span>\n      </div>\n    </label>\n</div>","import { AfterViewInit, Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\nimport { ImageItemValue, QuestionImagePickerModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n@Component({\n  selector: \"sv-ng-imagepicker-item\",\n  templateUrl: \"./imagepicker-item.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class ImagePickerItemComponent extends BaseAngular<ImageItemValue> implements AfterViewInit {\n  @Input() question!: QuestionImagePickerModel;\n  @Input() model!: ImageItemValue;\n  protected getModel(): ImageItemValue {\n    return this.model;\n  }\n  onChange(event: any) {\n    if (this.question.isReadOnlyAttr) return;\n    if (this.question.multiSelect) {\n      if (event.target.checked) {\n        this.question.value = this.question.value.concat(event.target.value);\n      } else {\n        var currValue = this.question.value;\n        currValue.splice(this.question.value.indexOf(event.target.value), 1);\n        this.question.value = currValue;\n      }\n    } else {\n      this.question.value = event.target.value;\n    }\n  }\n  ngAfterViewInit(): void {\n    this.model.locImageLink.onChanged = () => {\n      this.detectChanges();\n    };\n  }\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.model.locImageLink.onChanged = () => {};\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-ng-imagepicker-item\", ImagePickerItemComponent);","<ng-template #template>\n  <div [class]=\"question.getItemClass(model)\">\n    <label [class]=\"question.cssClasses.label\">\n        <input [type]=\"question.inputType\" [attr.name]=\"question.questionName\" [attr.value]=\"model.value\" [id]=\"question.getItemId(model)\" [attr.aria-required]=\"question.ariaRequired\" [attr.aria-label]=\"question.ariaLabel\" [attr.aria-invalid]=\"question.ariaInvalid\" [attr.aria-errormessage]=\"question.ariaErrormessage\"\n        (change)=\"onChange($event)\" [checked]=\"question.isItemSelected(model)\" [disabled]=\"!question.getItemEnabled(model)\" [readonly]=\"question.isReadOnlyAttr\" [class]=\"question.cssClasses.itemControl\"\n        />\n        <div [class]=\"question.cssClasses.itemDecorator\">\n            <div [class]=\"question.cssClasses.imageContainer\">\n              <span *ngIf=\"question.cssClasses.checkedItemDecorator\" [class]=\"question.cssClasses.checkedItemDecorator\">\n                <svg *ngIf=\"question.cssClasses.checkedItemSvgIconId\" [class]=\"question.cssClasses.checkedItemSvgIcon\" [iconName]=\"question.cssClasses.checkedItemSvgIconId\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n              </span>\n              <img *ngIf=\"model.locImageLink.renderedHtml && !model.contentNotLoaded && question.contentMode === 'image'\" [class]=\"question.cssClasses.image\" [attr.src]=\"model.locImageLink.renderedHtml\" [attr.width]=\"question.renderedImageWidth\" [attr.height]=\"question.renderedImageHeight\" [attr.alt]=\"model.locText.renderedHtml\"  [style.objectFit]=\"question.imageFit\" (load)=\"question.onContentLoaded(model, $event)\" (error)=\"model.onErrorHandler()\"/>\n              <video *ngIf=\"model.locImageLink.renderedHtml && !model.contentNotLoaded && question.contentMode === 'video'\" controls [class]=\"question.cssClasses.image\" [attr.src]=\"model.locImageLink.renderedHtml\" [attr.width]=\"question.renderedImageWidth\" [attr.height]=\"question.renderedImageHeight\" [style.objectFit]=\"question.imageFit\" (loadedmetadata)=\"question.onContentLoaded(model, $event)\" (error)=\"model.onErrorHandler()\"></video>\n              <div *ngIf=\"!model.locImageLink.renderedHtml || model.contentNotLoaded\" [class]=\"question.cssClasses.itemNoImage\" [style.width]=\"question.renderedImageWidth + 'px'\" [style.height]=\"question.renderedImageHeight + 'px'\" [style.objectFit]=\"question.imageFit\">\n                <svg *ngIf=\"question.cssClasses.itemNoImageSvgIconId\" [class]=\"question.cssClasses.itemNoImageSvgIcon\" [iconName]=\"question.cssClasses.itemNoImageSvgIconId\" [size]=\"48\" sv-ng-svg-icon></svg>\n              </div>\n            </div>\n            <span *ngIf=\"question.showLabel\" [class]=\"question.cssClasses.itemText\" [model]=\"model.locText\" sv-ng-string></span>\n        </div>\n    </label>\n  </div>\n</ng-template>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { ImageItemValue, ItemValue, QuestionImagePickerModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-imagepicker-question\",\n  templateUrl: \"./imagepicker.component.html\"\n})\nexport class ImagePickerQuestionComponent extends QuestionAngular<QuestionImagePickerModel> {\n  public getItemValueComponentName(item: ItemValue): string {\n    return this.model.getItemValueWrapperComponentName(item) || \"sv-ng-imagepicker-item\";\n  }\n  public getItemValueComponentData(item: ItemValue): any {\n    return {\n      componentName: \"sv-ng-imagepicker-item\",\n      componentData: {\n        question: this.model,\n        model: item,\n        data: this.model.getItemValueWrapperComponentData(item)\n      }\n    };\n  }\n\n}\n\nAngularComponentFactory.Instance.registerComponent(\"imagepicker-question\", ImagePickerQuestionComponent);","  <fieldset [class]=\"model.getSelectBaseRootCss()\" #contentElement>\n      <legend class=\"sv-hidden\">{{model.locTitle.renderedHtml}}</legend>\n      <ng-container *ngIf=\"!model.hasColumns\">\n        <ng-container *ngFor=\"let item of model.visibleChoices\">\n          <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\"></ng-template>\n        </ng-container>\n      </ng-container>\n      <ng-container *ngIf=\"model.hasColumns\">\n        <div *ngFor=\"let column of model.columns\" [class]=\"model.getColumnClass()\" role=\"presentation\">\n          <ng-container *ngFor=\"let item of column\">\n            <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\"></ng-template>\n          </ng-container>\n        </div>\n      </ng-container>\n  </fieldset>","import { Component, Input, OnChanges } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { ButtonGroupItemModel, ItemValue, QuestionButtonGroupModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-button-group-item\",\n  templateUrl: \"./button-group-item.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class ButtonGroupItemComponent extends BaseAngular<ItemValue> implements OnChanges {\n  @Input() item!: ItemValue;\n  @Input() question!: QuestionButtonGroupModel;\n  @Input() index!: number;\n  public model!: ButtonGroupItemModel;\n  public ngOnChanges(): void {\n    this.model = new ButtonGroupItemModel(this.question, this.item, this.index);\n  }\n  protected getModel(): ItemValue {\n    return this.item;\n  }\n}","<ng-template #template>\n  <label role=\"radio\" [class]=\"model.css.label\" [attr.title]=\"model.caption.renderedHtml\">\n    <input type=\"radio\"\n      [attr.name]=\"model.name\" [attr.id]=\"model.id\" [attr.aria-required]=\"model.isRequired\" [attr.aria-label]=\"model.caption.renderedHtml\" role=\"radio\" [attr.aria-invalid]=\"model.hasErrors\" [attr.aria-errormessage]=\"model.describedBy\" [disabled]=\"model.readOnly\" [class]=\"model.css.control\" [(ngModel)]=\"question.renderedValue\" [attr.value]=\"model.value\" [value]=\"model.value\"/>\n    <div data-bind=\"css: model.css.decorator\">\n      <svg *ngIf=\"model.iconName\" [iconName]=\"model.iconName\" [size]=\"model.iconSize\" [class]=\"model.css.icon\" sv-ng-svg-icon></svg>\n      <span [class]=\"model.css.caption\" *ngIf=\"model.showCaption\" [attr.title]=\"model.caption.renderedHtml\" sv-ng-string [model]=\"model.caption\">\n      </span>\n    </div>\n  </label>\n</ng-template>","\nimport { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../../question\";\nimport { QuestionButtonGroupModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-buttongroup-question\",\n  templateUrl: \"./button-group.component.html\"\n})\nexport class ButtonGroupQuestionComponent extends QuestionAngular<QuestionButtonGroupModel> {\n}","<div role=\"group\" [class]=\"model.cssClasses.root\">\n  <sv-button-group-item *ngFor=\"let item of model.visibleChoices; index as index\" [question]=\"model\" [item]=\"item\" [index]=\"index\" ></sv-button-group-item>\n</div>\n","import { Component, Input, TemplateRef, ViewContainerRef, OnChanges, OnInit, SimpleChanges, ChangeDetectorRef } from \"@angular/core\";\nimport { SurveyModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"./component-factory\";\nimport { EmbeddedViewContentComponent } from \"./embedded-view-content.component\";\n\n@Component({\n  selector: \"sv-components-container, [sv-components-container], sv-ng-components-container\",\n  templateUrl: \"./components-container.component.html\",\n  styleUrls: [\"./hide-host.scss\"]\n})\nexport class ComponentsContainerComponent extends EmbeddedViewContentComponent {\n  @Input() survey!: SurveyModel;\n  @Input() container!: string;\n  @Input() needRenderWrapper?: boolean;\n  get components(): Array<any> {\n    return this.survey.getContainerContent(this.container as any);\n  }\n  get isNeedRenderWrapper(): boolean {\n    return this.needRenderWrapper === false ? false : true;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-components-container\", ComponentsContainerComponent);","<ng-template #template>\n  <ng-container *ngIf=\"isNeedRenderWrapper\">\n    <div *ngIf=\"components.length > 0\" [class]=\"'sv-components-column' + ' sv-components-container-' + container\">\n      <ng-container *ngFor=\"let component of components\">\n        <ng-template [component]=\"{ name: component.component, data: { survey: survey, container: container, model: component.data } }\"></ng-template>\n      </ng-container>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"!isNeedRenderWrapper && components.length > 0\">\n    <ng-container *ngFor=\"let component of components\">\n      <ng-template [component]=\"{ name: component.component, data: { survey: survey, container: container, model: component.data } }\"></ng-template>\n    </ng-container>\n  </ng-container>\n</ng-template>","import { Directive, ElementRef, Input, SimpleChanges, OnChanges, OnDestroy } from \"@angular/core\";\nimport { doKey2ClickDown, doKey2ClickUp, doKey2ClickBlur, IAttachKey2clickOptions } from \"survey-core\";\n\n@Directive({\n  selector: \"[key2click]\"\n})\nexport class Key2ClickDirective implements OnChanges, OnDestroy {\n  static defaultOptions: IAttachKey2clickOptions = { processEsc: true, disableTabStop: false };\n  private isSubscribed = false;\n\n  options?: IAttachKey2clickOptions = { ...Key2ClickDirective.defaultOptions };\n  @Input() key2click?: IAttachKey2clickOptions;\n\n  private onkeydown (evt: any) {\n    doKey2ClickDown(evt, this.options);\n  }\n  private onkeyup = (evt: any) => {\n    evt.preventDefault();\n    evt.stopPropagation();\n    doKey2ClickUp(evt, this.options);\n    return false;\n  }\n  private blur (evt: any) {\n    doKey2ClickBlur(evt);\n  }\n  constructor(private el: ElementRef) {\n    this.subscribeEventListeners();\n  }\n\n  get element() {\n    return this.el.nativeElement;\n  }\n\n  subscribeEventListeners() {\n    if(this.isSubscribed) return;\n\n    this.element.tabIndex = 0;\n    this.element.addEventListener(\"keyup\", this.onkeyup.bind(this));\n    this.element.addEventListener(\"keydown\", this.onkeydown.bind(this));\n    this.element.addEventListener(\"blur\", this.blur);\n\n    this.isSubscribed = true;\n  }\n  unsubscribeEventListeners() {\n    if(!this.isSubscribed) return;\n\n    this.element.tabIndex = -1;\n    this.element.removeEventListener(\"keyup\", this.onkeyup.bind(this));\n    this.element.removeEventListener(\"keydown\", this.onkeydown.bind(this));\n    this.element.removeEventListener(\"blur\", this.blur);\n\n    this.isSubscribed = false;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const curValue = changes[\"key2click\"].currentValue;\n    if(curValue.disableTabStop) {\n      this.unsubscribeEventListeners();\n    } else {\n      this.subscribeEventListeners();\n    }\n    this.options = Object.assign({}, Key2ClickDirective.defaultOptions, curValue);\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeEventListeners();\n  }\n}","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-action-bar-item\",\n  templateUrl: \"./action-bar-item.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class ActionBarItemComponent extends BaseAngular {\n  @Input() model: any;\n\n  getModel() {\n    return this.model;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-action-bar-item\", ActionBarItemComponent);","<ng-template #template>\n  <button type=\"button\" (click)=\"model.doAction($event)\" (mousedown)=\"model.doMouseDown($event)\" (focus)=\"model.doFocus($event)\" [key2click]=\"{ processEsc: false, disableTabStop: model.disableTabStop }\" [class]=\"model.getActionBarItemCss()\" [attr.title]=\"model.tooltip || model.title\" [attr.aria-checked]=\"model.ariaChecked\" [attr.aria-expanded]=\"model.ariaExpanded\" [attr.role]=\"model.ariaRole\" [disabled]=\"model.disabled\">\n    <svg *ngIf=\"model.iconName\" [iconName]=\"model.iconName\" [size]=\"model.iconSize\" [title]=\"model.tooltip || model.title\" [class]=\"model.cssClasses.itemIcon\" sv-ng-svg-icon></svg>\n    <span *ngIf=\"model.hasTitle\" [class]=\"model.getActionBarItemTitleCss()\">{{ model.title }}</span>\n  </button>\n<ng-template>","import { Component, Input } from \"@angular/core\";\nimport { ActionDropdownViewModel, getActionDropdownButtonTarget } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-action-bar-item-dropdown\",\n  templateUrl: \"./action-bar-item-dropdown.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class ActionBarItemDropdownComponent extends BaseAngular {\n  @Input() model: any\n  public getTarget: (container: HTMLElement) => HTMLElement = getActionDropdownButtonTarget;\n  protected viewModel!: ActionDropdownViewModel;\n\n  protected getModel() {\n    return this.model;\n  }\n  override ngOnInit(): void {\n    super.ngOnInit();\n    this.viewModel = new ActionDropdownViewModel(this.model);\n  }\n  override ngOnDestroy(): void {\n    this.viewModel.dispose();\n    super.ngOnDestroy();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-action-bar-item-dropdown\", ActionBarItemDropdownComponent);","<ng-template #template>\n    <button type=\"button\" (click)=\"model.action(model, model.getIsTrusted($event))\" [key2click]=\"{ processEsc: false, disableTabStop: model.disableTabStop }\" [class]=\"model.getActionBarItemCss()\" [title]=\"model.tooltip || model.title\" [disabled]=\"model.disabled\" [attr.role]=\"model.ariaRole\">\n        <svg *ngIf=\"model.iconName\" [iconName]=\"model.iconName\" [size]=\"model.iconSize\" [title]=\"model.tooltip || model.title\" [class]=\"model.cssClasses.itemIcon\" sv-ng-svg-icon></svg>\n        <span *ngIf=\"model.hasTitle\" [class]=\"model.getActionBarItemTitleCss()\">{{ model.title }}</span>\n    </button>\n    <sv-ng-popup [popupModel]=\"model.popupModel\" [getTarget]=\"getTarget\"></sv-ng-popup>\n</ng-template>","import { AfterViewInit, Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\nimport { ItemValue } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"['sv-ng-selectbase-item'], sv-ng-selebase-item\",\n  templateUrl: \"./selectbase-item.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class SelectBaseItemComponent extends BaseAngular<ItemValue> implements AfterViewInit {\n\n  @Input() question!: any;\n  @Input() model!: ItemValue | any;\n  @Input() inputType!: string;\n  @Input() showLabel: boolean = true;\n  @ViewChild(\"container\", { read: ElementRef }) container!: ElementRef<HTMLDivElement>\n  protected getModel(): ItemValue {\n    return this.model;\n  }\n  protected override onModelChanged(): void {\n    super.onModelChanged();\n    if(!this.question.isDesignMode) {\n      if(this.previousModel) {\n        this.previousModel.setRootElement(undefined as any);\n      }\n      if(this.model && this.container?.nativeElement) {\n        this.model.setRootElement(this.container.nativeElement)\n      }\n    }\n  }\n  ngAfterViewInit(): void {\n    if(this.model && this.container?.nativeElement && !this.question.isDesignMode) {\n      this.model.setRootElement(this.container.nativeElement)\n    }\n  }\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    if(this.model && !this.question.isDesignMode) {\n      this.model.setRootElement(undefined);\n    }\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-ng-selectbase-item\", SelectBaseItemComponent);","<ng-template #template>\n  <div role=\"presentation\" [class]=\"question.getItemClass(model)\" #container>\n    <ng-container [ngSwitch]=\"inputType\">\n      <label *ngSwitchCase=\"'checkbox'\" [class]=\"question.getLabelClass(model)\" [model]=\"model\" [question]=\"question\"\n        sv-ng-checkbox-item>\n        <ng-container *ngTemplateOutlet=\"itemDecorator\"></ng-container>\n      </label>\n      <label *ngSwitchCase=\"'radio'\" (mousedown)=\"question.onMouseDown()\" [class]=\"question.getLabelClass(model)\"\n        [model]=\"model\" [question]=\"question\" sv-ng-radiogroup-item>\n        <ng-container *ngTemplateOutlet=\"itemDecorator\"></ng-container>\n      </label>\n    </ng-container>\n    <ng-template #itemDecorator>\n      <span *ngIf=\"question.cssClasses.materialDecorator\" [class]=\"question.cssClasses.materialDecorator\">\n        <svg *ngIf=\"question.itemSvgIcon\" [class]=\"question.cssClasses.itemDecorator\">\n          <use [attr.xlink:href]=\"question.itemSvgIcon\"></use>\n        </svg>\n      </span>\n      <span [class]=\"question.getControlLabelClass(model)\" *ngIf=\"!model.hideCaption\">\n        <sv-ng-string [model]=\"model.locText\"></sv-ng-string>\n      </span>\n    </ng-template>\n  </div>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-skeleton\",\n  templateUrl: \"./skeleton.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class SkeletonComponent extends EmbeddedViewContentComponent {\n  @Input() element: any;\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-skeleton\", SkeletonComponent);","<ng-template #template>\n  <div class=\"sv-skeleton-element\" [id]=\"element.id\" [style.height]=\"element.skeletonHeight\"></div>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { Base, SurveyTimerModel } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component(\n  {\n    selector: \"sv-timerpanel\",\n    templateUrl: \"./timer-panel.component.html\",\n  }\n)\n\nexport class TimerPanelComponent extends BaseAngular<SurveyTimerModel> {\n  @Input() model!: SurveyTimerModel;\n  private readonly circleLengthValue = 440;\n\n  protected getStateElement(): Base {\n    return this.model;\n  }\n  protected getModel(): SurveyTimerModel {\n    return this.model;\n  }\n  public get circleLength(): number {\n    return this.circleLengthValue;\n  }\n  public get progress(): number {\n    return -this.model.progress * this.circleLength;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-timerpanel\", TimerPanelComponent);","<div *ngIf=\"model.isRunning && model.showTimerAsClock\" [class]=\"model.rootCss\">\n    <svg *ngIf=\"model.showProgress\" [class]=\"model.getProgressCss()\" [style.stroke-dasharray]=\"circleLength\" [style.stroke-dashoffset]=\"progress\" [size]=\"'auto'\" [iconName]=\"'icon-timercircle'\" sv-ng-svg-icon></svg>\n    <div [class]=\"model.textContainerCss\">\n        <span [class]=\"model.majorTextCss\">{{ model.clockMajorText }}</span>\n        <span *ngIf=\"model.clockMinorText\" [class]=\"model.minorTextCss\">{{ model.clockMinorText }}</span>\n    </div>\n</div>\n<div *ngIf=\"model.isRunning && !model.showTimerAsClock\" [class]='model.survey.getCss().timerRoot'>{{model.text}}</div>","import { AfterViewInit, Component, Input } from \"@angular/core\";\nimport { ListModel, Action, IAction } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-list-item, '[sv-ng-list-item]'\",\n  templateUrl: \"./list-item.component.html\",\n  styleUrls: [\"../../hide-host.scss\"],\n})\n\nexport class ListItemComponent extends BaseAngular implements AfterViewInit {\n  @Input() element: any;\n  @Input() model!: Action;\n  @Input() listModel!: ListModel;\n\n  get elementId() {\n    return (this.model as IAction)?.elementId;\n  }\n\n  get ariaSelected(): boolean | string {\n    return this.listModel.isItemSelected(this.model) || \"\";\n  }\n  get class(): string {\n    return this.listModel.getItemClass(this.model);\n  }\n  get paddingLeft(): string {\n    return this.listModel.getItemIndent(this.model);\n  }\n  click(event: any): void {\n    this.listModel.onItemClick(this.model);\n    event.stopPropagation();\n  }\n  pointerdown(event: any): void {\n    this.listModel.onPointerDown(event, this.model);\n  }\n  get itemComponent(): string {\n    return this.model.component || this.listModel.itemComponent;\n  }\n\n  getModel() {\n    return this.model;\n  }\n\n  ngAfterViewInit(): void {\n    this.listModel.onLastItemRended(this.model);\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-list-item\", ListItemComponent);","<ng-template #template>\n  <li role=\"option\" [key2click]=\"{ processEsc: false, disableTabStop: model.disableTabStop }\" [visible]=\"listModel.isItemVisible(model)\" [class]=\"class\" [attr.id]=\"elementId\" [attr.aria-selected]=\"ariaSelected ? 'true' : 'false'\" (click)=\"click($event)\" (pointerdown)=\"pointerdown($event)\">\n    <ng-container *ngIf=\"model.needSeparator\">\n    <div [class]=\"listModel.cssClasses.itemSeparator\"></div>\n    </ng-container>\n    <div [class]=\"listModel.cssClasses.itemBody\" [style.paddingInlineStart]=\"paddingLeft\" [attr.title]=\"model.locTitle.calculatedText\"\n    (mouseover)=\"listModel.onItemHover(model)\"\n    (mouseleave)=\"listModel.onItemLeave(model)\">\n    <ng-template [component]=\"{ name: itemComponent, data: { model: model, listModel: listModel } }\"></ng-template>\n    </div>\n  </li>\n</ng-template>","import { AfterViewInit, Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { Action } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-list, '[sv-ng-list]'\",\n  templateUrl: \"./list.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class ListComponent extends BaseAngular implements AfterViewInit {\n  @Input() model: any;\n  @ViewChild(\"listContainerElement\") listContainerElement!: ElementRef<HTMLDivElement>;\n\n  trackItemBy = (_: any, item: Action) => {\n    return item.id;\n  }\n  getModel() {\n    return this.model;\n  }\n  onGoToItems(event: Event): void {\n    this.model.goToItems(event);\n  }\n  onMouseDown(event: Event): void {\n    event.preventDefault();\n  }\n  onKeyDown(event: Event): void {\n    this.model.onKeyDown(event);\n  }\n  onMouseMove(event: Event): void {\n    this.model.onMouseMove(event);\n  }\n  protected override getPropertiesToUpdateSync(): string[] {\n    return [\"renderElements\"];\n  }\n  ngAfterViewInit(): void {\n    if (!!this.listContainerElement?.nativeElement) {\n      this.model.initListContainerHtmlElement(this.listContainerElement.nativeElement);\n    }\n  }\n  override ngOnDestroy(): void {\n    this.model.initListContainerHtmlElement(undefined as any);\n    super.ngOnDestroy();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-list\", ListComponent);","<ng-template #template>\n    <div [class]=\"model.cssClasses.root\" #listContainerElement>\n        <div *ngIf=\"model.showFilter\" [class]=\"model.cssClasses.filter\">\n            <div [class]=\"model.cssClasses.filterIcon\">\n                <svg [iconName]=\"'icon-search'\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n            </div>\n            <input type=\"text\" [class]=\"model.cssClasses.filterInput\" [(ngModel)]=\"model.filterString\"\n                [attr.aria-label]=\"model.filterStringPlaceholder || ''\"\n                [attr.placeholder]=\"model.filterStringPlaceholder || ''\" \n                (keyup)=\"onGoToItems($event)\" />\n                <button *ngIf=\"model.showSearchClearButton && !!model.filterString\" (click)=\"model.onClickSearchClearButton($event)\" [class]=\"model.cssClasses.searchClearButtonIcon\">\n                    <svg [iconName]=\"'icon-searchclear'\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n                </button>\n        </div>\n        <div [class]=\"model.cssClasses.emptyContainer\" [visible]=\"model.isEmpty\">\n            <div [class]=\"model.cssClasses.emptyText\" [attr.aria-label]=\"model.emptyMessage || ''\">{{ model.emptyMessage }}</div>\n        </div>\n        <ul *ngIf=\"model.renderElements\" [class]=\"model.getListClass()\" role=\"listbox\" [attr.id]=\"model.elementId\" [visible]=\"!model.isEmpty\" (mousedown)=\"onMouseDown($event)\" (keydown)=\"onKeyDown($event)\" (mousemove)=\"onMouseMove($event)\">\n            <sv-ng-list-item *ngFor=\"let item of model.renderedActions; trackBy: trackItemBy\" [listModel]=\"model\" [model]=\"item\"></sv-ng-list-item>\n            <!--ko foreach: model.renderedActions -->\n            <!-- ko component: { name: 'sv-list-item', params: { item: $data, model: $parent.model } } -->\n            <!-- /ko -->\n            <!-- /ko -->\n        </ul>\n    </div>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { ListModel, Action } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-list-item-content, '[sv-ng-list-item-content]'\",\n  templateUrl: \"./list-item-content.component.html\",\n  styleUrls: [\"../../hide-host.scss\"],\n})\n\nexport class ListItemContentComponent extends BaseAngular {\n  @Input() element: any;\n  @Input() model!: Action;\n  @Input() listModel!: ListModel;\n\n  getModel() {\n    return this.model;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-list-item-content\", ListItemContentComponent);","<ng-template #template>\n<svg *ngIf=\"model.iconName\" [class]=\"listModel.cssClasses.itemIcon\" [iconName]=\"model.iconName\" [size]=\"model.iconSize\"\n  sv-ng-svg-icon></svg>\n<sv-ng-string [model]=\"model.locTitle\"></sv-ng-string>\n<svg *ngIf=\"model.markerIconName\" [class]=\"model.cssClasses.itemMarkerIcon\" [iconName]=\"model.markerIconName\" [size]=\"model.markerIconSize\"\n  sv-ng-svg-icon></svg>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { ListModel, Action } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-list-item-group, '[sv-ng-list-item-group]'\",\n  templateUrl: \"./list-item-group.component.html\",\n  styleUrls: [\"../../hide-host.scss\"],\n})\n\nexport class ListItemGroupComponent extends BaseAngular {\n  @Input() element: any;\n  @Input() model!: Action;\n  @Input() listModel!: ListModel;\n\n  getModel() {\n    return this.model;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-list-item-group\", ListItemGroupComponent);","<ng-template #template>\n  <sv-ng-list-item-content [model]=\"model\" [listModel]=\"listModel\"></sv-ng-list-item-content>\n  <sv-ng-popup [popupModel]=\"model.popupModel\"></sv-ng-popup>\n</ng-template>","import { AfterViewInit, Component, Input } from \"@angular/core\";\nimport { ListModel, Action, QuestionRatingModel, RenderedRatingItem } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-rating-item\",\n  templateUrl: \"./rating-item.component.html\",\n  styleUrls: [\"../../hide-host.scss\"],\n})\n\nexport class RatingItemComponent extends BaseAngular {\n  @Input() element: any;\n  @Input() model!: QuestionRatingModel;\n  @Input() item!: RenderedRatingItem;\n  @Input() index!: number;\n\n  onClick(event: any): void {\n    this.model.setValueFromClick(event.target.value);\n    event.stopPropagation();\n  }\n\n  getModel() {\n    return this.item;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-rating-item\", RatingItemComponent);","<ng-template #template>\n  <label [class]=\"model.getItemClassByText(item.itemValue, item.text)\" (mousedown)=\"model.onMouseDown()\">\n    <input type=\"radio\"\n      class=\"sv-visuallyhidden\"\n      [attr.name]=\"model.questionName\" [attr.id]=\"model.getInputId(index)\" [value]=\"item.value\" [attr.aria-required]=\"model.ariaRequired\" [attr.aria-label]=\"model.ariaLabel\" [attr.aria-invalid]=\"model.ariaInvalid\" [attr.aria-errormessage]=\"model.ariaErrormessage\"\n      [disabled]=\"model.isDisabledAttr\" [readonly]=\"model.isReadOnlyAttr\" [checked]=\"model.value === item.value\" (click)=\"onClick($event)\"\n      />\n      <span [class]=\"model.cssClasses.itemText\" [attr.data-text]=\"item.text\" [model]=\"item.locText\" sv-ng-string></span>\n  </label>\n</ng-template>","import { AfterViewInit, Component, Input } from \"@angular/core\";\nimport { ListModel, Action, QuestionRatingModel, RenderedRatingItem } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-rating-item-star\",\n  templateUrl: \"./rating-item-star.component.html\",\n  styleUrls: [\"../../hide-host.scss\"],\n})\n\nexport class RatingItemStarComponent extends BaseAngular<RenderedRatingItem> {\n  @Input() element: any;\n  @Input() model!: QuestionRatingModel;\n  @Input() item!: RenderedRatingItem;\n  @Input() index!: number;\n\n  onClick(event: any): void {\n    this.model.setValueFromClick(event.target.value);\n    event.stopPropagation();\n  }\n\n  getModel() {\n    return this.item;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-rating-item-star\", RatingItemStarComponent);","<ng-template #template>\n  <label [class]=\"model.getItemClass(item.itemValue, item.highlight)\" (mouseover)=\"model.onItemMouseIn(item)\" (mouseout)=\"model.onItemMouseOut(item)\" (mousedown)=\"model.onMouseDown()\">\n    <input type=\"radio\"\n      class=\"sv-visuallyhidden\"\n      [attr.name]=\"model.questionName\" [attr.id]=\"model.getInputId(index)\" [value]=\"item.value\" [attr.aria-required]=\"model.ariaRequired\" [attr.aria-label]=\"model.ariaLabel\" [attr.aria-invalid]=\"model.ariaInvalid\" [attr.aria-errormessage]=\"model.ariaErrormessage\"\n      [disabled]=\"model.isDisabledAttr\" [readonly]=\"model.isReadOnlyAttr\" [checked]=\"model.value === item.value\" (click)=\"onClick($event)\"\n      />\n      <svg [iconName]=\"model.itemStarIcon\" [size]=\"'auto'\" [title]=\"item.text\" [class]=\"'sv-star'\" sv-ng-svg-icon></svg>\n      <svg [iconName]=\"model.itemStarIconAlt\" [size]=\"'auto'\" [title]=\"item.text\" [class]=\"'sv-star-2'\" sv-ng-svg-icon></svg>\n  </label>\n</ng-template>","import { AfterViewInit, Component, Input } from \"@angular/core\";\nimport { ListModel, Action, QuestionRatingModel, RenderedRatingItem } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-rating-item-smiley\",\n  templateUrl: \"./rating-item-smiley.component.html\",\n  styleUrls: [\"../../hide-host.scss\"],\n})\n\nexport class RatingItemSmileyComponent extends BaseAngular<RenderedRatingItem> {\n  @Input() element: any;\n  @Input() model!: QuestionRatingModel;\n  @Input() item!: RenderedRatingItem;\n  @Input() index!: number;\n\n  onClick(event: any): void {\n    this.model.setValueFromClick(event.target.value);\n    event.stopPropagation();\n  }\n\n  getModel() {\n    return this.item;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-rating-item-smiley\", RatingItemSmileyComponent);","<ng-template #template>\n  <label [style]=\"model.getItemStyle(item.itemValue, item.highlight)\" [class]=\"model.getItemClass(item.itemValue, item.highlight)\" (mouseover)=\"model.onItemMouseIn(item)\" (mouseout)=\"model.onItemMouseOut(item)\" (mousedown)=\"model.onMouseDown()\">\n    <input type=\"radio\"\n      class=\"sv-visuallyhidden\"\n      [attr.name]=\"model.questionName\" [attr.id]=\"model.getInputId(index)\" [value]=\"item.value\" [attr.aria-required]=\"model.ariaRequired\" [attr.aria-label]=\"model.ariaLabel\" [attr.aria-invalid]=\"model.ariaInvalid\" [attr.aria-errormessage]=\"model.ariaErrormessage\"\n      [disabled]=\"model.isDisabledAttr\" [readonly]=\"model.isReadOnlyAttr\" [checked]=\"model.value === item.value\" (click)=\"onClick($event)\"\n      />\n      <svg [iconName]=\"model.getItemSmileyIconName(item.itemValue)\" [size]=\"'auto'\" [title]=\"item.text\" sv-ng-svg-icon></svg>\n  </label>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../../../base-angular\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-rating-dropdown-item, '[sv-ng-rating-dropdown-item]'\",\n  templateUrl: \"./rating-dropdown-item.component.html\",\n  styleUrls: [\"../../../hide-host.scss\"],\n})\n\nexport class RatingDropdownItemComponent extends BaseAngular {\n  @Input() element: any;\n  @Input() model!: any;\n\n  getModel() {\n    return this.model;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-rating-dropdown-item\", RatingDropdownItemComponent);","<ng-template #template>\n  <div class=\"sd-rating-dropdown-item\">\n    <span class=\"sd-rating-dropdown-item_text\">{{model.title}}</span>\n    <ng-container *ngIf=\"!!model.description\">\n    <div class=\"sd-rating-dropdown-item_description\">\n      <sv-ng-string [model]=\"model.description\"></sv-ng-string>\n    </div>\n    </ng-container>\n  </div>\n</ng-template>","\nimport { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\nimport { RendererFactory } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-rating-dropdown-question\",\n  templateUrl: \"./rating-dropdown.component.html\"\n})\nexport class RatingDropdownComponent {\n  @Input() model: any;\n}\n\nAngularComponentFactory.Instance.registerComponent(\"rating-dropdown-question\", RatingDropdownComponent);\nRendererFactory.Instance.registerRenderer(\n  \"rating\",\n  \"dropdown\",\n  \"rating-dropdown-question\"\n);\n","<div [class]=\"model.cssClasses.rootDropdown\">\n    <sv-ng-dropdown [model]=\"model\"></sv-ng-dropdown>\n</div>","\nimport { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\nimport { RendererFactory } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-boolean-checkbox-question\",\n  templateUrl: \"./boolean-checkbox.component.html\"\n})\nexport class BooleanCheckboxComponent {\n  @Input() model: any;\n}\n\nAngularComponentFactory.Instance.registerComponent(\"boolean-checkbox-question\", BooleanCheckboxComponent);\nRendererFactory.Instance.registerRenderer(\n  \"boolean\",\n  \"checkbox\",\n  \"boolean-checkbox-question\"\n);\n","<div [class]=\"model.cssClasses.rootCheckbox\">\n  <div [class]=\"model.getCheckboxItemCss()\">\n    <label [class]=\"model.cssClasses.checkboxLabel\">\n      <input\n        type=\"checkbox\"\n        [value]=\"model.booleanValue\" [class]=\"model.cssClasses.controlCheckbox\" \n        [attr.name]=\"model.name\" [id]=\"model.inputId\" [attr.aria-required]=\"model.ariaRequired\" [attr.aria-label]=\"model.ariaLabel\"\n        [attr.aria-invalid]=\"model.ariaInvalid\" [attr.aria-errormessage]=\"model.ariaErrormessage\" [(ngModel)]=\"model.booleanValue\" [value]=\"model.booleanValue\"\n        [disabled]=\"model.isDisabledAttr\" [readonly]=\"model.isReadOnlyAttr\" [indeterminate]=\"model.isIndeterminate\"\n      />\n      <span [class]=\"model.cssClasses.checkboxMaterialDecorator\">\n        <svg *ngIf=\"!!model.svgIcon\" [class]=\"model.cssClasses.checkboxItemDecorator\">\n          <use [attr.xlink:href]=\"model.svgIcon\"></use>\n        </svg>\n        <span class=\"check\"></span>\n      </span>\n      <span *ngIf=\"model.isLabelRendered\" [class]=\"model.cssClasses.checkboxControlLabel\" [id]=\"model.labelRenderedAriaID\">\n        <sv-ng-element-title-actions [element]=\"model\"></sv-ng-element-title-actions>\n      </span>\n    </label>\n    <div *ngIf=\"model.canRenderLabelDescription\" [class]=\"model.cssDescription\" [attr.id]=\"model.ariaDescriptionId\" [model]=\"model.locDescription\" sv-ng-string></div>\n  </div>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { LocalizableString, QuestionBooleanModel } from \"survey-core\";\n@Component({\n  selector: \"sv-ng-boolean-radio-item\",\n  templateUrl: \"boolean-radio-item.component.html\",\n})\nexport class BooleanRadioItemComponent {\n  @Input() question!: QuestionBooleanModel;\n  @Input() value!: boolean;\n  @Input() locText!: LocalizableString;\n  constructor() {\n\n  }\n}\n","<div role=\"presentation\" [class]=\"question.getRadioItemClass(question.cssClasses, value)\">\n  <label [class]=\"question.cssClasses.radioLabel\">\n    <input\n      type=\"radio\"\n      [attr.name]=\"question.name\" [attr.aria-errormessage]=\"question.ariaErrormessage\" [value]=\"value\" [(ngModel)]=\"question.booleanValue\"\n      [disabled]=\"question.isDisabledAttr\" [readonly]=\"question.isReadOnlyAttr\" [class]=\"question.cssClasses.itemRadioControl || ''\"\n    />\n    <span *ngIf=\"question.cssClasses.materialRadioDecorator\" [class]=\"question.cssClasses.materialRadioDecorator\">\n      <svg\n        *ngIf=\"question.itemSvgIcon\"\n        [class]=\"question.cssClasses.itemRadioDecorator\"\n      >\n        <use [attr.xlink:href]=\"question.itemSvgIcon\"></use>\n      </svg>\n    </span>\n    <span [class]=\"question.cssClasses.radioControlLabel\" [model]=\"locText\" sv-ng-string>\n    </span>\n  </label>\n</div>\n","\nimport { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\nimport { QuestionBooleanModel, RendererFactory } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-boolean-radio-question\",\n  templateUrl: \"./boolean-radio.component.html\"\n})\nexport class BooleanRadioComponent {\n  @Input() model!: QuestionBooleanModel;\n}\n\nAngularComponentFactory.Instance.registerComponent(\"boolean-radio-question\", BooleanRadioComponent);\nRendererFactory.Instance.registerRenderer(\n  \"boolean\",\n  \"radio\",\n  \"boolean-radio-question\"\n);\n","<div [class]=\"model.cssClasses.rootRadio\">\n  <fieldset role=\"presentation\" [class]=\"model.cssClasses.radioFieldset\">\n    <sv-ng-boolean-radio-item *ngIf=\"model.swapOrder\" [value]=\"true\" [locText]=\"model.locLabelTrue\" [question]=\"model\" ></sv-ng-boolean-radio-item>\n    <sv-ng-boolean-radio-item  [value]=\"false\" [locText]=\"model.locLabelFalse\" [question]=\"model\" ></sv-ng-boolean-radio-item>\n    <sv-ng-boolean-radio-item *ngIf=\"!model.swapOrder\" [value]=\"true\" [locText]=\"model.locLabelTrue\" [question]=\"model\" ></sv-ng-boolean-radio-item>\n  </fieldset>\n</div>\n","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\nimport { SurveyProgressModel } from \"survey-core\";\nimport { EmbeddedViewContentComponent } from \"../../../embedded-view-content.component\";\n\n@Component({\n  selector: \"sv-ng-progress-default\",\n  templateUrl: \"./progress.component.html\"\n})\nexport class ProgressDefaultComponent extends EmbeddedViewContentComponent {\n  @Input() container?: string;\n  @Input() model: any;\n  getProgressTextInBarCss(css: any): string {\n    return SurveyProgressModel.getProgressTextInBarCss(css);\n  }\n  getProgressTextUnderBarCss(css: any): string {\n    return SurveyProgressModel.getProgressTextUnderBarCss(css);\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-progress\", ProgressDefaultComponent);\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-pages\", ProgressDefaultComponent);\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-questions\", ProgressDefaultComponent);\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-correctquestions\", ProgressDefaultComponent);\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-requiredquestions\", ProgressDefaultComponent);","<ng-template #template>\n  <div [class]=\"model.getProgressCssClasses(container)\">\n    <div [class]=\"model.css.progressBar\" [style.width]=\"model.progressValue + '%'\"\n        role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\" aria-label=\"progress\">\n        <span [class]=\"getProgressTextInBarCss(model.css)\">\n          {{ model.progressText }}\n        </span>\n    </div>\n    <span [class]=\"getProgressTextUnderBarCss(model.css)\"> {{  model.progressText }} </span>\n  </div>\n</ng-template>","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewChild } from \"@angular/core\";\nimport { SurveyModel, ProgressButtons, ProgressButtonsResponsivityManager, IProgressButtonsViewModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-progress-buttons\",\n  templateUrl: \"./progress.component.html\"\n})\nexport class ProgressButtonsComponent implements OnDestroy, AfterViewInit, OnChanges, OnInit, IProgressButtonsViewModel {\n  @Input() model!: ProgressButtons;\n  @Input() survey!: SurveyModel;\n  @Input() container!: string;\n  @ViewChild(\"progressButtonsListContainer\") progressButtonsListContainer!: ElementRef<HTMLDivElement>;\n  public hasScroller: boolean = false;\n  public canShowHeader: boolean = false;\n  public canShowFooter: boolean = false;\n  public canShowItemTitles: boolean = true;\n  private respManager?: ProgressButtonsResponsivityManager;\n  constructor(private changeDetectorRef: ChangeDetectorRef) {\n  }\n  onResize(canShowItemTitles: boolean): void {\n    this.canShowItemTitles = canShowItemTitles;\n    this.canShowHeader = !this.canShowItemTitles;\n    this.changeDetectorRef.detectChanges();\n  }\n  onUpdateScroller(hasScroller: boolean): void {\n    this.hasScroller = hasScroller;\n    this.changeDetectorRef.detectChanges();\n  }\n  onUpdateSettings(): void {\n    this.canShowItemTitles = this.model.showItemTitles;\n    this.canShowFooter = !this.model.showItemTitles;\n    this.changeDetectorRef.detectChanges();\n  }\n  ngOnInit(): void {\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n  }\n  public clickScrollButton(\n    isLeftScroll: boolean\n  ): void {\n    if (this.progressButtonsListContainer) {\n      this.progressButtonsListContainer.nativeElement.scrollLeft += (isLeftScroll ? -1 : 1) * 70;\n    }\n  }\n  public ngAfterViewInit(): void {\n    if (!!this.progressButtonsListContainer?.nativeElement) {\n      const element = this.progressButtonsListContainer.nativeElement;\n      this.respManager = new ProgressButtonsResponsivityManager(this.model, element, this);\n    }\n  }\n  public ngOnDestroy(): void {\n    this.respManager?.dispose();\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-buttons\", ProgressButtonsComponent);\n","<div [class]=\"model.getRootCss(container)\" [style.maxWidth]=\"model.progressWidth\" role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\" aria-label=\"progress\">\n  <div *ngIf=\"canShowHeader\" [class]=\"survey.css.progressButtonsHeader\">\n    <div [class]=\"survey.css.progressButtonsPageTitle\" [title]=\"model.headerText\">{{ model.headerText }}</div>\n  </div>\n  <div [class]=\"survey.css.progressButtonsContainer\">\n    <div\n      [class]=\"model.getScrollButtonCss(hasScroller, true)\"\n      (click)=\"clickScrollButton(true)\"\n      role=\"button\"\n    ></div>\n    <div\n      [class]=\"survey.css.progressButtonsListContainer\" #progressButtonsListContainer>\n      <ul [class]=\"survey.css.progressButtonsList\">\n        <li\n          *ngFor=\"let page of survey.visiblePages; index as index\"\n          [class]=\"model.getListElementCss(index)\"\n          (click)=\"model.isListElementClickable(index) ? model.clickListElement(page) : null\"\n          [attr.data-page-number]=\"model.getItemNumber(page)\">\n          <div [class]=\"survey.css.progressButtonsConnector\"></div>\n          <div *ngIf=\"canShowItemTitles\"\n            [class]=\"survey.css.progressButtonsPageTitle\"\n            [title]=\"page.renderedNavigationTitle\"\n          >\n            <sv-ng-string [model]=\"page.locNavigationTitle\"></sv-ng-string>\n          </div>\n          <div *ngIf=\"canShowItemTitles\"\n            [class]=\"survey.css.progressButtonsPageDescription\"\n            [title]=\"page.locNavigationDescription.renderedHtml\"\n          >\n            {{ page.locNavigationDescription.renderedHtml }}\n          </div>\n          <div [class]=\"survey.css.progressButtonsButton\"><div [class]=\"survey.css.progressButtonsButtonBackground\"></div><div [class]=\"survey.css.progressButtonsButtonContent\"></div><span>{{model.getItemNumber(page)}}</span></div>\n        </li>\n      </ul>\n    </div>\n    <div\n      [class]=\"model.getScrollButtonCss(hasScroller, false)\"\n      (click)=\"clickScrollButton(false)\"\n      role=\"button\"\n    ></div>\n  </div>\n  <div *ngIf=\"canShowFooter\" [class]=\"survey.css.progressButtonsFooter\">\n    <div [class]=\"survey.css.progressButtonsPageTitle\" [title]=\"model.footerText\">{{ model.footerText }}</div>\n  </div>\n</div>","import { Component, Input, OnChanges, OnInit, SimpleChanges, ChangeDetectorRef } from \"@angular/core\";\nimport { EmbeddedViewContentComponent } from \"../../../embedded-view-content.component\";\nimport { createTOCListModel, getTocRootCss, ListModel, SurveyModel, TOCModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\n\n@Component({\n  selector: \"sv-navigation-toc, sv-ng-navigation-toc\",\n  templateUrl: \"./progress.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class ProgressTocComponent extends EmbeddedViewContentComponent implements OnChanges, OnInit {\n  @Input() model!: TOCModel;\n  override ngOnInit(): void {\n    super.ngOnInit();\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-navigation-toc\", ProgressTocComponent);\n","<ng-template #template>\n  <div [class]=\"model.containerCss\">\n    <sv-ng-list *ngIf=\"!model.isMobile\" [model]=\"model.listModel\"></sv-ng-list>\n    <div *ngIf=\"model.isMobile\" (click)=\"model.togglePopup()\" data-bind=\"key2click\">\n        <svg [iconName]=\"model.icon\" [size]=\"24\" sv-ng-svg-icon></svg>\n        <sv-ng-popup [popupModel]=\"model.popupModel\"></sv-ng-popup>\n    </div>\n  </div>  \n</ng-template>","import { AfterViewInit, Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { PanelModel } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\nimport { AngularComponentFactory } from \"./component-factory\";\n@Component({\n  selector: \"sv-ng-panel, '[sv-ng-panel]'\",\n  templateUrl: \"./panel.component.html\",\n})\nexport class PanelComponent extends BaseAngular<PanelModel> implements AfterViewInit {\n  @Input() model!: PanelModel;\n  @ViewChild(\"panelContainer\", { static: false, read: ElementRef }) panelContainerRef!: ElementRef<HTMLDivElement>;\n  protected getModel(): PanelModel {\n    return this.model;\n  }\n  ngAfterViewInit(): void {\n    if (!!this.panelContainerRef?.nativeElement) {\n      this.model.afterRender(this.panelContainerRef.nativeElement);\n    }\n  }\n  trackRowBy = (_: any, row: any) => {\n    return row.id;\n  }\n  public get canRender() {\n    return this.model && this.model.survey && this.model.getIsContentVisible();\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"panel\", PanelComponent);","<ng-template #template>\n  <div *ngIf=\"canRender\" [attr.id]=\"model.id\" [class]=\"model.getContainerCss()\" (focusin)=\"model.focusIn()\" #panelContainer>\n    <div *ngIf=\"model.showErrorsAbovePanel && model.hasVisibleErrors\" [element]=\"model\" sv-ng-errors></div>\n    <div *ngIf=\"model.hasDescription || model.hasTitle\" [element]=\"model\" sv-ng-element-header></div>\n    <div *ngIf=\"!model.showErrorsAbovePanel && model.hasVisibleErrors\" [element]=\"model\" sv-ng-errors></div>\n    <div *ngIf=\"model.renderedIsExpanded\" [style.paddingLeft]=\"model.innerPaddingLeft\" [class]=\"model.cssClasses.panel.content\" [attr.id]=\"model.contentId\">\n      <ng-container *ngFor=\"let row of model.visibleRows; trackBy: trackRowBy\">\n        <ng-template [component]=\"{ name: $any(model.survey).getRowWrapperComponentName(row), data: { componentData: $any(model.survey).getRowWrapperComponentData(row) } }\">\n          <sv-ng-row [row]=\"row\"></sv-ng-row>\n        </ng-template>\n      </ng-container>\n      <sv-ng-action-bar [model]=\"model.getFooterToolbar()\"></sv-ng-action-bar>\n    </div>\n  </div>\n</ng-template>","import { Action } from \"survey-core\";\nimport { Base } from \"survey-core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { Component, Input } from \"@angular/core\";\n\n@Component({\n  templateUrl: \"./survey-nav-btn.component.html\",\n  selector: \"sv-ng-nav-btn\",\n  styles: [\":host { display: contents; }\"]\n})\nexport class SurveyNavigationButton {\n  @Input() public model!: Action;\n  getModel(): Action {\n    return this.model;\n  }\n  buttonMouseDown(): Base {\n    return this.model.data && this.model.data.mouseDown();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-nav-btn\", SurveyNavigationButton);\n","<input *ngIf=\"model.visible\" type=\"button\" [value]=\"model.title\" [class]=\"model.innerCss\" (mousedown)=\"buttonMouseDown()\" (click)=\"model.action()\" [disabled]=\"model.disabled\" [attr.title]=\"model.getTooltip()\"/>","import { Component, Input } from \"@angular/core\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\nimport { QuestionFileModel } from \"survey-core\";\n\n@Component({\n  templateUrl: \"./file-item.component.html\",\n  selector: \"sv-ng-file-item\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class FileItemComponent extends EmbeddedViewContentComponent {\n    @Input() item!: any;\n    @Input() question!: QuestionFileModel;\n}","<ng-template #template>\n    <span [class]=\"question.cssClasses.previewItem\" (click)=\"question.doDownloadFileFromContainer($event)\">\n        <div *ngIf=\"item.name && question.cssClasses.fileSign\" [class]=\"question.cssClasses.fileSign\">\n            <a (click)=\"question.doDownloadFile($event, item)\" [attr.href]=\"item.content | safeUrl\"\n                [attr.title]=\"item.name\" [attr.download]=\"item.name\" [style.width]=\"question.imageWidth\">{{\n                item.name\n                }}</a>\n        </div>\n        <div [class]=\"question.getImageWrapperCss(item)\">\n            <img *ngIf=\"question.canPreviewImage(item)\" [attr.src]=\"item.content | safeUrl\"\n                [style.height]=\"question.imageHeight\" [style.width]=\"question.imageWidth\" alt=\"File preview\" />\n            <svg *ngIf=\"question.defaultImage(item)\" [iconName]=\"question.cssClasses.defaultImageIconId\"\n                [partCss]=\"question.cssClasses.defaultImage\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n            <div *ngIf=\"item.name && !question.isReadOnly\" [class]=\"question.getRemoveButtonCss()\"\n                (click)=\"question.doRemoveFile(item, $event)\">\n                <span [class]=\"question.cssClasses.removeFile\">{{ question.removeFileCaption }}</span>\n                <svg *ngIf=\"question.cssClasses.removeFileSvgIconId\" [title]=\"question.removeFileCaption\"\n                    [partCss]=\"question.cssClasses.removeFileSvg\" [iconName]=\"question.cssClasses.removeFileSvgIconId\"\n                    [size]=\"'auto'\" sv-ng-svg-icon></svg>\n            </div>\n        </div>\n        <div *ngIf=\"item.name && question.cssClasses.fileSignBottom\" [class]=\"question.cssClasses.fileSignBottom\">\n            <a (click)=\"question.doDownloadFile($event, item)\" [attr.href]=\"item.content | safeUrl\"\n                [attr.title]=\"item.name\" [attr.download]=\"item.name\" [style.width]=\"question.imageWidth\">{{\n                item.name\n                }}</a>\n        </div>\n    </span>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { QuestionFileModel, QuestionFilePage } from \"survey-core\";\n\n@Component({\n    templateUrl: \"./file-page.component.html\",\n    selector: \"sv-ng-file-page\",\n    styleUrls: [\"../../hide-host.scss\"]\n})\nexport class FilePageComponent extends BaseAngular<QuestionFilePage> {\n    @Input() page!: QuestionFilePage;\n    @Input() question!: QuestionFileModel;\n    protected override getModel() {\n        return this.page;\n    }\n}","<ng-template #template>\n    <div [class]=\"page.css\" [attr.id]=\"page.id\">\n        <ng-container *ngFor=\"let item of page.items\">\n            <sv-ng-file-item [item]=\"item\" [question]=\"question\"></sv-ng-file-item>\n        </ng-container>\n    </div>\n</ng-template>","import { Action, QuestionFileModel, QuestionFilePage } from \"survey-core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { Component, Input } from \"@angular/core\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\n@Component({\n  selector: \"sv-ng-file-preview\",\n  templateUrl: \"./file-preview.component.html\"\n})\nexport class FilePreviewComponent extends EmbeddedViewContentComponent {\n    @Input() question!: QuestionFileModel;\n    trackFilesFn: (index: number) => string = (index: number): string => {\n      return this.question.inputId + \"_\" + index;\n    }\n    trackPagesFn(_: number, page: QuestionFilePage): string {\n      return page.id;\n    }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-file-preview\", FilePreviewComponent);","<ng-template #template>\n    <ng-container *ngIf=\"question.showPreviewContainer\">\n        <div [class]=\"question.cssClasses.fileList || undefined\">\n            <ng-container *ngIf=\"question.supportFileNavigator\">\n                <sv-ng-file-page *ngFor=\"let page of question.renderedPages; trackBy: trackPagesFn\" [page]=\"page\" [question]=\"question\"></sv-ng-file-page>\n            </ng-container>\n            <ng-container *ngIf=\"!question.supportFileNavigator\">\n                <sv-ng-file-item *ngFor=\"let item of question.previewValue\" [item]=\"item\" [question]=\"question\"></sv-ng-file-item>\n            </ng-container>\n        </div>\n    </ng-container>\n</ng-template>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionMatrixModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-matrix-question\",\n  templateUrl: \"./matrix.component.html\",\n  styleUrls: [\"../hide-host.scss\"]\n})\nexport class MatrixQuestionComponent extends QuestionAngular<QuestionMatrixModel> {\n  override ngOnInit() {\n    this.model.visibleRowsChangedCallback = () => {\n      this.detectChanges();\n    };\n    super.ngOnInit();\n  }\n  public onCellChanged(row: any, column: any): void {\n    row.value = column.value;\n    this.detectChanges();\n  }\n  trackRowByFn(i: number, row: any): string {\n    return \"column-\" + row.name + \"-\" + i;\n  }\n  trackColumnByFn(i: number, column: any): string {\n    return \"column-\" + column.value + \"-\" + i;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"matrix-question\", MatrixQuestionComponent);","<ng-template #template>\n  <div [class]=\"model.cssClasses.tableWrapper\" #contentElement>\n    <fieldset>\n      <legend class=\"sv-hidden\">{{model.locTitle.renderedHtml}}</legend>\n      <table [class]=\"model.getTableCss()\">\n        <thead *ngIf=\"model.showHeader\">\n          <tr>\n            <td *ngIf=\"model.hasRows\"></td>\n            <th\n              *ngFor=\"let column of model.visibleColumns\" [style]=\"{ minWidth: model.columnMinWidth, width: model.columnMinWidth }\" [class]=\"model.cssClasses.headerCell\">\n              <ng-template [component]=\"{ name: model.getColumnHeaderWrapperComponentName(column), data: { componentData: model.getColumnHeaderWrapperComponentData(column) } }\">\n                <sv-ng-string [model]=\"column.locText\"></sv-ng-string>\n              </ng-template>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let row of model.visibleRows; trackBy: trackRowByFn \" [class]=\"row.rowClasses || undefined\">\n           <td [class]=\"row.rowTextClasses\" [style]=\"{ minWidth: model.rowTitleWidth, width: model.rowTitleWidth }\" *ngIf=\"model.hasRows\">\n              <ng-template [component]=\"{ name: model.getRowHeaderWrapperComponentName($any(row)), data: { componentData: model.getRowHeaderWrapperComponentData($any(row)) } }\">\n                <sv-ng-string [model]=\"row.locText\"></sv-ng-string>\n              </ng-template>\n            </td>\n            <ng-container *ngIf=\"model.hasCellText\">\n              <td *ngFor=\"let column of model.visibleColumns\"\n                [class]=\"model.getItemClass(row, column)\"\n                (click)=\"onCellChanged(row, column)\" [model]=\"model.getCellDisplayLocText(row.name, column)\" sv-ng-string>\n              </td>\n            </ng-container>\n            <ng-container *ngIf=\"!model.hasCellText\">\n              <td\n              *ngFor=\"let column of model.visibleColumns; index as columnIndex; trackBy: trackColumnByFn\"\n              [attr.data-responsive-title]=\"column.locText.renderedHtml\"\n              [class]=\"model.cssClasses.cell\">\n                <ng-template [component]=\"{ name: model.cellComponent, data: { cellChangedOwner: this, question: model, row: row, column: column, columnIndex: columnIndex } }\"></ng-template>\n              </td>\n            </ng-container>\n          </tr>\n        </tbody>\n      </table>\n    </fieldset>\n  </div>\n</ng-template>","import { Action, QuestionFileModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { Component, Input } from \"@angular/core\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\n@Component({\n  selector: \"sv-ng-choose-file-btn\",\n  templateUrl: \"./choose-file.component.html\"\n})\nexport class ChooseFileBtn extends EmbeddedViewContentComponent {\n    @Input() data: any;\n    @Input() model!: Action;\n    public get question(): QuestionFileModel {\n      return (this.model && this.model.data.question) || this.data.question;\n    }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-file-choose-btn\", ChooseFileBtn);","<ng-template #template>\n    <label tabindex=\"0\" [class]=\"question.getChooseFileCss()\"\n        [attr.for]=\"question.inputId\" [attr.aria-label]=\"question.chooseButtonText\" [key2click]\n        (click)=\"question.chooseFile($event)\">\n        <svg *ngIf=\"question.cssClasses.chooseFileIconId\" [title]=\"question.chooseButtonText\"\n            [iconName]=\"question.cssClasses.chooseFileIconId\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n        <span>{{ question.chooseButtonText }}</span>\n</label>\n</ng-template>","import { Component } from \"@angular/core\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\n\n@Component({\n  templateUrl: \"./loading-indicator.component.html\",\n  selector: \"sv-ng-loading-indicator\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class LoadingIndicatorComponent extends EmbeddedViewContentComponent {\n\n}","<ng-template #template>\n    <div class=\"sd-loading-indicator\">\n        <svg [iconName]=\"'icon-loading'\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n    </div>\n</ng-template>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionFileModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n@Component({\n  selector: \"sv-ng-file-question\",\n  templateUrl: \"./file.component.html\",\n  styleUrls: []\n})\nexport class FileQuestionComponent extends QuestionAngular<QuestionFileModel> {}\n\nAngularComponentFactory.Instance.registerComponent(\"file-question\", FileQuestionComponent);","<div [class]=\"model.fileRootCss\" #contentElement>\n  <input [class]=\"model.cssClasses.fileInput\" *ngIf=\"!model.isReadOnlyAttr && !model.isDisabledAttr && model.hasFileUI\" tabindex=\"-1\" type=\"file\"\n    [attr.id]=\"model.inputId\" [attr.aria-required]=\"model.ariaRequired\"\n    [attr.aria-label]=\"model.ariaLabel\" [attr.aria-invalid]=\"model.ariaInvalid\"\n    [attr.aria-errormessage]=\"model.ariaErrormessage\" [attr.multiple]=\"model.multipleRendered\"\n    [attr.title]=\"model.inputTitle\" [attr.accept]=\"model.acceptedTypes\" [attr.capture]=\"model.renderCapture\" />\n  <input *ngIf=\"model.isReadOnlyAttr\" type=\"file\" readonly [class]=\"model.getReadOnlyFileCss()\" [attr.id]=\"model.inputId\"\n    [attr.multiple]=\"model.multipleRendered\" [attr.placeholder]=\"model.title\" style=\"color: transparent\" />\n  <input *ngIf=\"model.isDisabledAttr\" type=\"file\" disabled [class]=\"model.getReadOnlyFileCss()\" [attr.id]=\"model.inputId\"\n    [attr.multiple]=\"model.multipleRendered\" [attr.placeholder]=\"model.title\" style=\"color: transparent\" />\n  <div [class]=\"model.cssClasses.dragArea\" (dragenter)=\"model.onDragEnter($event)\" (drop)=\"model.onDrop($event)\"\n    (dragover)=\"model.onDragOver($event)\" (dragleave)=\"model.onDragLeave($event)\">\n    <div [class]=\"model.getFileDecoratorCss()\" *ngIf=\"model.showFileDecorator\">\n      <span [class]=\"model.cssClasses.dragAreaPlaceholder\" [model]=\"model.locRenderedPlaceholder\" sv-ng-string></span>\n      <div [class]=\"model.cssClasses.wrapper\">\n        <sv-ng-choose-file-btn [data]=\"{ question: model }\" *ngIf=\"model.showChooseButton\"></sv-ng-choose-file-btn>\n        <sv-ng-action-bar [model]=\"model.actionsContainer\" *ngIf=\"model.actionsContainerVisible\"></sv-ng-action-bar>\n        <span [class]=\"model.cssClasses.noFileChosen\" *ngIf=\"model.isEmpty()\">{{ model.noFileChosenCaption }}</span>\n      </div>\n    </div>\n    <ng-container *ngIf=\"model.showLoadingIndicator\">\n      <div [class]=\"model.cssClasses.loadingIndicator\">\n        <sv-ng-loading-indicator></sv-ng-loading-indicator>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"model.isPlayingVideo\">\n      <ng-container *ngTemplateOutlet=\"fileVideo\"></ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"model.showRemoveButton\">\n      <ng-container *ngTemplateOutlet=\"fileCleanButton; context: { css: model.showRemoveButton }\"></ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"model.allowShowPreview\">\n      <ng-template [component]=\"{ name: 'sv-file-preview', data: { question: model } }\"></ng-template>\n    </ng-container>\n    <ng-container *ngIf=\"model.showRemoveButtonBottom\">\n      <ng-container *ngTemplateOutlet=\"fileCleanButton; context: { css: model.showRemoveButtonBottom }\"></ng-container>\n    </ng-container>\n    <sv-action-bar *ngIf=\"model.fileNavigatorVisible\" [model]=\"model.fileNavigator\"></sv-action-bar>\n  </div>\n</div>\n<ng-template #fileCleanButton let-css=\"css\">\n  <button type=\"button\" [class]=\"css\" (click)=\"model.doClean()\">\n    <span>{{ model.clearButtonCaption }}</span>\n    <svg *ngIf=\"model.cssClasses.removeButtonIconId\" [iconName]=\"model.cssClasses.removeButtonIconId\" [size]=\"'auto'\"\n      [title]=\"model.clearButtonCaption\" sv-ng-svg-icon></svg>\n  </button>\n</ng-template>\n<ng-template #fileVideo>\n  <div [class]=\"model.cssClasses.videoContainer\">\n    <sv-ng-action [model]=\"model.changeCameraAction\"></sv-ng-action>\n    <sv-ng-action [model]=\"model.closeCameraAction\"></sv-ng-action>\n    <video autoplay playsinline [attr.id]=\"model.videoId\" [class]=\"model.cssClasses.video\"></video>\n    <sv-ng-action [model]=\"model.takePictureAction\"></sv-ng-action>\n  </div>\n</ng-template>","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionCommentModel } from \"survey-core\";\n\n@Component({\n  templateUrl: \"./comment.component.html\",\n  selector: \"sv-ng-question-comment\"\n})\n\nexport class CommentQuestionComponent extends QuestionAngular<QuestionCommentModel> {\n  onChange(event: any) {\n    this.model.value = event.target.value;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"comment-question\", CommentQuestionComponent);","<ng-container *ngIf=\"!model.isReadOnlyRenderDiv()\">\n  <ng-template [component]=\"{ name: 'sv-text-area', data: { model: model.textAreaModel } }\"></ng-template>\n  <sv-ng-character-counter *ngIf=\"model.getMaxLength()\" \n  [counter]=\"model.characterCounter\"\n  [remainingCharacterCounter]=\"model.cssClasses.remainingCharacterCounter\">\n  </sv-ng-character-counter>\n</ng-container>\n<div *ngIf=\"model.isReadOnlyRenderDiv()\" #contentElement>{{ model.value }}</div>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionSignaturePadModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-signature-component\",\n  templateUrl: \"./signature.component.html\"\n  })\nexport class SignaturePadQuestionComponent extends QuestionAngular<QuestionSignaturePadModel> {}\n\nAngularComponentFactory.Instance.registerComponent(\"signaturepad-question\", SignaturePadQuestionComponent);","<div\n[class]=\"model.cssClasses.root\"\n[style.width]=\"model.renderedCanvasWidth\" #contentElement>\n<div [class]=\"model.cssClasses.placeholder\" [visible]=\"model.needShowPlaceholder()\" [model]=\"$any(model).locRenderedPlaceholder\" sv-ng-string></div>\n<div>\n  <img *ngIf=\"!!model.backgroundImage\" [src]=\"model.backgroundImage\" [style.width]=\"model.renderedCanvasWidth\" [class]=\"model.cssClasses.backgroundImage\">\n  <canvas tabindex=\"-1\" [class]=\"model.cssClasses.canvas\" (blur)=\"model.onBlur($event)\"></canvas>\n</div>\n<div [class]=\"model.cssClasses.controls\" *ngIf=\"model.canShowClearButton\">\n  <button\n    type=\"button\"\n    [class]=\"model.cssClasses.clearButton\"\n    [title]=\"model.clearButtonCaption\"\n    (click)=\"model.clearValue(true)\"\n  >\n    <span *ngIf=\"!model.cssClasses.clearButtonIconId\">✖</span>\n    <svg\n      *ngIf=\"model.cssClasses.clearButtonIconId\"\n      [iconName]=\"model.cssClasses.clearButtonIconId\"\n      [size]=\"'auto'\" sv-ng-svg-icon></svg>\n  </button>\n</div>\n<ng-container *ngIf=\"model.showLoadingIndicator\">\n  <div [class]=\"model.cssClasses.loadingIndicator\">\n    <sv-ng-loading-indicator></sv-ng-loading-indicator>\n  </div>\n</ng-container>\n</div>","import { MultipleTextCell, MultipleTextItemModel, QuestionMultipleTextModel, QuestionTextModel } from \"survey-core\";\nimport { Component, DoCheck, Input, OnDestroy } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\n\n@Component({\n  selector: \"'[sv-ng-multipletext-item]'\",\n  templateUrl: \"./mutlipletextitem.component.html\"\n})\nexport class MultipleTextItemComponent extends BaseAngular<QuestionTextModel> implements DoCheck, OnDestroy {\n  @Input() question!: QuestionMultipleTextModel;\n  @Input() model!: MultipleTextCell;\n  protected getModel(): QuestionTextModel {\n    if(!this.model.isErrorsCell) {\n      return this.model.item.editor;\n    }\n    return null as any;\n  }\n  public get item(): MultipleTextItemModel {\n    return this.model.item;\n  }\n  public get editor(): QuestionTextModel {\n    return this.model.item.editor;\n  }\n  override ngDoCheck(): void {\n    super.ngDoCheck();\n    if(this.model.isErrorsCell) {\n      this.editor.registerFunctionOnPropertyValueChanged(\"errors\", () => {\n        this.update();\n      }, \"__ngSubscription\")\n    }\n  }\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    if(this.model.isErrorsCell) {\n      this.editor.unRegisterFunctionOnPropertyValueChanged(\"errors\", \"__ngSubscription\")    \n    }\n  }\n}\n","<ng-container *ngIf=\"!model.isErrorsCell\">\n  <label [class]=\"question.getItemLabelCss(item)\">\n    <span [class]=\"question.getItemTitleCss()\" [style]=\"{ minWidth: question.itemTitleWidth, width: question.itemTitleWidth }\">\n      <span *ngIf=\" item.editor.isRequireTextBeforeTitle || item.editor.isRequireTextOnStart\"\n        [class]=\"question.cssClasses.requiredText\">{{ item.editor.requiredText }}</span>\n      <sv-ng-string [model]=\"item.locTitle\"></sv-ng-string>\n      <span *ngIf=\"item.editor.isRequireTextAfterTitle\">&nbsp;</span>\n      <span *ngIf=\"item.editor.isRequireTextAfterTitle\" [class]=\"question.cssClasses.requiredText\" aria-hidden=\"true\">{{\n        item.editor.requiredText }}</span>\n    </span>\n    <div [class]=\"question.getItemCss()\" (focusin)=\"item.focusIn()\">\n      <sv-ng-text-question [model]=\"item.editor\"></sv-ng-text-question>\n    </div>\n  </label>\n</ng-container>\n<ng-container *ngIf=\"model.isErrorsCell\">\n  <div *ngIf=\"item.editor.hasVisibleErrors\" [element]=\"item.editor\" sv-ng-errors></div>\n</ng-container>","import { MultipleTextCell, MultipleTextItemModel, MutlipleTextRow, QuestionMultipleTextModel, QuestionTextModel } from \"survey-core\";\nimport { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\n\n@Component({\n  selector: \"sv-ng-multipletext-row\",\n  templateUrl: \"./multipletextrow.component.html\",\n  styleUrls: [\"../hide-host.scss\"]\n})\nexport class MultipleTextRowComponent extends BaseAngular<MutlipleTextRow> {\n  @Input() question!: QuestionMultipleTextModel;\n  @Input() model!: MutlipleTextRow;\n  protected getModel(): MutlipleTextRow {\n    return this.model;\n  }\n  trackItemBy (_: number, cell: MultipleTextCell): string {\n    return \"item\" + cell.item.editor.id;\n  }\n}\n","<ng-template #template>\n    <tr [class]=\"question.cssClasses.row\" *ngIf=\"model.isVisible\">\n        <ng-container *ngFor=\"let cell of model.cells; trackBy: trackItemBy\">\n            <td [class]=\"cell.className\" [question]=\"question\" [model]=\"cell\" sv-ng-multipletext-item></td>\n        </ng-container>\n    </tr>\n</ng-template>","import { QuestionAngular } from \"../question\";\nimport { MultipleTextItemModel, QuestionMultipleTextModel } from \"survey-core\";\nimport { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-multipletext-question\",\n  templateUrl: \"./multipletext.component.html\"\n})\nexport class MultipleTextComponent extends QuestionAngular<QuestionMultipleTextModel> {\n  trackRowBy = (index: number): string => {\n    return this.model.inputId + \"rowkey\" + index;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"multipletext-question\", MultipleTextComponent);","<table [class]=\"model.getQuestionRootCss()\" #contentElement>\n  <tbody>\n    <ng-container *ngFor=\"let row of model.getRows(); index as rowIndex; trackBy: trackRowBy\">\n      <sv-ng-multipletext-row [model]=\"row\" [question]=\"model\"></sv-ng-multipletext-row>\n    </ng-container>\n  </tbody>\n</table>","import { Component } from \"@angular/core\";\nimport { ItemValue, QuestionRankingModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { SelectBaseComponent } from \"./selectbase.component\";\n\n@Component({\n  selector: \"sv-ng-ranking-question\",\n  templateUrl: \"./ranking.component.html\",\n})\nexport class RankingQuestionComponent extends SelectBaseComponent<QuestionRankingModel> {\n  public override inputType: string = \"\";\n  override trackItemBy = (index: number, item: ItemValue): string => {\n    return item.value + \"-\" + index + \"-item\";\n  }\n  public override getDefaultComponentName(): string {\n    return \"sv-ng-ranking-item\";\n  }\n  public override getItemValueComponentData(item: ItemValue, index?: number, unrankedItem?: boolean): any {\n    const res = {\n      componentName: this.getDefaultComponentName(),\n      componentData: {\n        question: this.model,\n        model: item,\n        inputType: this.inputType,\n        data: this.model.getItemValueWrapperComponentData(item),\n        index,\n        unrankedItem\n      }\n    };\n    return res;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"ranking-question\", RankingQuestionComponent);","<div *ngIf=\"!model.selectToRankEnabled\" [class]=\"model.rootClass\" #contentElement>\n  <ng-container *ngFor=\"let item of model.renderedRankingChoices; index as index; trackBy: trackItemBy\">\n    <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item, index) }\"></ng-template>\n  </ng-container>\n</div>\n\n<div *ngIf=\"model.selectToRankEnabled\" [class]=\"model.rootClass\" #contentElement>\n  <div [class]='model.getContainerClasses(\"from\")' data-ranking=\"from-container\">\n    <ng-container *ngFor=\"let item of model.renderedUnRankingChoices; index as index; trackBy: trackItemBy\">\n      <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item, index, true) }\"></ng-template>\n    </ng-container>\n\n    <div *ngIf=\"model.renderedUnRankingChoices.length === 0\" [class]=\"model.cssClasses.containerPlaceholder\" [model]=\"$any(model).locSelectToRankEmptyRankedAreaText\" sv-ng-string></div>\n  </div>\n\n  <div [class]=\"model.cssClasses.containersDivider\"></div>\n\n  <div [class]='model.getContainerClasses(\"to\")' data-ranking=\"to-container\">\n    <ng-container *ngFor=\"let item of model.renderedRankingChoices; index as index; trackBy: trackItemBy\">\n      <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item, index) }\"></ng-template>\n    </ng-container>\n\n    <div *ngIf=\"model.renderedRankingChoices.length === 0\" [class]=\"model.cssClasses.containerPlaceholder\" [model]=\"$any(model).locSelectToRankEmptyUnrankedAreaText\" sv-ng-string></div>\n  </div>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\nimport { ItemValue, QuestionRankingModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-ranking-item\",\n  templateUrl: \"./ranking-item.component.html\"\n})\nexport class RankingItemComponent extends BaseAngular<ItemValue> {\n  @Input() question!: QuestionRankingModel;\n  @Input() model!: ItemValue;\n  @Input() index!: number;\n  @Input() unrankedItem!: boolean;\n  protected getModel(): ItemValue {\n    return this.model;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-ng-ranking-item\", RankingItemComponent);","\n\n\n<div [attr.tabindex]=\"question.getItemTabIndex(model)\" [attr.data-sv-drop-target-ranking-item]=\"index\" \n    [class]=\"question.getItemClass(model)\"\n    (keydown)=\"question.handleKeydown($event, model)\"\n    (pointerdown)=\"question.handlePointerDown($event, model, $any($event.currentTarget))\"\n    (pointerup)=\"question.handlePointerUp($event, model, $any($event.currentTarget))\">\n  <div tabindex=\"-1\" style=\"outline: none;\">\n    <div [class]=\"question.cssClasses.itemGhostNode\"></div>\n    <div [class]=\"question.cssClasses.itemContent\">\n      <div [class]=\"question.cssClasses.itemIconContainer\">\n        <svg [class]=\"question.getIconHoverCss()\">\n          <use [attr.xlink:href]=\"question.dragDropSvgIcon\"></use>\n        </svg> \n        <svg [class]=\"question.getIconFocusCss()\">\n          <use [attr.xlink:href]=\"question.arrowsSvgIcon\"></use>\n        </svg> \n      </div>\n\n      <div *ngIf=\"!unrankedItem && question.getNumberByIndex(index); else elseBlock\" [class]=\"question.getItemIndexClasses(model)\">{{ question.getNumberByIndex(index) }}</div>\n      <ng-template #elseBlock><div [class]=\"question.getItemIndexClasses(model)\">\n        <svg>\n          <use [attr.xlink:href]=\"question.dashSvgIcon\"></use>\n        </svg> \n      </div></ng-template>\n\n      <ng-template [component]=\"{ name: question.itemComponent, data: { item: model, cssClasses: question.cssClasses } }\"></ng-template>\n    </div>\n  </div>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { ItemValue } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { EmbeddedViewContentComponent } from \"../embedded-view-content.component\";\n\n@Component({\n  selector: \"sv-ranking-item\",\n  templateUrl: \"./ranking-item-content.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class RankingItemContentComponent extends EmbeddedViewContentComponent {\n  @Input() item!: ItemValue;\n  @Input() cssClasses: any;\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-ranking-item\", RankingItemContentComponent);","<ng-template #template>\n  <div [class]=\"cssClasses.controlLabel\">\n    <sv-ng-string [model]=\"item.locText\"></sv-ng-string>\n  </div>\n</ng-template>\n","import { Component, Input } from \"@angular/core\";\nimport { LocalizableString } from \"survey-core\";\nimport { AngularComponentFactory } from \"./component-factory\";\n\n@Component({\n  selector: \"sv-ng-string-editor\",\n  templateUrl: \"./string-editor.component.html\"\n})\nexport class StringEditorComponent {\n  @Input() model!: LocalizableString;\n\n  onInput = (event: any) => {\n    this.model.text = event.target.innerText;\n  };\n  onClick = (event: any) => {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n}\nAngularComponentFactory.Instance.registerComponent(LocalizableString.editableRenderer, StringEditorComponent);","<span\n  class=\"sv-string-editor\"\n  contenteditable=\"true\"\n  *ngIf=\"model.hasHtml\"\n  [innerHtml]=\"model.renderedHtml\"\n  (blur)=\"onInput($event)\"\n  (click)=\"onClick($event)\"\n></span>\n<span\n  class=\"sv-string-editor\"\n  contenteditable=\"true\"\n  *ngIf=\"!model.hasHtml\"\n  (blur)=\"onInput($event)\"\n  (click)=\"onClick($event)\"\n  >{{ model.renderedHtml }}</span\n>\n","import { Action, QuestionPanelDynamicModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"\",\n  template: \"\"\n})\nexport class PaneldynamicAction {\n  @Input() data: any;\n  @Input() model!: Action;\n  public get question(): QuestionPanelDynamicModel {\n    return (this.model && this.model.data.question) || this.data.question;\n  }\n}\n\n@Component({\n  selector: \"sv-ng-paneldynamic-add-btn\",\n  templateUrl: \"./paneldynamic-add-btn.component.html\"\n})\nexport class PanelDynamicAddBtn extends PaneldynamicAction {\n  addPanelClick() {\n    this.question.addPanelUI();\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-paneldynamic-add-btn\", PanelDynamicAddBtn);","<button type=\"button\" [id]=\"question.addButtonId\" *ngIf=\"question.canAddPanel\" [class]=\"question.getAddButtonCss()\" (click)=\"addPanelClick()\">\n<span [class]=\"question.cssClasses.buttonAddText\"><sv-ng-string [model]=\"question.locPanelAddText\"></sv-ng-string></span>\n</button>","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { PaneldynamicAction } from \"./paneldynamic-add-btn.component\";\n\n@Component({\n  selector: \"sv-ng-paneldynamic-next-btn\",\n  templateUrl: \"./paneldynamic-next-btn.component.html\"\n})\nexport class PanelDynamicNextBtn extends PaneldynamicAction {\n  nextPanelClick() {\n    this.question.goToNextPanel();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-paneldynamic-next-btn\", PanelDynamicNextBtn);\n","<div [attr.title]=\"question.panelNextText\" (click)=\"nextPanelClick()\" [class]=\"question.getNextButtonCss()\">\n  <svg [iconName]=\"question.cssClasses.progressBtnIcon\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n</div>","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { PaneldynamicAction } from \"./paneldynamic-add-btn.component\";\n\n@Component({\n  selector: \"sv-ng-paneldynamic-prev-btn\",\n  templateUrl: \"./paneldynamic-prev-btn.component.html\"\n})\nexport class PanelDynamicPrevBtn extends PaneldynamicAction {\n  prevPanelClick() {\n    this.question.goToPrevPanel();\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-paneldynamic-prev-btn\", PanelDynamicPrevBtn);","<div [attr.title]=\"question.panelPrevText\" (click)=\"prevPanelClick()\" [class]=\"question.getPrevButtonCss()\">\n  <svg [iconName]=\"question.cssClasses.progressBtnIcon\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n</div>\n","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { PaneldynamicAction } from \"./paneldynamic-add-btn.component\";\n\n@Component({\n  selector: \"sv-ng-paneldynamic-remove-btn\",\n  templateUrl: \"./paneldynamic-remove-btn.component.html\"\n})\nexport class PaneldynamicRemoveButtonComponent extends PaneldynamicAction {\n  get panel() {\n    return (this.data ? this.data : this.model.data).panel;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-paneldynamic-remove-btn\", PaneldynamicRemoveButtonComponent);\n","<button type=\"button\" [id]=\"question.getPanelRemoveButtonId(panel)\" (click)=\"question.removePanelUI(panel)\" [class]=\"question.getPanelRemoveButtonCss()\"> \n  <span [class]=\"question.cssClasses.buttonRemoveText\"><sv-ng-string [model]=\"question.locPanelRemoveText\"></sv-ng-string></span>\n  <span [class]=\"question.cssClasses.iconRemove\"></span>\n</button>\n","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { PaneldynamicAction } from \"./paneldynamic-add-btn.component\";\n\n@Component({\n  selector: \"sv-ng-paneldynamic-progress-text\",\n  templateUrl: \"./paneldynamic-progress-text.component.html\"\n})\nexport class PanelDynamicProgressText extends PaneldynamicAction {\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-paneldynamic-progress-text\", PanelDynamicProgressText);","<div [class]=\"question.cssClasses.progressText\">{{ question.progressText }}</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { PanelModel, QuestionPanelDynamicModel, SurveyModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-paneldynamic-question\",\n  templateUrl: \"./paneldynamic.component.html\"\n})\nexport class PanelDynamicQuestionComponent extends QuestionAngular<QuestionPanelDynamicModel | any> implements OnInit {\n  public trackPanelBy(_: number, panel: PanelModel) {\n    return panel.id;\n  }\n  protected override onModelChanged(): void {\n    super.onModelChanged();\n    this.model.panelCountChangedCallback = () => {\n      this.update();\n    };\n    this.model.currentIndexChangedCallback = () => {\n      this.update()\n    };\n    this.model.renderModeChangedCallback = () => {\n      this.update();\n    };\n  }\n  get progressCssClass() {\n    return this.model.isProgressTopShowing\n      ? this.model.cssClasses.progressTop\n      : this.model.cssClasses.progressBottom;\n  }\n  override ngOnDestroy(): void {\n    this.model.panelCountChangedCallback = () => {};\n    this.model.currentIndexChangedCallback = () => {};\n    this.model.renderModeChangedCallback = () => {};\n    super.ngOnDestroy();\n  }\n  public getPanelComponentName(panel: PanelModel): string {\n    const survey = this.surveyModel as SurveyModel;\n    if(!!survey) {\n      const name = survey.getElementWrapperComponentName(panel);\n      if(!!name) {\n        return name;\n      }\n    }\n    return \"panel\";\n  }\n  public getPanelComponentData(panel: PanelModel): any {\n    const survey = this.surveyModel as SurveyModel;\n    let data: any;\n    if(!!survey) {\n      data = survey.getElementWrapperComponentData(panel);\n    }\n    return {\n      componentName: \"panel\",\n      componentData: {\n        model: panel,\n        data: data\n      }\n    };\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"paneldynamic-question\", PanelDynamicQuestionComponent);","<div [class]=\"model.cssClasses.root\" #contentElement>\n  <div *ngIf=\"model.getShowNoEntriesPlaceholder()\" [class]=\"model.cssClasses.noEntriesPlaceholder\">\n    <span [model]=\"model.locNoEntriesText\" sv-ng-string></span>\n    <sv-ng-paneldynamic-add-btn *ngIf=\"model.canAddPanel\" [data]=\"{ question: model }\"></sv-ng-paneldynamic-add-btn>\n  </div>\n  <div [class]=\"model.cssClasses.progress\"\n    *ngIf=\"!model.showLegacyNavigation && model.isProgressTopShowing && model.isRangeShowing\">\n    <div [class]=\"model.cssClasses.progressBar\" [style]=\"{ width: model.progress }\" role=\"progressbar\"></div>\n  </div>\n  <ng-container [ngTemplateOutlet]=\"progress\"\n    *ngIf=\"model.showLegacyNavigation && model.isProgressTopShowing\"></ng-container>\n  <div [class]=\"model.cssClasses.panelsContainer\">\n    <ng-container *ngFor=\"let panel of model.renderedPanels; index as index; trackBy: trackPanelBy\">\n      <div [class]=\"model.getPanelWrapperCss(panel)\">\n        <ng-template\n          [component]=\"{ name: getPanelComponentName(panel), data: getPanelComponentData(panel) }\"></ng-template>\n        <ng-container\n          *ngIf=\"model.panelRemoveButtonLocation ==='right' && model.canRemovePanel && panel.state != 'collapsed'\">\n          <ng-template\n            [component]=\"{ name: 'sv-paneldynamic-remove-btn', data: { data: { panel, question: model }}}\"></ng-template>\n        </ng-container>\n      </div>\n      <hr [class]=\"model.cssClasses.separator\" *ngIf=\"model.showSeparator(index)\" />\n    </ng-container>\n  </div>\n  <ng-container [ngTemplateOutlet]=\"progress\"\n    *ngIf=\"model.showLegacyNavigation && model.isProgressBottomShowing\"></ng-container>\n  <sv-ng-paneldynamic-add-btn *ngIf=\"model.showLegacyNavigation && model.isRenderModeList\"\n    [data]=\"{ question: model }\"></sv-ng-paneldynamic-add-btn>\n  <ng-container [ngTemplateOutlet]=\"progressV2\" *ngIf=\"model.showNavigation\"></ng-container>\n</div>\n\n<ng-template #progressV2>\n  <div [class]=\"model.cssClasses.footer\" *ngIf=\"!!model.cssClasses.footer\">\n    <hr [class]=\"model.cssClasses.separator\" />\n    <div [class]=\"model.cssClasses.progress\" *ngIf=\"model.isRangeShowing && model.isProgressBottomShowing\">\n      <div [class]=\"model.cssClasses.progressBar\" [style]=\"{ width: model.progress }\" role=\"progressbar\"></div>\n    </div>\n    <div *ngIf=\"model.footerToolbar.visibleActions.length\" [class]=\"model.cssClasses.footerButtonsContainer\">\n      <sv-ng-action-bar [model]=\"model.footerToolbar\"></sv-ng-action-bar>\n    </div>\n  </div>\n</ng-template>\n<ng-template #progress>\n  <div [class]=\"this.progressCssClass\">\n    <div style=\"clear: both\" [class]=\"this.progressCssClass\">\n      <div [class]=\"model.cssClasses.progressContainer\">\n        <sv-ng-paneldynamic-prev-btn [data]=\"{ question: model }\"></sv-ng-paneldynamic-prev-btn>\n        <div [class]=\"model.cssClasses.progress\" *ngIf=\"model.isRangeShowing\">\n          <div [class]=\"model.cssClasses.progressBar\" [style]=\"{ width: model.progress }\" role=\"progressbar\"></div>\n        </div>\n        <sv-ng-paneldynamic-next-btn [data]=\"{ question: model }\"></sv-ng-paneldynamic-next-btn>\n      </div>\n      <sv-ng-paneldynamic-add-btn [data]=\"{ question: model }\"></sv-ng-paneldynamic-add-btn>\n      <sv-ng-paneldynamic-progress-text [data]=\"{ question: model }\"></sv-ng-paneldynamic-progress-text>\n    </div>\n  </div>\n</ng-template>","import { ChangeDetectorRef, Component, Input, TemplateRef, ViewContainerRef } from \"@angular/core\";\nimport { ButtonGroupItemModel, PanelModel, Question, SurveyModel } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\nimport { AngularComponentFactory } from \"./component-factory\";\nimport { EmbeddedViewContentComponent } from \"./embedded-view-content.component\";\n\n@Component({\n  selector: \"sv-template-renderer\",\n  templateUrl: \"./template-renderer.component.html\",\n  styleUrls: [\"./hide-host.scss\"]\n})\nexport class TemplateRendererComponent extends EmbeddedViewContentComponent {\n  @Input() componentName!: string;\n  @Input() componentData!: any;\n  @Input() contentTempl?: TemplateRef<unknown>;\n}\nAngularComponentFactory.Instance.registerComponent(SurveyModel.TemplateRendererComponentName, TemplateRendererComponent);","<ng-template #template>\n  <ng-container *ngIf=\"!!componentName\">\n    <ng-template [component]=\"{ name: componentName, data: componentData }\"></ng-template>\n  </ng-container>\n  <ng-container *ngIf=\"!componentName && contentTempl\">\n    <ng-container *ngTemplateOutlet=\"contentTempl\"></ng-container>\n  </ng-container>\n</ng-template>","import { AfterViewInit, Component, ElementRef, Input, OnChanges, OnDestroy, SimpleChanges, ViewChild } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { Question } from \"survey-core\";\n\n@Component(\n  {\n    templateUrl: \"./customwidget.component.html\",\n    selector: \"sv-ng-custom-widget\"\n  }\n)\nexport class CustomWidgetComponent implements AfterViewInit, OnDestroy, OnChanges {\n  @Input() css: any;\n  @Input() model!: Question;\n\n  @ViewChild(\"content\") container!: ElementRef<HTMLDivElement>;\n\n  get hasDefaultRender(): boolean {\n    return this.model.customWidget.isDefaultRender || this.hasAngularComponent;\n  }\n  get hasHtml(): boolean {\n    return this.model.customWidget.htmlTemplate ? true : false;\n  }\n  get customHtml(): string {\n    return this.model.customWidget.htmlTemplate;\n  }\n  get hasAngularComponent(): boolean {\n    return AngularComponentFactory.Instance.isComponentRegistered(this.model.customWidget.name);\n  }\n  get componentName(): string {\n    if (this.hasAngularComponent) return this.model.customWidget.name;\n    return this.model.getTemplate() + \"-question\";\n  }\n  ngAfterViewInit(): void {\n    this.model.customWidget.afterRender(this.model, this.container.nativeElement);\n  }\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    if(simpleChanges[\"model\"].previousValue !== undefined && simpleChanges[\"model\"].currentValue !== undefined) {\n      this.model.customWidget.afterRender(this.model, this.container.nativeElement);\n    }\n  }\n  ngOnDestroy(): void {\n    this.model.customWidget.willUnmount(this.model, this.container.nativeElement);\n  }\n\n}\n\nAngularComponentFactory.Instance.registerComponent(\"survey-customwidget\", CustomWidgetComponent);\n","<div #content>\n  <div *ngIf=\"hasHtml\" [innerHTML]=\"customHtml | safeHtml\"></div>\n  <ng-container *ngIf=\"hasDefaultRender\">\n    <ng-template [component]=\"{ name: componentName, data: { model: model, css: css } }\"></ng-template>  \n  </ng-container>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { MatrixRowModel, ItemValue, QuestionMatrixModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { BaseAngular } from \"../base-angular\";\n\nexport interface INgMatrixCellChanged {\n  onCellChanged(row: MatrixRowModel, column: ItemValue): void;\n}\n\n@Component({\n  selector: \"sv-ng-matrix-cell, '[sv-ng-matrix-cell]'\",\n  templateUrl: \"./matrixcell.component.html\"\n})\nexport class MatrixCellComponent extends BaseAngular<ItemValue> {\n  @Input() question!: QuestionMatrixModel;\n  @Input() column!: ItemValue;\n  @Input() row!: MatrixRowModel;\n  @Input() columnIndex!: number;\n  @Input() cellChangedOwner!: INgMatrixCellChanged;\n  protected getModel(): ItemValue {\n    return this.row.item;\n  }\n  public onChange(): void {\n    this.cellChangedOwner.onCellChanged(this.row, this.column);\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"survey-matrix-cell\", MatrixCellComponent);","<label (mousedown)=\"question.onMouseDown()\" [class]=\"question.getItemClass(row, column)\">\n  <input\n    type=\"radio\"\n    [class]=\"question.cssClasses.itemValue\"\n    [name]=\"row.fullName\"\n    [value]=\"column.value\"\n    [checked]=\"row.value === column.value\"\n    [readonly]=\"row.isReadOnlyAttr\"\n    [disabled]=\"row.isDisabledAttr\"\n    [attr.id]=\"question.inputId + '_' + row.name + '_' + columnIndex\"\n    (change)=\"onChange()\"\n    [attr.aria-required]=\"question.a11y_input_ariaRequired\"\n    [attr.aria-label]=\"question.getCellAriaLabel(row.locText.renderedHtml, column.locText.renderedHtml)\"\n    [attr.aria-invalid]=\"question.a11y_input_ariaInvalid\"\n    [attr.aria-errormessage]=\"question.a11y_input_ariaErrormessage\"\n  />\n  <span [class]=\"question.cssClasses.materialDecorator\">\n    <svg *ngIf=\"question.itemSvgIcon\" [class]=\"question.cssClasses.itemDecorator\">\n      <use [attr.xlink:href]=\"question.itemSvgIcon\"></use>\n    </svg> \n  </span>\n  <span *ngIf=\"question.isMobile\" [class]=\"question.cssClasses.cellResponsiveTitle\" [model]=\"column.locText\" sv-ng-string></span>\n</label>\n<ng-content></ng-content>","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\nimport { IAction } from \"survey-core\";\nimport { EmbeddedViewContentComponent } from \"../../../embedded-view-content.component\";\n\n@Component({\n  templateUrl: \"drag-drop-icon.component.html\",\n  selector: \"sv-ng-matrix-drag-drop-icon\",\n  styleUrls: [\"../../../hide-host.scss\"]\n})\nexport class MatrixDynamicDragDropIconComponent extends EmbeddedViewContentComponent {\n  @Input() public model!: IAction;\n\n  get question() {\n    return this.model.data.question;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\n  \"sv-matrix-drag-drop-icon\",\n  MatrixDynamicDragDropIconComponent\n);\n","<ng-template #template>\n  <div>\n    <svg *ngIf=\"question.iconDragElement\" [class]=\"question.cssClasses.dragElementDecorator\">\n      <use [attr.xlink:href]=\"question.iconDragElement\"></use>\n    </svg>\n    <span *ngIf=\"!question.iconDragElement\" data-bind=\"css: question.cssClasses.iconDrag\"></span>\n  </div>\n</ng-template>","import { Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\nimport {\n  Question,\n  QuestionMatrixDropdownModelBase,\n  QuestionMatrixDropdownRenderedCell,\n  MatrixDropdownRowModelBase,\n  SurveyModel\n} from \"survey-core\";\nimport { getComponentName } from \"../question\";\n\n@Component({\n  selector: \"sv-ng-matrixdropdown-cell\",\n  templateUrl: \"./matrixdropdowncell.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class MatrixDropdownCellComponent extends BaseAngular<Question> {\n  @Input() question!: QuestionMatrixDropdownModelBase;\n  @Input() cell!: QuestionMatrixDropdownRenderedCell;\n\n  @ViewChild(\"cellContainer\") cellContainer!: ElementRef<HTMLElement>;\n  getModel() {\n    if(this.cell.hasQuestion) {\n      return this.cell.question;\n    }\n    if(!!this.cell.column) {\n      return this.cell.column;\n    }\n    return null as any;\n  }\n  public get row(): MatrixDropdownRowModelBase {\n    return this.cell.row;\n  }\n  public override ngDoCheck(): void {\n    super.ngDoCheck();\n    if(this.cell.isErrorsCell && this.cell?.question) {\n      this.cell.question.registerFunctionOnPropertiesValueChanged([\"errors\", \"visible\"], () => {\n        this.update();\n      }, \"__ngSubscription\")\n    }\n  }\n  public get panelComponentName(): string {\n    const panel = this.cell.panel;\n    const survey = <SurveyModel>panel.survey;\n    if(!!survey) {\n      const name = survey.getElementWrapperComponentName(panel);\n      if(!!name) {\n        return name;\n      }\n    }\n    return \"panel\";\n  }\n  public get panelComponentData(): any {\n    const panel = this.cell.panel;\n    const survey = <SurveyModel>panel.survey;\n    let data: any;\n    if(!!survey) {\n      data = survey.getElementWrapperComponentData(panel);\n    }\n    return {\n      componentName: \"panel\",\n      componentData: {\n        model: panel,\n        data: data\n      }\n    };\n  }\n\n  getComponentName(element: Question) { return getComponentName(element); }\n  getCellStyle() {\n    if (!!this.cell.width || !!this.cell.minWidth)\n      return { width: this.cell.width, minWidth: this.cell.minWidth };\n    return null;\n  }\n  public get isRequiredCell(): boolean {\n    return !!this.cell.column && this.cell.column.isRenderedRequired;\n  }\n  ngAfterViewInit() {\n    if (!this.cell.hasQuestion || !this.question || !this.question.survey) return;\n    const el = this.cellContainer?.nativeElement;\n    if(el) {\n      const cellQ = this.cell.question;\n      var options = {\n        cell: this.cell.cell,\n        cellQuestion: cellQ,\n        htmlElement: el,\n        row: this.cell.row,\n        column: this.cell.cell.column,\n      };\n      this.question.survey.matrixAfterCellRender(this.question, options);\n      cellQ.afterRenderCore(el);\n    }\n  }\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    if(this.cell.isErrorsCell && this.cell?.question) {\n      this.cell.question.unRegisterFunctionOnPropertiesValueChanged([\"errors\", \"visible\"], \"__ngSubscription\")    \n    }\n  }\n  public get canRender() {\n    return this.question && this.question.survey && this.cell.isVisible;\n  }\n}","<ng-template #template>\n  <td [class]=\"cell.className\" *ngIf=\"canRender\" [title]=\"cell.getTitle()\"\n    [style]=\"getCellStyle()\" [attr.colspan]=\"cell.colSpans\" (focusin)=\"cell.focusIn()\" #cellContainer>\n    <sv-ng-matrix-drag-drop-icon *ngIf=\"cell.isDragHandlerCell\"\n      [model]=\"$any({ data: { row: row, question: question } })\"></sv-ng-matrix-drag-drop-icon>\n    <sv-action-bar *ngIf=\"cell.isActionsCell\" [model]=\"cell.item.getData()\" [handleClick]=\"false\"></sv-action-bar>\n    <ng-container *ngIf=\"cell.hasPanel\">\n      <ng-template [component]=\"{ name: panelComponentName, data: panelComponentData }\"></ng-template>\n    </ng-container>\n    <div *ngIf=\"cell.isErrorsCell && cell.question?.hasVisibleErrors\" [element]=\"cell.question\" sv-ng-errors></div>\n    <span *ngIf=\"cell.showResponsiveTitle\" [class]=\"cell.responsiveTitleCss\" [model]=\"cell.responsiveLocTitle\" sv-ng-string></span>\n    <div *ngIf=\"cell.hasQuestion\" [class]=\"cell.cellQuestionWrapperClassName\"\n      [visible]=\"cell.question.isVisible\">\n      <ng-container *ngIf=\"!cell.isChoice && cell.question.isDefaultRendering()\">\n        <ng-template\n          [component]=\"{ name: question.getCellWrapperComponentName(cell.cell), data: { componentData: question.getCellWrapperComponentData(cell.cell)} }\">\n          <ng-template\n            [component]=\"{ name: getComponentName(cell.question), data: { model: cell.question } }\"></ng-template>\n        </ng-template>\n      </ng-container>\n      <ng-template *ngIf=\"!cell.isChoice && !cell.question.isDefaultRendering()\"\n        [component]=\"{ name: cell.question.getComponentName(), data: { model: cell.question } }\">\n      </ng-template>\n      <ng-container *ngIf=\"cell.isItemChoice\">\n        <ng-template\n          [component]=\"{ name: question.getCellWrapperComponentName(cell.cell), data: { componentData: question.getCellWrapperComponentData(cell.cell)} }\">\n          <sv-ng-selebase-item [showLabel]=\"false\" [inputType]=\"cell.isCheckbox ? 'checkbox': 'radio'\"\n            [question]=\"cell.question\" [model]=\"cell.item\"></sv-ng-selebase-item>\n        </ng-template>\n      </ng-container>\n      <div *ngIf=\"cell.isOtherChoice\" [class]=\"cell.question.getCommentAreaCss(true)\" [question]=\"cell.question\"\n        sv-ng-comment-other></div>\n    </div>\n    <ng-container *ngIf=\"cell.hasTitle\">\n      <ng-template\n        [component]=\"{ name: question.getCellWrapperComponentName($any(cell)), data: { componentData: question.getCellWrapperComponentData($any(cell))} }\">\n        <sv-ng-string [model]=\"cell.locTitle\"></sv-ng-string>\n        <span *ngIf=\"isRequiredCell\" [class]=\"question.cssClasses.cellRequiredText\">{{ cell.requiredText }}</span>\n      </ng-template>\n    </ng-container>\n  </td>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\nimport {\n  MatrixDropdownColumn,\n  QuestionMatrixDropdownModelBase,\n} from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-matrixheaderrequired\",\n  styles: [\":host { display: none; }\"],\n  template: \"<ng-template #template><ng-container *ngIf='column.isRenderedRequired'><span>&nbsp;</span><span [class]='question.cssClasses.cellRequiredText'>{{ column.requiredText }}</span></ng-container></ng-template>\"\n})\nexport class MatrixRequiredHeader extends BaseAngular<MatrixDropdownColumn> {\n  @Input() column!: MatrixDropdownColumn;\n  @Input() question!: QuestionMatrixDropdownModelBase;\n  getModel() {\n    return this.column;\n  }\n}","import { Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\nimport {\n  MatrixDropdownRowModelBase,\n  QuestionMatrixDropdownModelBase,\n  QuestionMatrixDropdownRenderedRow\n} from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-matrix-row\",\n  templateUrl: \"./matrix-row.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class MatrixRowComponent extends BaseAngular<QuestionMatrixDropdownRenderedRow> {\n  @Input() model!: QuestionMatrixDropdownRenderedRow;\n  @Input() question!: QuestionMatrixDropdownModelBase;\n  @ViewChild(\"container\", { static: false, read: ElementRef }) container!: ElementRef<HTMLTableRowElement>;\n  protected getModel(): QuestionMatrixDropdownRenderedRow {\n    return this.model;\n  }\n  public get row(): MatrixDropdownRowModelBase {\n    return this.model.row;\n  }\n  public trackCellBy(_: number, cell: any): string {\n    return cell.id;\n  }\n  protected override onModelChanged(): void {\n    super.onModelChanged();\n    if(this.previousModel) {\n      this.previousModel.setRootElement(undefined as any)\n    }\n    if(this.model && this.container?.nativeElement) {\n      this.model.setRootElement(this.container.nativeElement);\n    }\n  }\n  public ngAfterViewInit(): void {\n    if(this.model && this.container?.nativeElement) {\n      this.model.setRootElement(this.container.nativeElement)\n    }\n  }\n  public override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.model.setRootElement(undefined as any);\n  }\n}","<ng-template #template>\n  <tr *ngIf=\"model.visible\" [class]=\"model.className\" (pointerdown)=\"question.onPointerDown($event, row)\"\n    [attr.data-sv-drop-target-matrix-row]=\"row && row.id\" #container>\n    <sv-ng-matrixdropdown-cell [cell]=\"cell\" [question]=\"question\"\n      *ngFor=\"let cell of model.cells; trackBy: trackCellBy\"></sv-ng-matrixdropdown-cell>\n  </tr>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\nimport { QuestionMatrixDropdownModelBase, QuestionMatrixDropdownRenderedTable } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-matrix-table\",\n  templateUrl: \"./matrixtable.component.html\"\n})\nexport class MatrixTableComponent extends BaseAngular<QuestionMatrixDropdownRenderedTable> {\n  @Input() question!: QuestionMatrixDropdownModelBase;\n  @Input() table!: QuestionMatrixDropdownRenderedTable;\n  protected getModel(): QuestionMatrixDropdownRenderedTable {\n    return this.table;\n  }\n  public trackCellBy(_: number, cell: any): string {\n    return cell.id;\n  }\n  public trackRowBy(index: number, row: any): string {\n    return row.id;\n  }\n}\n","<div [style]=\"{ overflowX: question.showHorizontalScroll ? 'scroll' : '' }\" #contentElement\n  [class]=\"question.cssClasses.tableWrapper\">\n  <table [class]=\"question.getTableCss()\">\n    <thead *ngIf=\"table.showHeader\">\n      <tr>\n        <ng-container *ngFor=\"let cell of table.headerRow.cells; trackBy: trackCellBy\">\n          <th *ngIf=\"cell.hasTitle\" [class]=\"cell.className\" [style]=\"{ minWidth: cell.minWidth, width: cell.width }\">\n            <ng-template\n              [component]=\"{ name: question.getColumnHeaderWrapperComponentName($any(cell)), data: { componentData: question.getColumnHeaderWrapperComponentData($any(cell)) } }\">\n              <sv-ng-string [model]=\"cell.locTitle\"></sv-ng-string>\n              <sv-ng-matrixheaderrequired *ngIf=\"!!cell.column\" [column]=\"cell.column\" [question]=\"question\">\n              </sv-ng-matrixheaderrequired>\n            </ng-template>\n          </th>\n\n          <td *ngIf=\"!cell.hasTitle\" [class]=\"cell.className\" [style]=\"{ minWidth: cell.minWidth, width: cell.width }\">\n          </td>\n        </ng-container>\n      </tr>\n    </thead>\n    <tbody>\n      <ng-container *ngFor=\"let row of table.renderedRows; trackBy: trackRowBy\">\n        <sv-ng-matrix-row [model]=\"row\" [question]=\"question\"></sv-ng-matrix-row>\n      </ng-container>\n    </tbody>\n    <tfoot *ngIf=\"table.showFooter\">\n      <tr>\n        <sv-ng-matrixdropdown-cell [cell]=\"cell\" [question]=\"question\"\n          *ngFor=\"let cell of table.footerRow.cells; trackBy: trackCellBy\">\n        </sv-ng-matrixdropdown-cell>\n      </tr>\n    </tfoot>\n  </table>\n</div>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionMatrixDropdownModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-matrixdropdown-question\",\n  templateUrl: \"./matrixdropdown.component.html\"\n})\nexport class MatrixDropdownComponent extends QuestionAngular<QuestionMatrixDropdownModel> {}\n\nAngularComponentFactory.Instance.registerComponent(\"matrixdropdown-question\", MatrixDropdownComponent);","<ng-template #template>\n    <sv-ng-matrix-table *ngIf=\"model.renderedTable?.showTable\" [question]=\"model\" [table]=\"model.renderedTable\"></sv-ng-matrix-table>\n</ng-template>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionMatrixDynamicModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-matrixdynamic-question\",\n  templateUrl: \"./matrixdynamic.component.html\"\n})\nexport class MatrixDynamicComponent extends QuestionAngular<QuestionMatrixDynamicModel> {}\n\nAngularComponentFactory.Instance.registerComponent(\"matrixdynamic-question\", MatrixDynamicComponent);","<ng-template #template>\n  <div #contentElement>\n    <div *ngIf=\"model.renderedTable.showAddRowOnTop\" [class]=\"model.cssClasses.footer\">\n      <ng-container *ngTemplateOutlet=\"addRowButton\"></ng-container>\n    </div>\n    <sv-ng-matrix-table *ngIf=\"model.renderedTable?.showTable\" [question]=\"model\" [table]=\"model.renderedTable\"></sv-ng-matrix-table>\n    <div *ngIf=\"!model.renderedTable.showTable\" [class]=\"model.cssClasses.emptyRowsSection\">\n      <div [class]=\"model.cssClasses.emptyRowsText\" [model]=\"model.locEmptyRowsText\" sv-ng-string></div>\n      <ng-container *ngIf=\"model.renderedTable.showAddRow\">\n        <ng-container  *ngTemplateOutlet=\"addRowButton\"></ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"model.renderedTable.showAddRowOnBottom\" [class]=\"model.cssClasses.footer\">\n      <ng-container *ngTemplateOutlet=\"addRowButton\"></ng-container>\n    </div>\n  </div>\n  <ng-template #addRowButton>\n    <button type=\"button\" [class]=\"model.getAddRowButtonCss(true)\" (click)=\"model.addRowUI()\">\n        <sv-ng-string [model]=\"model.locAddRowText\" ></sv-ng-string>\n        <span [class]=\"model.cssClasses.iconAdd\"></span>\n    </button>\n  </ng-template>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\nimport { Action, Base } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-matrix-remove-btn\",\n  templateUrl: \"./remove-button.component.html\"\n})\nexport class MatrixDynamicRemoveButtonComponent {\n  @Input() model!: Action;\n\n  get question() {\n    return this.model.data.question;\n  }\n\n  get row() {\n    return this.model.data.row;\n  }\n\n  getModel(): Base {\n    return this.model;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\n  \"sv-matrix-remove-button\",\n  MatrixDynamicRemoveButtonComponent\n);\n","<button type=\"button\" [class]=\"question.getRemoveRowButtonCss()\" [disabled]=\"question.isInputReadOnly\" (click)=\"question.removeRowUI(row)\">\n  <sv-ng-string [model]=\"question.locRemoveRowText\" ></sv-ng-string>\n  <span [class]=\"question.cssClasses.iconRemove\"></span>\n</button>","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\nimport { Action } from \"survey-core\";\nimport { Base } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-matrix-detail-btn\",\n  templateUrl: \"./detail-button.component.html\"\n})\nexport class MatrixDetailButtonComponent {\n  @Input() public model!: Action;\n\n  get question() {\n    return this.model.data.question;\n  }\n\n  get row() {\n    return this.model.data.row;\n  }\n\n  getModel(): Base {\n    return this.model;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-matrix-detail-button\", MatrixDetailButtonComponent);\n","<button type=\"button\" [class]=\"question.getDetailPanelButtonCss(row)\" (click)=\"row.showHideDetailPanelClick()\"\n  [attr.aria-expanded]=\"question.getIsDetailPanelShowing(row) ? 'true' : 'false'\"\n  [attr.aria-controls]=\"question.getIsDetailPanelShowing(row) ? row.detailPanelId : null\">\n  <svg [class]=\"this.question.getDetailPanelIconCss(this.row)\" \n    [iconName]=\"this.question.getDetailPanelIconId(this.row)\" [size]=\"'auto'\" sv-ng-svg-icon>\n  </svg>\n</button>","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionExpressionModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-expression\",\n  template: \"<div [class]='model.cssClasses.root' #contentElement>{{ model.formatedValue }}</div>\"\n})\nexport class ExpressionComponent extends QuestionAngular<QuestionExpressionModel> {\n}\n\nAngularComponentFactory.Instance.registerComponent(\"expression-question\", ExpressionComponent);","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionImageModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-image-question\",\n  templateUrl: \"./image.component.html\"\n})\nexport class ImageQuestionComponent extends QuestionAngular<QuestionImageModel> {\n  override ngAfterViewInit(): void {\n    this.model.locImageLink.onChanged = () => {\n      this.detectChanges();\n    };\n    super.ngAfterViewInit();\n  }\n  override ngOnDestroy(): void {\n    this.model.locImageLink.onChanged = () => {};\n    super.ngOnDestroy();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"image-question\", ImageQuestionComponent);","<div [class]=\"model.cssClasses.root\" #contentElement>\n  <img\n    *ngIf=\"model.renderedMode === 'image'\"\n    [visible]=\"!!model.locImageLink.renderedHtml && !model.contentNotLoaded\"\n    [class]=\"model.getImageCss()\"\n    [attr.src]=\"model.locImageLink.renderedHtml\"\n    [attr.alt]=\"model.altText || model.title\"\n    [attr.width]=\"model.renderedWidth\"\n    [attr.height]=\"model.renderedHeight\"\n    [style]=\"{ objectFit: model.imageFit,  width: model.renderedStyleWidth, height: model.renderedStyleHeight }\"\n    (load)=\"model.onLoadHandler()\"\n    (error)=\"model.onErrorHandler()\"\n  /><video\n    controls\n    *ngIf=\"model.renderedMode === 'video'\"\n    [visible]=\"!!model.locImageLink.renderedHtml && !model.contentNotLoaded\"\n    [class]=\"model.getImageCss()\"\n    [attr.src]=\"model.locImageLink.renderedHtml\"\n    [attr.width]=\"model.renderedWidth\"\n    [attr.height]=\"model.renderedHeight\"\n    [style]=\"{ objectFit: model.imageFit,  width: model.renderedStyleWidth, height: model.renderedStyleHeight }\"\n    (loadedmetadata)=\"model.onLoadHandler()\"\n    (error)=\"model.onErrorHandler()\"\n  ></video>\n  <iframe\n    *ngIf=\"model.renderedMode === 'youtube'\"\n    [class]=\"model.getImageCss()\"\n    [attr.src]=\"model.locImageLink.renderedHtml | safeResourceUrl\"\n    [attr.width]=\"model.renderedWidth\"\n    [attr.height]=\"model.renderedHeight\"\n    [style]=\"{ objectFit: model.imageFit,  width: model.renderedStyleWidth, height: model.renderedStyleHeight }\"\n    ></iframe>\n    <div *ngIf=\"!model.locImageLink.renderedHtml || model.contentNotLoaded\" [class]=\"model.cssClasses.noImage\">\n      <svg [iconName]=\"model.cssClasses.noImageSvgIconId\" [size]=\"48\" sv-ng-svg-icon></svg>\n    </div>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { SurveyError } from \"survey-core\";\n\n@Component({\n  selector: \"sv-question-error\",\n  templateUrl: \"./question-error.component.html\"\n})\nexport class QuestionErrorComponent {\n  @Input() error!: SurveyError;\n  @Input() cssClasses?: any;\n  @Input() element: any;\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-question-error\", QuestionErrorComponent);","<div>\n  <span\n    [class]=\"cssClasses ? cssClasses.error.icon : 'panel-error-icon'\"\n    aria-hidden=\"true\"\n  ></span>\n  <span [class]=\"cssClasses ? cssClasses.error.item : 'panel-error-item'\" [model]=\"error.locText\" sv-ng-string>\n  </span>\n</div>","import { Question } from \"survey-core\";\nimport { QuestionCustomModel } from \"survey-core\";\nimport { Component } from \"@angular/core\";\nimport { QuestionAngular, getComponentName } from \"../question\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-custom-question\",\n  template: \"<ng-template [component]='{ name: getComponentName(contentQuestion), data: { model: contentQuestion } }'></ng-template>\"\n})\nexport class CustomQuestionComponent extends QuestionAngular<QuestionCustomModel> {\n  get contentQuestion(): Question {\n    return this.model.contentQuestion;\n  }\n  getComponentName(element: Question): string { return getComponentName(element); }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"custom-question\", CustomQuestionComponent);\n","\nimport { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { QuestionAngular } from \"../question\";\nimport { PanelModel, QuestionCompositeModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-composite-question\",\n  template: \"<sv-ng-panel [model]='contentPanel'></sv-ng-panel>\"\n})\nexport class CompositeQuestionComponent extends QuestionAngular<QuestionCompositeModel> {\n  get contentPanel(): PanelModel {\n    return this.model.contentPanel;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"composite-question\", CompositeQuestionComponent);\n","import { Component, Input, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { Cover, CoverCell, SurveyModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-header-cell\",\n  templateUrl: \"./header-cell.component.html\",\n  styles: [\":host { display: none; }\"],\n})\nexport class HeaderCellComponent extends EmbeddedViewContentComponent {\n  @Input() model!: CoverCell;\n  @ViewChild(\"actionContent\", { read: ViewContainerRef, static: true }) actionContent!: ViewContainerRef;\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-header-cell\", HeaderCellComponent);","\n<ng-template #template>\n  <div [class]=\"model.css\" [style]=\"model.style\">\n    <div class=\"sv-header__cell-content\" [style]=\"model.contentStyle\">\n      <div *ngIf=\"model.showLogo\" class=\"sv-header__logo\">\n        <div [class]=\"model.survey.logoClassNames\">\n          <ng-template [component]=\"{ name: model.survey.getElementWrapperComponentName(model.survey, 'logo-image'), data: { data: model.survey.getElementWrapperComponentData(model.survey, 'logo-image') } }\"></ng-template>\n        </div>\n      </div>\n      <div *ngIf=\"model.showTitle\" class=\"sv-header__title\" [style]=\"{ maxWidth: model.textAreaWidth }\">\n        <sv-ng-element-title [element]=\"model.survey\"></sv-ng-element-title>\n      </div>\n      <div *ngIf=\"model.showDescription\" class=\"sv-header__description\" [style]=\"{ maxWidth: model.textAreaWidth }\">\n        <div *ngIf=\"model.survey.renderedHasDescription\" [class]=\"model.survey.css.description\" [model]=\"model.survey.locDescription\" sv-ng-string></div>\n      </div>\n    </div>\n  </div>\n</ng-template>","import { Component, Input, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { Cover, CoverCell, SurveyModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-header-mobile\",\n  templateUrl: \"./header-mobile.component.html\",\n  styles: [\":host { display: none; }\"],\n})\nexport class HeaderMobileComponent extends EmbeddedViewContentComponent {\n  @Input() model!: Cover;\n  @ViewChild(\"actionContent\", { read: ViewContainerRef, static: true }) actionContent!: ViewContainerRef;\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-header-cell\", HeaderMobileComponent);","\n<ng-template #template>\n  <div class=\"sv-header--mobile\">\n    <div *ngIf=\"model.survey.hasLogo\" class=\"sv-header__logo\">\n      <div [class]=\"model.survey.logoClassNames\">\n        <ng-template [component]=\"{ name: model.survey.getElementWrapperComponentName(model.survey, 'logo-image'), data: { data: model.survey.getElementWrapperComponentData(model.survey, 'logo-image') } }\"></ng-template>\n      </div>\n    </div>\n    <div *ngIf=\"model.survey.hasTitle\" class=\"sv-header__title\" [style]=\"{ maxWidth: model.renderedtextAreaWidth }\">\n      <sv-ng-element-title [element]=\"model.survey\"></sv-ng-element-title>\n    </div>\n    <div *ngIf=\"model.survey.renderedHasDescription\" class=\"sv-header__description\" [style]=\"{ maxWidth: model.renderedtextAreaWidth }\">\n      <div *ngIf=\"model.survey.renderedHasDescription\" [class]=\"model.survey.css.description\" [model]=\"model.survey.locDescription\" sv-ng-string></div>\n    </div>\n  </div>\n</ng-template>","import { Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { Cover, CoverCell, SurveyModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-header, sv-ng-header\",\n  templateUrl: \"./header.component.html\",\n  styles: [\":host { display: none }\"]\n})\nexport class HeaderComponent extends BaseAngular<Cover> {\n  @Input() model!: Cover;\n  @Input() survey!: SurveyModel;\n  @ViewChild(\"container\") container!: ElementRef<HTMLDivElement>;\n  getModel(): Cover {\n    this.model.survey = this.survey;\n    return this.model;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-header\", HeaderComponent);","<ng-template #template>\n  <div *ngIf=\"(survey.headerView === 'advanced')\" [class]=\"model.headerClasses\" [style]=\"{ height: model.renderedHeight }\">\n    <div *ngIf=\"!!model.backgroundImage\" [style]=\"model.backgroundImageStyle\" [class]=\"model.backgroundImageClasses\"></div>\n    <div *ngIf=\"!survey.isMobile\" [class]=\"model.contentClasses\" [style.width]=\"model.maxWidth\">\n      <ng-container *ngFor=\"let cell of model.cells\">\n        <sv-ng-header-cell [model]=\"cell\"></sv-ng-header-cell>\n      </ng-container>\n    </div>\n    <div *ngIf=\"survey.isMobile\">\n      <sv-ng-header-mobile [model]=\"model\"></sv-ng-header-mobile>\n    </div>\n  </div>\n</ng-template>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { TextAreaComponent } from \"./components/text-area/text-area.component\";\nimport { SurveyComponent } from \"./survey.component\";\nimport { PopupSurveyComponent } from \"./popup.survey.component\";\nimport { PageComponent } from \"./page.component\";\nimport { QuestionComponent } from \"./question.component\";\nimport { StringViewerComponent } from \"./string-viewer.component\";\nimport { PopupPointerComponent } from \"./components/popup/popup-pointer.component\";\nimport { PopupComponent } from \"./components/popup/popup.component\";\nimport { PopupBaseContainerComponent } from \"./components/popup/popup-container.component\";\nimport { QuestionSkeletonComponent } from \"./components/skeleton.component\";\nimport { CharacterCounterComponent } from \"./components/character-counter/character-counter.component\";\nimport { DropdownComponent } from \"./components/dropdown/dropdown.component\";\nimport { TagboxFilterComponent } from \"./components/tagbox/tagbox-filter.component\";\nimport { TagboxItemComponent } from \"./components/tagbox/tagbox-item.component\";\nimport { TagboxComponent } from \"./components/tagbox/tagbox.component\";\nimport { DropdownOptionItemComponent } from \"./components/renderAs/dropdown-select/dropdown-option-item.component\";\nimport { DropdownSelectComponent } from \"./components/renderAs/dropdown-select/dropdown-select.component\";\nimport { TextQuestionComponent } from \"./questions/text.component\";\nimport { HtmlQuestionComponent } from \"./questions/html.component\";\nimport { RadiogroupComponent } from \"./questions/radiogroup.component\";\nimport { RadiogroupItemComponent } from \"./questions/radiogroup-item.component\";\nimport { CheckboxComponent } from \"./questions/checkbox.component\";\nimport { CheckboxItemComponent } from \"./questions/checkbox-item.component\";\nimport { DropdownQuestionComponent } from \"./questions/dropdown.component\";\nimport { TagboxQuestionComponent } from \"./questions/tagbox.component\";\nimport { RatingQuestionComponent } from \"./questions/rating.component\";\nimport { BooleanQuestionComponent } from \"./questions/boolean.component\";\nimport { ImagePickerItemComponent } from \"./questions/imagepicker-item.component\";\nimport { ImagePickerQuestionComponent } from \"./questions/imagepicker.component\";\n\nimport { ActionBarComponent } from \"./components/action-bar/action-bar.component\";\nimport { ActionComponent } from \"./components/action-bar/action.component\";\nimport { ActionBarItemComponent } from \"./components/action-bar/action-bar-item.component\";\nimport { ActionBarItemDropdownComponent } from \"./components/action-bar/action-bar-item-dropdown.component\";\nimport { SelectBaseItemComponent } from \"./questions/selectbase-item\";\nimport { SelectBaseComponent } from \"./questions/selectbase.component\";\nimport { SurveyCommentComponent } from \"./comment.component\";\nimport { SurveyCommentOtherComponent } from \"./comment-other.component\";\nimport { ElementHeaderComponent } from \"./components/element-header/element-header.component\";\nimport { ElementTitleActionsComponent } from \"./components/element-title/title-actions.component\";\nimport { ElementTitleComponent } from \"./components/element-title/element-title.component\";\nimport { SurveyHeaderComponent } from \"./components/survey-header/survey-header.component\";\n\nimport { DynamicHeadComponent } from \"./components/element-title/dynamic-head.component\";\nimport { ListComponent } from \"./components/list/list.component\";\nimport { ListItemComponent } from \"./components/list/list-item.component\";\nimport { ListItemContentComponent } from \"./components/list/list-item-content.component\";\nimport { ListItemGroupComponent } from \"./components/list/list-item-group.component\";\nimport { RatingItemComponent } from \"./components/rating/rating-item.component\";\nimport { RatingItemStarComponent } from \"./components/rating/rating-item-star.component\";\nimport { RatingItemSmileyComponent } from \"./components/rating/rating-item-smiley.component\";\nimport { RowComponent } from \"./row.component\";\nimport { RatingDropdownItemComponent } from \"./components/renderAs/rating-dropdown/rating-dropdown-item.component\";\nimport { RatingDropdownComponent } from \"./components/renderAs/rating-dropdown/rating-dropdown.component\";\nimport { BooleanCheckboxComponent } from \"./components/renderAs/boolean-checkbox/boolean-checkbox.component\";\nimport { BooleanRadioComponent } from \"./components/renderAs/boolean-radio/boolean-radio.component\";\nimport { BooleanRadioItemComponent } from \"./components/renderAs/boolean-radio/boolean-radio-item.component\";\nimport { ProgressDefaultComponent } from \"./components/progress/default/progress.component\";\nimport { ProgressButtonsComponent } from \"./components/progress/buttons/progress.component\";\nimport { ProgressTocComponent } from \"./components/progress/toc/progress.component\";\nimport { PanelComponent } from \"./panel.component\";\nimport { PopupService } from \"./components/popup/popup.service\";\nimport { SurveyNavigationButton } from \"./components/survey-actions/survey-nav-btn.component\";\nimport { MatrixQuestionComponent } from \"./questions/matrix.component\";\nimport { SvgIconComponent } from \"./components/svg-icon/svg-icon.component\";\nimport { FileQuestionComponent, } from \"./questions/file.component\";\nimport { VisibleDirective } from \"./utils/ng-show.directive\";\nimport { Key2ClickDirective } from \"./utils/ng-key2click.directive\";\nimport { SafeUrlPipe, SafeResourceUrlPipe } from \"./utils/safe-url.pipe\";\nimport { SafeHtmlPipe } from \"./utils/safe-html.pipe\";\nimport { CommentQuestionComponent } from \"./questions/comment.component\";\nimport { SignaturePadQuestionComponent } from \"./questions/signature.component\";\nimport { MultipleTextComponent } from \"./questions/multipletext.component\";\nimport { ErrorsComponent } from \"./errors.component\";\nimport { MultipleTextItemComponent } from \"./questions/multipletextitem.component\";\nimport { DynamicComponentDirective } from \"./utils/dynamic.directive\";\nimport { RankingQuestionComponent } from \"./questions/ranking.component\";\nimport { RankingItemComponent } from \"./questions/ranking-item.component\";\nimport { RankingItemContentComponent } from \"./questions/ranking-item-content.component\";\nimport { SurveyStringComponent } from \"./survey-string.component\";\nimport { StringEditorComponent } from \"./string-editor.component\";\nimport { PanelDynamicAddBtn } from \"./components/paneldynamic-actions/paneldynamic-add-btn.component\";\nimport { PanelDynamicNextBtn } from \"./components/paneldynamic-actions/paneldynamic-next-btn.component\";\nimport { PanelDynamicPrevBtn } from \"./components/paneldynamic-actions/paneldynamic-prev-btn.component\";\nimport { PanelDynamicProgressText } from \"./components/paneldynamic-actions/paneldynamic-progress-text.component\";\nimport { PanelDynamicQuestionComponent } from \"./questions/paneldynamic.component\";\nimport { EmbeddedViewContentComponent } from \"./embedded-view-content.component\";\nimport { ElementComponent } from \"./element.component\";\nimport { CustomWidgetComponent } from \"./questions/customwidget.component\";\nimport { MatrixCellComponent } from \"./questions/matrixcell.component\";\nimport { MatrixDropdownCellComponent } from \"./questions/matrixdropdowncell.component\";\nimport { MatrixTableComponent } from \"./questions/matrixtable.component\";\nimport { MatrixDropdownComponent } from \"./questions/matrixdropdown.component\";\nimport { MatrixDynamicComponent } from \"./questions/matrixdynamic.component\";\nimport { MatrixDynamicRemoveButtonComponent } from \"./components/matrix-actions/remove-button/remove-button.component\";\nimport { MatrixDynamicDragDropIconComponent } from \"./components/matrix-actions/drag-drop-icon/drag-drop-icon\";\nimport { MatrixDetailButtonComponent } from \"./components/matrix-actions/detail-button/detail-button.component\";\nimport { MatrixRequiredHeader } from \"./questions/matrixrequiredheader.component\";\nimport { ExpressionComponent } from \"./questions/expression.component\";\nimport { ImageQuestionComponent } from \"./questions/image.component\";\nimport { BrandInfoComponent } from \"./components/brand-info/brand-info.component\";\nimport { QuestionErrorComponent } from \"./components/question-error/question-error.component\";\nimport { CustomQuestionComponent } from \"./questions/custom.component\";\nimport { CompositeQuestionComponent } from \"./questions/composite.component\";\nimport { SurveyContentComponent } from \"./survey-content.component\";\nimport { TemplateRendererComponent } from \"./template-renderer.component\";\nimport { ModalComponent } from \"./components/popup/modal-container.component\";\nimport { ButtonGroupQuestionComponent } from \"./questions/button-group/button-group.component\";\nimport { ButtonGroupItemComponent } from \"./questions/button-group/button-group-item.component\";\nimport { MatrixRowComponent } from \"./questions/matrix-row.component\";\nimport { LogoImageComponent } from \"./components/survey-header/logo-image.component\";\nimport { SkeletonComponent } from \"./components/skeleton/skeleton.component\";\nimport { PaneldynamicRemoveButtonComponent } from \"./components/paneldynamic-actions/paneldynamic-remove-btn.component\";\nimport { TimerPanelComponent } from \"./components/timer-panel/timer-panel.component\";\nimport { NotifierComponent } from \"./components/notifier/notifier.component\";\nimport { ComponentsContainerComponent } from \"./components-container.component\";\nimport { MultipleTextRowComponent } from \"./questions/multipletextrow.component\";\nimport { LoadingIndicatorComponent } from \"./angular-ui\";\nimport { HeaderComponent } from \"./components/header/header.component\";\nimport { HeaderCellComponent } from \"./components/header/header-cell.component\";\nimport { HeaderMobileComponent } from \"./components/header/header-mobile.component\";\nimport { ChooseFileBtn } from \"./components/file/choose-file.component\";\nimport { FilePreviewComponent } from \"./components/file/file-preview.component\";\nimport { FileItemComponent } from \"./components/file/file-item.component\";\nimport { FilePageComponent } from \"./components/file/file-page.component\";\nimport { SvgBundleComponent } from \"./svgbundle.component\";\n\n@NgModule({\n  declarations: [\n    VisibleDirective, Key2ClickDirective, PanelDynamicAddBtn, PanelDynamicNextBtn, PanelDynamicPrevBtn, PanelDynamicProgressText, ElementComponent, TemplateRendererComponent,\n    SurveyComponent, SurveyContentComponent, PopupSurveyComponent, PageComponent, PanelComponent, QuestionComponent, StringViewerComponent, SurveyStringComponent, StringEditorComponent,\n    TextAreaComponent,\n    QuestionSkeletonComponent, TextQuestionComponent, RadiogroupComponent, RadiogroupItemComponent, CheckboxComponent, CheckboxItemComponent,\n    DropdownComponent, DropdownQuestionComponent, DropdownSelectComponent, DropdownOptionItemComponent,\n    PopupComponent, PopupBaseContainerComponent, PopupPointerComponent,\n    CharacterCounterComponent, ListComponent, ListItemComponent, ListItemContentComponent, ListItemGroupComponent, RatingItemComponent, RatingItemStarComponent, RatingItemSmileyComponent,\n    TagboxFilterComponent, TagboxComponent, TagboxQuestionComponent, TagboxItemComponent,\n    ActionBarComponent, ActionComponent, ActionBarItemComponent, ActionBarItemDropdownComponent, HtmlQuestionComponent,\n    SelectBaseItemComponent, SelectBaseComponent, SurveyCommentComponent, SurveyCommentOtherComponent, ElementHeaderComponent, ElementTitleActionsComponent, ElementTitleComponent, DynamicHeadComponent, RowComponent,\n    RatingQuestionComponent, RatingDropdownItemComponent, RatingDropdownComponent, BooleanQuestionComponent, BooleanCheckboxComponent, BooleanRadioComponent, BooleanRadioItemComponent, ImagePickerItemComponent, ImagePickerQuestionComponent, ImageQuestionComponent,\n    SurveyHeaderComponent, ProgressDefaultComponent, ProgressButtonsComponent, ProgressTocComponent, SurveyNavigationButton, MatrixQuestionComponent, SvgIconComponent, FileQuestionComponent, SafeUrlPipe, SafeHtmlPipe, CommentQuestionComponent, SignaturePadQuestionComponent, ErrorsComponent,\n    MultipleTextComponent, MultipleTextItemComponent, DynamicComponentDirective, RankingQuestionComponent, RankingItemComponent, RankingItemContentComponent, PanelDynamicQuestionComponent, EmbeddedViewContentComponent, CustomWidgetComponent,\n    MatrixCellComponent, MatrixDropdownCellComponent, MatrixTableComponent, MatrixDropdownComponent,\n    MatrixDynamicComponent, MatrixDetailButtonComponent, MatrixDynamicRemoveButtonComponent, MatrixDynamicDragDropIconComponent, MatrixRequiredHeader, ExpressionComponent, SafeResourceUrlPipe, BrandInfoComponent, QuestionErrorComponent,\n    CustomQuestionComponent, CompositeQuestionComponent, ButtonGroupItemComponent, ButtonGroupQuestionComponent, MatrixRowComponent, ModalComponent, LogoImageComponent, SkeletonComponent, TimerPanelComponent, PaneldynamicRemoveButtonComponent,\n    NotifierComponent, ComponentsContainerComponent, MultipleTextRowComponent, LoadingIndicatorComponent, HeaderComponent, HeaderCellComponent, HeaderMobileComponent, ChooseFileBtn, FilePreviewComponent, SvgBundleComponent, FileItemComponent, FilePageComponent\n  ],\n  imports: [\n    CommonModule, FormsModule\n  ],\n  exports: [\n    VisibleDirective, Key2ClickDirective, PanelDynamicAddBtn, PanelDynamicNextBtn, PanelDynamicPrevBtn, PanelDynamicProgressText, ElementComponent, TemplateRendererComponent,\n    SurveyComponent, SurveyContentComponent, PopupSurveyComponent, PageComponent, PanelComponent, QuestionComponent, StringViewerComponent, SurveyStringComponent, StringEditorComponent,\n    TextAreaComponent,\n    QuestionSkeletonComponent, TextQuestionComponent, RadiogroupComponent, RadiogroupItemComponent, CheckboxComponent, CheckboxItemComponent,\n    CharacterCounterComponent,\n    DropdownComponent, DropdownQuestionComponent, DropdownSelectComponent, DropdownOptionItemComponent,\n    PopupComponent, PopupBaseContainerComponent, PopupPointerComponent,\n    CharacterCounterComponent, ListComponent, ListItemComponent, ListItemContentComponent, ListItemGroupComponent, RatingItemComponent, RatingItemStarComponent, RatingItemSmileyComponent,\n    TagboxFilterComponent, TagboxComponent, TagboxQuestionComponent, TagboxItemComponent,\n    ActionBarComponent, ActionComponent, ActionBarItemComponent, ActionBarItemDropdownComponent, HtmlQuestionComponent,\n    SelectBaseItemComponent, SelectBaseComponent, SurveyCommentComponent, SurveyCommentOtherComponent, ElementHeaderComponent, ElementTitleComponent, DynamicHeadComponent, RowComponent,\n    RatingQuestionComponent, RatingDropdownItemComponent, RatingDropdownComponent, BooleanQuestionComponent, BooleanCheckboxComponent, BooleanRadioComponent, BooleanRadioItemComponent, ImagePickerItemComponent, ImagePickerQuestionComponent, ImageQuestionComponent,\n    SurveyHeaderComponent, ProgressDefaultComponent, ProgressButtonsComponent, SurveyNavigationButton, MatrixQuestionComponent, SvgIconComponent, FileQuestionComponent, SafeUrlPipe, SafeHtmlPipe, CommentQuestionComponent, SignaturePadQuestionComponent, ErrorsComponent,\n    MultipleTextComponent, MultipleTextItemComponent, DynamicComponentDirective, RankingQuestionComponent, RankingItemComponent, RankingItemContentComponent, PanelDynamicQuestionComponent, EmbeddedViewContentComponent, CustomWidgetComponent,\n    MatrixCellComponent, MatrixDropdownCellComponent, MatrixTableComponent, MatrixDropdownComponent,\n    MatrixDynamicComponent, MatrixDetailButtonComponent, MatrixDynamicRemoveButtonComponent, MatrixDynamicDragDropIconComponent, MatrixRequiredHeader, ExpressionComponent, SafeResourceUrlPipe,\n    CustomQuestionComponent, CompositeQuestionComponent, ButtonGroupQuestionComponent, ModalComponent, LogoImageComponent, SkeletonComponent, TimerPanelComponent, PaneldynamicRemoveButtonComponent,\n    NotifierComponent, ComponentsContainerComponent, MultipleTextRowComponent, LoadingIndicatorComponent, HeaderComponent, HeaderCellComponent, HeaderMobileComponent, FilePreviewComponent, SvgBundleComponent, FileItemComponent, FilePageComponent\n  ],\n  providers: [PopupService],\n})\nexport class SurveyModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './angular-ui';\n"],"names":["i0","TemplateRef","Component","ViewChild","Directive","Input","ViewContainerRef","i1","i2.DynamicComponentDirective","i1.ActionComponent","i2","i1.ActionBarComponent","i2.VisibleDirective","i3","i4.DynamicComponentDirective","DomPortalOutlet","portal","ComponentPortal","Injectable","createPopupModalViewModel","settings","createDialogOptions","i1.PopupService","SvgRegistry","Survey","HostBinding","i1.DynamicComponentDirective","i2.SurveyStringComponent","i1.DynamicHeadComponent","i2.SvgIconComponent","i3.ElementTitleActionsComponent","i4","i1.ElementTitleComponent","ElementRef","i1.ElementComponent","i3.DynamicComponentDirective","i3.ErrorsComponent","i4.RowComponent","i5","i6.DynamicComponentDirective","Pipe","i1.SvgBundleComponent","i2.SurveyHeaderComponent","i3.PageComponent","i4.BrandInfoComponent","i5.NotifierComponent","i6","i7","i8.DynamicComponentDirective","i9.SafeHtmlPipe","i1.ModalComponent","i2.SurveyContentComponent","PopupSurveyModel","i1.SvgIconComponent","i2.SurveyComponent","i3.ActionBarComponent","HostListener","i1.ErrorsComponent","i2.ElementHeaderComponent","i3.SurveyStringComponent","i4.SurveyCommentComponent","i7.VisibleDirective","i2.SafeHtmlPipe","LocalizableString","createPopupViewModel","i1.PopupBaseContainerComponent","Helpers","i1.SurveyStringComponent","i3.PopupComponent","i5.DynamicComponentDirective","DropdownMultiSelectListModel","i1.TagboxItemComponent","i4.SurveyStringComponent","i2.SurveyCommentOtherComponent","RendererFactory","i1.SafeUrlPipe","i1.CharacterCounterComponent","i1.SafeHtmlPipe","i1.SurveyCommentOtherComponent","i1.DropdownComponent","i1.TagboxComponent","ButtonGroupItemModel","i1.ButtonGroupItemComponent","doKey2ClickUp","doKey2ClickDown","doKey2ClickBlur","i2.Key2ClickDirective","getActionDropdownButtonTarget","ActionDropdownViewModel","i2.PopupComponent","i3.Key2ClickDirective","i1.CheckboxItemComponent","i2.RadiogroupItemComponent","i1.Key2ClickDirective","i2.ListItemComponent","i5.VisibleDirective","i1.ListItemContentComponent","i1.ElementTitleActionsComponent","i1.BooleanRadioItemComponent","SurveyProgressModel","ProgressButtonsResponsivityManager","i1.ListComponent","i3.RowComponent","i4.ActionBarComponent","i3.SafeUrlPipe","i1.FileItemComponent","i1.FilePageComponent","i2.FileItemComponent","i2.ChooseFileBtn","i4.LoadingIndicatorComponent","i5.SvgIconComponent","i6.ActionComponent","i3.LoadingIndicatorComponent","i4.VisibleDirective","i2.TextQuestionComponent","i1.MultipleTextItemComponent","i1.MultipleTextRowComponent","i2.PanelDynamicAddBtn","i4.PanelDynamicPrevBtn","i5.PanelDynamicNextBtn","i6.PanelDynamicProgressText","SurveyModel","i3.SafeHtmlPipe","i1.MatrixDynamicDragDropIconComponent","i2.ActionBarComponent","i5.SelectBaseItemComponent","i6.SurveyCommentOtherComponent","i9.VisibleDirective","i1.MatrixDropdownCellComponent","i2.MatrixRequiredHeader","i3.MatrixRowComponent","i4.MatrixDropdownCellComponent","i1.MatrixTableComponent","i3.VisibleDirective","i4.SafeResourceUrlPipe","i1.PanelComponent","i1.HeaderCellComponent","i2.HeaderMobileComponent","CommonModule","FormsModule","NgModule"],"mappings":"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"}