{"version":3,"file":"survey-angular-ui.js","sources":["../../src/embedded-view-content.component.ts","../../src/base-angular.ts","../../src/component-factory.ts","../../src/utils/dynamic.directive.ts","../../src/components/action-bar/action.component.ts","../../src/components/action-bar/action.component.html","../../src/components/action-bar/action-bar.component.ts","../../src/components/action-bar/action-bar.component.html","../../src/utils/ng-show.directive.ts","../../src/components/popup/popup-container.component.ts","../../src/components/popup/popup-container.component.html","../../src/components/popup/popup.service.ts","../../src/components/popup/modal-container.component.ts","../../src/svgbundle.component.ts","../../src/components/element-title/dynamic-head.component.ts","../../src/components/element-title/dynamic-head.component.html","../../src/components/svg-icon/svg-icon.component.ts","../../src/survey-string.component.ts","../../src/components/element-title/title-actions.component.ts","../../src/components/element-title/title-actions.component.html","../../src/components/element-title/element-title.component.ts","../../src/components/element-title/element-title.component.html","../../src/components/survey-header/survey-header.component.ts","../../src/components/survey-header/survey-header.component.html","../../src/errors.component.ts","../../src/errors.component.html","../../src/element.component.ts","../../src/element.component.html","../../src/row.component.ts","../../src/row.component.html","../../src/page.component.ts","../../src/page.component.html","../../src/components/brand-info/brand-info.component.ts","../../src/components/brand-info/brand-info.component.html","../../src/components/notifier/notifier.component.ts","../../src/components/notifier/notifier.component.html","../../src/utils/safe-html.pipe.ts","../../src/survey-content.component.ts","../../src/survey-content.component.html","../../src/survey.component.ts","../../src/popup.survey.component.ts","../../src/popup.survey.component.html","../../src/question.ts","../../src/components/element-header/element-header.component.ts","../../src/components/element-header/element-header.component.html","../../src/comment.component.ts","../../src/comment.component.html","../../src/question.component.ts","../../src/question.component.html","../../src/string-viewer.component.ts","../../src/string-viewer.component.html","../../src/components/text-area/text-area.component.ts","../../src/components/text-area/text-area.component.html","../../src/components/popup/popup-pointer.component.ts","../../src/components/popup/popup-pointer.component.html","../../src/components/popup/popup.component.ts","../../src/components/skeleton.component.ts","../../src/components/skeleton.component.html","../../src/components/dropdown/dropdown.component.ts","../../src/components/dropdown/dropdown.component.html","../../src/components/tagbox/tagbox-filter.component.ts","../../src/components/tagbox/tagbox-filter.component.html","../../src/components/tagbox/tagbox-item.component.ts","../../src/components/tagbox/tagbox-item.component.html","../../src/components/tagbox/tagbox.component.ts","../../src/components/tagbox/tagbox.component.html","../../src/components/renderAs/dropdown-select/dropdown-option-item.component.ts","../../src/comment-other.component.ts","../../src/comment-other.component.html","../../src/components/renderAs/dropdown-select/dropdown-select.component.ts","../../src/components/renderAs/dropdown-select/dropdown-select.component.html","../../src/utils/safe-url.pipe.ts","../../src/components/survey-header/logo-image.component.ts","../../src/components/survey-header/logo-image.component.html","../../src/components/character-counter/character-counter.component.ts","../../src/components/character-counter/character-counter.component.html","../../src/questions/text.component.ts","../../src/questions/text.component.html","../../src/questions/html.component.ts","../../src/questions/html.component.html","../../src/questions/selectbase.component.ts","../../src/questions/selectbase.component.html","../../src/questions/radiogroup.component.ts","../../src/questions/radiogroup-item.component.ts","../../src/questions/radiogroup-item.component.html","../../src/questions/checkbox.component.ts","../../src/questions/checkbox-item.component.ts","../../src/questions/checkbox-item.component.html","../../src/questions/dropdown.component.ts","../../src/questions/dropdown.component.html","../../src/questions/tagbox.component.ts","../../src/questions/tagbox.component.html","../../src/questions/rating.component.ts","../../src/questions/rating.component.html","../../src/questions/boolean.component.ts","../../src/questions/boolean.component.html","../../src/questions/imagepicker-item.component.ts","../../src/questions/imagepicker-item.component.html","../../src/questions/imagepicker.component.ts","../../src/questions/imagepicker.component.html","../../src/questions/button-group/button-group-item.component.ts","../../src/questions/button-group/button-group-item.component.html","../../src/questions/button-group/button-group.component.ts","../../src/questions/button-group/button-group.component.html","../../src/components-container.component.ts","../../src/components-container.component.html","../../src/utils/ng-key2click.directive.ts","../../src/components/action-bar/action-bar-item.component.ts","../../src/components/action-bar/action-bar-item.component.html","../../src/components/action-bar/action-bar-item-dropdown.component.ts","../../src/components/action-bar/action-bar-item-dropdown.component.html","../../src/questions/selectbase-item.ts","../../src/questions/selectbase-item.html","../../src/components/skeleton/skeleton.component.ts","../../src/components/skeleton/skeleton.component.html","../../src/components/timer-panel/timer-panel.component.ts","../../src/components/timer-panel/timer-panel.component.html","../../src/components/list/list-item.component.ts","../../src/components/list/list-item.component.html","../../src/components/list/list.component.ts","../../src/components/list/list.component.html","../../src/components/list/list-item-content.component.ts","../../src/components/list/list-item-content.component.html","../../src/components/list/list-item-group.component.ts","../../src/components/list/list-item-group.component.html","../../src/components/rating/rating-item.component.ts","../../src/components/rating/rating-item.component.html","../../src/components/rating/rating-item-star.component.ts","../../src/components/rating/rating-item-star.component.html","../../src/components/rating/rating-item-smiley.component.ts","../../src/components/rating/rating-item-smiley.component.html","../../src/components/renderAs/rating-dropdown/rating-dropdown-item.component.ts","../../src/components/renderAs/rating-dropdown/rating-dropdown-item.component.html","../../src/components/renderAs/rating-dropdown/rating-dropdown.component.ts","../../src/components/renderAs/rating-dropdown/rating-dropdown.component.html","../../src/components/renderAs/boolean-checkbox/boolean-checkbox.component.ts","../../src/components/renderAs/boolean-checkbox/boolean-checkbox.component.html","../../src/components/renderAs/boolean-radio/boolean-radio-item.component.ts","../../src/components/renderAs/boolean-radio/boolean-radio-item.component.html","../../src/components/renderAs/boolean-radio/boolean-radio.component.ts","../../src/components/renderAs/boolean-radio/boolean-radio.component.html","../../src/components/progress/default/progress.component.ts","../../src/components/progress/default/progress.component.html","../../src/components/progress/buttons/progress.component.ts","../../src/components/progress/buttons/progress.component.html","../../src/components/progress/toc/progress.component.ts","../../src/components/progress/toc/progress.component.html","../../src/panel.component.ts","../../src/panel.component.html","../../src/components/survey-actions/survey-nav-btn.component.ts","../../src/components/survey-actions/survey-nav-btn.component.html","../../src/components/file/file-item.component.ts","../../src/components/file/file-item.component.html","../../src/components/file/file-page.component.ts","../../src/components/file/file-page.component.html","../../src/components/file/file-preview.component.ts","../../src/components/file/file-preview.component.html","../../src/questions/matrix.component.ts","../../src/questions/matrix.component.html","../../src/components/file/choose-file.component.ts","../../src/components/file/choose-file.component.html","../../src/components/loading-indicator/loading-indicator.component.ts","../../src/components/loading-indicator/loading-indicator.component.html","../../src/questions/file.component.ts","../../src/questions/file.component.html","../../src/questions/comment.component.ts","../../src/questions/comment.component.html","../../src/questions/signature.component.ts","../../src/questions/signature.component.html","../../src/questions/multipletextitem.component.ts","../../src/questions/mutlipletextitem.component.html","../../src/questions/multipletextrow.component.ts","../../src/questions/multipletextrow.component.html","../../src/questions/multipletext.component.ts","../../src/questions/multipletext.component.html","../../src/questions/ranking.component.ts","../../src/questions/ranking.component.html","../../src/questions/ranking-item.component.ts","../../src/questions/ranking-item.component.html","../../src/questions/ranking-item-content.component.ts","../../src/questions/ranking-item-content.component.html","../../src/string-editor.component.ts","../../src/string-editor.component.html","../../src/components/paneldynamic-actions/paneldynamic-add-btn.component.ts","../../src/components/paneldynamic-actions/paneldynamic-add-btn.component.html","../../src/components/paneldynamic-actions/paneldynamic-next-btn.component.ts","../../src/components/paneldynamic-actions/paneldynamic-next-btn.component.html","../../src/components/paneldynamic-actions/paneldynamic-prev-btn.component.ts","../../src/components/paneldynamic-actions/paneldynamic-prev-btn.component.html","../../src/components/paneldynamic-actions/paneldynamic-remove-btn.component.ts","../../src/components/paneldynamic-actions/paneldynamic-remove-btn.component.html","../../src/components/paneldynamic-actions/paneldynamic-progress-text.component.ts","../../src/components/paneldynamic-actions/paneldynamic-progress-text.component.html","../../src/questions/paneldynamic.component.ts","../../src/questions/paneldynamic.component.html","../../src/template-renderer.component.ts","../../src/template-renderer.component.html","../../src/questions/customwidget.component.ts","../../src/questions/customwidget.component.html","../../src/questions/matrixcell.component.ts","../../src/questions/matrixcell.component.html","../../src/components/matrix-actions/drag-drop-icon/drag-drop-icon.ts","../../src/components/matrix-actions/drag-drop-icon/drag-drop-icon.component.html","../../src/questions/matrixdropdowncell.component.ts","../../src/questions/matrixdropdowncell.component.html","../../src/questions/matrixrequiredheader.component.ts","../../src/questions/matrix-row.component.ts","../../src/questions/matrix-row.component.html","../../src/questions/matrixtable.component.ts","../../src/questions/matrixtable.component.html","../../src/questions/matrixdropdown.component.ts","../../src/questions/matrixdropdown.component.html","../../src/questions/matrixdynamic.component.ts","../../src/questions/matrixdynamic.component.html","../../src/components/matrix-actions/remove-button/remove-button.component.ts","../../src/components/matrix-actions/remove-button/remove-button.component.html","../../src/components/matrix-actions/detail-button/detail-button.component.ts","../../src/components/matrix-actions/detail-button/detail-button.component.html","../../src/questions/expression.component.ts","../../src/questions/image.component.ts","../../src/questions/image.component.html","../../src/components/question-error/question-error.component.ts","../../src/components/question-error/question-error.component.html","../../src/questions/custom.component.ts","../../src/questions/composite.component.ts","../../src/components/header/header-cell.component.ts","../../src/components/header/header-cell.component.html","../../src/components/header/header-mobile.component.ts","../../src/components/header/header-mobile.component.html","../../src/components/header/header.component.ts","../../src/components/header/header.component.html","../../src/angular-ui.module.ts","../../src/survey-angular-ui.ts"],"sourcesContent":["import { Component, EmbeddedViewRef, OnInit, TemplateRef, ViewChild, ViewContainerRef } from \"@angular/core\";\n\n@Component({\n  template: \"\",\n})\n\nexport class EmbeddedViewContentComponent implements OnInit {\n  @ViewChild(\"template\", { read: TemplateRef, static: true }) templateRef!: TemplateRef<HTMLElement>\n  protected embeddedView?: EmbeddedViewRef<HTMLElement>;\n  constructor(protected viewContainerRef?: ViewContainerRef) {}\n\n  ngOnInit(): void {\n    if(!!this.templateRef) {\n      this.embeddedView = this.viewContainerRef?.createEmbeddedView(this.templateRef);\n    }\n  }\n}","import { ChangeDetectorRef, Component, DoCheck, OnChanges, OnDestroy, SimpleChange, ViewContainerRef } from \"@angular/core\";\nimport { ArrayChanges, Base, ISurvey, SurveyModel } from \"survey-core\";\nimport { EmbeddedViewContentComponent } from \"./embedded-view-content.component\";\n\n@Component({\n  template: \"\"\n})\nexport abstract class BaseAngular<T extends Base = Base> extends EmbeddedViewContentComponent implements DoCheck, OnDestroy {\n  constructor(protected changeDetectorRef: ChangeDetectorRef, viewContainerRef?: ViewContainerRef) {\n    super(viewContainerRef);\n  }\n  protected get surveyModel(): ISurvey {\n    return this.getModel().getSurvey();\n  }\n  protected abstract getModel(): T;\n  protected previousModel?: T;\n  private isModelSubsribed: boolean = false;\n\n  public ngDoCheck(): void {\n    if (this.previousModel !== this.getModel()) {\n      this.unMakeBaseElementAngular(this.previousModel);\n      this.makeBaseElementAngular(this.getModel());\n      this.onModelChanged();\n      this.previousModel = this.getModel();\n    }\n    this.setIsRendering(true);\n  }\n\n  protected onModelChanged() { }\n\n  private setIsRendering(val: boolean) {\n    const model = this.getModel();\n    if (!!model) {\n      (<any>model).isRendering = val;\n    }\n  }\n  private getIsRendering() {\n    const model = this.getModel();\n    return !!model && !!(<any>model).isRendering;\n  }\n  private isDestroyed: boolean = false;\n  ngOnDestroy() {\n    this.isDestroyed = true;\n    this.unMakeBaseElementAngular(this.getModel());\n    this.previousModel = undefined;\n  }\n\n  private makeBaseElementAngular(stateElement: T) {\n    if (!!stateElement && !(<any>stateElement).__ngImplemented) {\n      this.isModelSubsribed = true;\n      (<any>stateElement).__ngImplemented = true;\n      stateElement.iteratePropertiesHash((hash, key) => {\n        var val: any = hash[key];\n        if (Array.isArray(val)) {\n          var val: any = val;\n          val[\"onArrayChanged\"] = (arrayChanges: ArrayChanges) => {\n            this.update(key);\n          };\n        }\n      });\n      stateElement.setPropertyValueCoreHandler = (\n        hash: any,\n        key: string,\n        val: any\n      ) => {\n        if (hash[key] !== val) {\n          hash[key] = val;\n          this.update(key);\n        }\n      };\n      stateElement.enableOnElementRerenderedEvent();\n    }\n  }\n  private unMakeBaseElementAngular(stateElement?: Base) {\n    if (!!stateElement && this.isModelSubsribed) {\n      this.isModelSubsribed = false;\n      (<any>stateElement).__ngImplemented = false;\n      stateElement.setPropertyValueCoreHandler = <any>undefined;\n      stateElement.iteratePropertiesHash((hash, key) => {\n        var val: any = hash[key];\n        if (Array.isArray(val)) {\n          var val: any = val;\n          val[\"onArrayChanged\"] = () => { };\n        }\n      });\n      stateElement.disableOnElementRerenderedEvent();\n    }\n  }\n\n  protected update(key?: string): void {\n    if (this.getIsRendering()) return;\n    this.beforeUpdate();\n    if (key && this.getPropertiesToUpdateSync().indexOf(key) > -1) {\n      this.detectChanges();\n      this.afterUpdate(true);\n    } else {\n      queueMicrotask(() => {\n        if (!this.isDestroyed) {\n          this.setIsRendering(true);\n          this.detectChanges();\n        }\n        this.afterUpdate();\n      });\n    }\n  }\n  private getChangeDetectorRef() {\n    return this.embeddedView ? this.embeddedView : this.changeDetectorRef;\n  }\n  protected getPropertiesToUpdateSync(): Array<string> {\n    return [];\n  }\n  protected detectChanges() {\n    this.getChangeDetectorRef().detectChanges();\n  }\n\n  protected getShouldReattachChangeDetector(): boolean {\n    return true;\n  }\n\n  protected beforeUpdate(): void {\n    this.setIsRendering(true);\n  }\n  protected afterUpdate(isSync: boolean = false): void {\n    this.setIsRendering(false);\n    const model = this.getModel();\n    if(model && !this.isDestroyed) {\n      model.afterRerender();\n    }\n  }\n  ngAfterViewChecked(): void {\n    this.setIsRendering(false);\n  }\n}","import { Component, ComponentFactoryResolver, ComponentRef, Type, ViewContainerRef } from \"@angular/core\";\n\nexport class AngularComponentFactory {\n  public static Instance: AngularComponentFactory = new AngularComponentFactory();\n  private creatorHash: { [index: string]: Type<Component> } = {};\n\n  public registerComponent(\n    typeName: string,\n    componentType: Type<any>\n  ): void {\n    this.creatorHash[typeName] = componentType;\n  }\n  public getAllTypes(): Array<string> {\n    var result = new Array<string>();\n    for (var key in this.creatorHash) {\n      result.push(key);\n    }\n    return result.sort();\n  }\n  public isComponentRegistered(elementType: string): boolean {\n    return !!this.creatorHash[elementType];\n  }\n  public create(containerRef: ViewContainerRef, elementType: string, resolver: ComponentFactoryResolver): ComponentRef<Component> {\n    var componentType = this.creatorHash[elementType];\n    if (!componentType) return (null as any);\n    return containerRef.createComponent(resolver.resolveComponentFactory(componentType));\n  }\n}\n","import { ComponentFactoryResolver, Directive, ElementRef, Input, OnChanges, SimpleChanges, TemplateRef, ViewContainerRef } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\ninterface IDynamicComponent {\n  name: string;\n  data?: any;\n  default?: string;\n}\n\n@Directive({\n  selector: \"[component]\"\n})\n\nexport class DynamicComponentDirective implements OnChanges {\n  constructor(private containerRef: ViewContainerRef, private templateRef: TemplateRef<unknown>, private resolver: ComponentFactoryResolver) { }\n  @Input() component!: IDynamicComponent;\n  private componentInstance: any;\n  ngOnChanges(changes: SimpleChanges): void {\n    const componentChanges = changes[\"component\"];\n    if(componentChanges.currentValue.name !== componentChanges.previousValue?.name ||\n      (componentChanges.currentValue.name === undefined && componentChanges.previousValue === undefined && !this.componentInstance)) {\n      this.createComponent();\n    } else {\n      this.updateComponentData();\n    }\n  }\n  createComponent(): void {\n    this.containerRef.clear();\n    if(AngularComponentFactory.Instance.isComponentRegistered(this.component.name)) {\n      this.componentInstance = AngularComponentFactory.Instance.create(this.containerRef, this.component.name, this.resolver).instance;\n    } else if (this.component.default) {\n      this.componentInstance = AngularComponentFactory.Instance.create(this.containerRef, this.component.default, this.resolver).instance;\n    }\n    if(!this.componentInstance) {\n      throw new Error(`Can't create component with name: ${this.component.name} and default: ${this.component.default}`);\n    } else {\n      this.componentInstance.contentTempl = this.templateRef;\n    }\n    this.updateComponentData();\n  }\n  updateComponentData(): void {\n    const data = this.component.data;\n    Object.keys(data).forEach((key) => {\n      this.componentInstance[key] = data[key];\n    });\n  }\n}","import { Component, Input, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-action\",\n  templateUrl: \"./action.component.html\",\n  styles: [\":host { display: none; }\"],\n})\nexport class ActionComponent extends BaseAngular {\n  @Input() model: any;\n  @ViewChild(\"actionContent\", { read: ViewContainerRef, static: true }) actionContent!: ViewContainerRef;\n  getModel() {\n    return this.model;\n  }\n  protected override getPropertiesToUpdateSync(): string[] {\n    return [\"mode\"];\n  }\n  public get id() {\n    return this.model.id || '';\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-action\", ActionComponent);","<ng-template #template>\n  <div [class]=\"model.getActionRootCss()\" [id]=\"id\">\n    <div class=\"sv-action__content\">\n      <ng-container *ngIf=\"model.needSeparator\">\n        <div class=\"sv-action-bar-separator\"></div>\n      </ng-container>\n      <ng-template [component]=\"{ name: model.component, data: { model }, default: 'sv-action-bar-item'}\"></ng-template>\n    </div>\n  </div>\n</ng-template>","import { Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { ActionContainer } from \"survey-core\";\n\n@Component({\n  selector: \"sv-action-bar, sv-ng-action-bar\",\n  templateUrl: \"./action-bar.component.html\",\n  styles: [\":host { display: none }\"]\n})\nexport class ActionBarComponent extends BaseAngular<ActionContainer> {\n  @Input() model!: ActionContainer;\n  @Input() handleClick: any;\n  @ViewChild(\"container\") container!: ElementRef<HTMLDivElement>;\n  getModel(): ActionContainer {\n    return this.model;\n  }\n\n  get allowOnClick(): boolean {\n    return this.handleClick !== undefined ? this.handleClick : true;\n  }\n\n  protected override onModelChanged() {\n    super.onModelChanged();\n    this.previousModel?.resetResponsivityManager();\n    if (!!this.model.hasActions && !!this.container && !!this.container.nativeElement) {\n      this.model.initResponsivityManager(this.container.nativeElement);\n    }\n  }\n\n  onClick(event: Event): void {\n    if (this.allowOnClick) {\n      event.stopPropagation();\n    }\n  }\n  ngAfterViewInit() {\n    if (!!this.model.hasActions) {\n      this.model.initResponsivityManager(this.container.nativeElement);\n    }\n  }\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.model.resetResponsivityManager();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-action-bar\", ActionBarComponent);","<ng-template #template>\n  <div *ngIf=\"model.hasActions\" [class]=\"model.getRootCss()\" (click)=\"onClick($event)\" #container>\n    <ng-container *ngFor=\"let action of model.renderedActions\">\n      <sv-ng-action [model]=\"action\"></sv-ng-action>\n    </ng-container>\n  </div>\n</ng-template>","import { Directive, ElementRef, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\n@Directive({\n  selector: \"[visible]\"\n})\nexport class VisibleDirective implements OnChanges {\n  constructor(private el: ElementRef) { }\n  @Input() visible?: boolean;\n  ngOnChanges(changes: SimpleChanges): void {\n    changes[\"visible\"].currentValue ? this.show() : this.hide();\n  }\n  private hide() {\n    this.el.nativeElement.style.display = \"none\";\n  }\n  private show() {\n    this.el.nativeElement.style.display = \"\";\n  }\n}","import { ChangeDetectorRef, Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { PopupBaseViewModel, PopupModalViewModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-popup-container, '[sv-ng-popup-container]'\",\n  templateUrl: \"./popup-container.component.html\"\n  })\n\nexport class PopupBaseContainerComponent<T extends PopupBaseViewModel = PopupBaseViewModel> extends BaseAngular<T> {\n  @Input() model!: T;\n\n  constructor(changeDetectorRef: ChangeDetectorRef) {\n    super(changeDetectorRef);\n    this.changeDetectorRef.detach();\n  }\n  protected getModel(): T {\n    return this.model;\n  }\n\n  get applyButtonText(): string | null {\n    const popupModalModel = this.model as any as PopupModalViewModel;\n    if(!popupModalModel) return null;\n\n    return popupModalModel.applyButtonText;\n  }\n\n  apply(): void {\n    const popupModalModel = this.model as any as PopupModalViewModel;\n    if(!popupModalModel) return;\n\n    popupModalModel.apply();\n  }\n\n  protected override getPropertiesToUpdateSync(): string[] {\n    return [\"height\"];\n  }\n\n  protected override getShouldReattachChangeDetector(): boolean {\n    return false;\n  }\n\n  protected override onModelChanged(): void {\n    this.changeDetectorRef.detectChanges();\n  }\n\n  protected override afterUpdate(isSync: boolean = false): void {\n    super.afterUpdate(isSync);\n    if(!isSync) {\n      if (!this.model.isPositionSet && this.model.isVisible) {\n        this.model.updateOnShowing();\n      }\n    }\n  }\n  public clickInside(event: any) {\n    event.stopPropagation();\n  }\n}","<div class=\"sv-popup\" tabindex=\"-1\" [class]=\"model.styleClass\" [visible]=\"model.isVisible\" (click)=\"model.clickOutside($event)\" (keydown)=\"model.onKeyDown($event)\">\n    <div class=\"sv-popup__container\" [style]=\"{ left: model.left, top: model.top, height: model.height, minWidth: model.minWidth, width: model.width }\" (click)=\"clickInside($event)\">\n        <ng-container *ngIf=\"model.showHeader\">\n            <ng-template [component]=\"{ name: model.popupHeaderTemplate, data: { model: model } }\"></ng-template>\n        </ng-container>\n        <div class=\"sv-popup__body-content\">\n            <div *ngIf=\"model.title\" class=\"sv-popup__body-header\">{{ model.title }}</div>\n            <div class=\"sv-popup__scrolling-content\">\n                <div class=\"sv-popup__content\">\n                    <ng-template [component]=\"{ name: model.contentComponentName, data: model.contentComponentData }\"></ng-template>\n                </div>\n            </div>\n            <div *ngIf=\"model.showFooter\" class=\"sv-popup__body-footer\">\n                <sv-ng-action-bar [model]=\"model.footerToolbar\"></sv-ng-action-bar>\n            </div>\n        </div>\n    </div>\n</div>","import { ApplicationRef, ComponentFactoryResolver, Injectable, Injector } from \"@angular/core\";\nimport { ComponentPortal, DomPortalOutlet } from \"@angular/cdk/portal\";\nimport { PopupBaseViewModel } from \"survey-core\";\nimport { PopupBaseContainerComponent } from \"./popup-container.component\";\n\n@Injectable()\nexport class PopupService {\n  constructor(private injector: Injector,\n              private applicationRef: ApplicationRef,\n              private componentFactoryResolver: ComponentFactoryResolver) {}\n\n  createComponent(popupViewModel: PopupBaseViewModel): DomPortalOutlet {\n    const portalHost = new DomPortalOutlet(popupViewModel.container, this.componentFactoryResolver, this.applicationRef, this.injector);\n    const portal = new ComponentPortal(PopupBaseContainerComponent);\n    const componentRef = portalHost.attach(portal);\n    popupViewModel.setComponentElement(<HTMLElement>popupViewModel.container.children[0]);\n    componentRef.instance.model = popupViewModel;\n    componentRef.changeDetectorRef.detectChanges();\n    return portalHost;\n  }\n}","import { DomPortalOutlet } from \"@angular/cdk/portal\";\nimport { Component } from \"@angular/core\";\nimport { createDialogOptions, IDialogOptions, PopupBaseViewModel, createPopupModalViewModel, settings } from \"survey-core\";\nimport { PopupService } from \"./popup.service\";\n\n@Component({\n  selector: \"sv-ng-modal-container\",\n  template: \"\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\n\nexport class ModalComponent {\n\n  public model!: PopupBaseViewModel;\n  private portalHost!: DomPortalOutlet;\n  private functionDefined: boolean = false;\n\n  constructor(private popupService: PopupService) {\n  }\n  showDialog(dialogOptions: IDialogOptions, rootElement?: HTMLElement): PopupBaseViewModel {\n    const popupViewModel = this.model = createPopupModalViewModel(dialogOptions, rootElement);\n    const onVisibilityChangedCallback = (_: PopupBaseViewModel, options: { isVisible: boolean }) => {\n      if(!options.isVisible) {\n        this.portalHost.detach();\n        this.model.dispose();\n      }\n    };\n    popupViewModel.onVisibilityChanged.add(onVisibilityChangedCallback);\n    this.portalHost = this.popupService.createComponent(this.model);\n    this.model.model.isVisible = true;\n    return this.model;\n  }\n  ngOnInit(): void {\n    if (!!settings.showModal) return;\n    this.functionDefined = true;\n    settings.showModal = (\n      componentName: string,\n      data: any,\n      onApply: () => boolean,\n      onCancel?: () => void,\n      cssClass?: string,\n      title?: string,\n      displayMode: \"popup\" | \"overlay\" = \"popup\"\n    ): PopupBaseViewModel => {\n      const options = createDialogOptions(\n        componentName,\n        data,\n        onApply,\n        onCancel,\n        undefined,\n        undefined,\n        cssClass,\n        title,\n        displayMode\n      );\n      return this.showDialog(options);\n    };\n\n    settings.showDialog = (dialogOptions: IDialogOptions, rootElement?: HTMLElement) => {\n      return this.showDialog(dialogOptions, rootElement);\n    };\n  }\n  ngOnDestroy() {\n    this.portalHost?.detach();\n    this.model?.dispose();\n    if (this.functionDefined) {\n      settings.showModal = <any>undefined;\n      settings.showDialog = <any>undefined;\n    }\n  }\n}\n\n","import { SvgRegistry } from \"survey-core\";\nimport { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\n@Component({\n  selector: \"sv-svg-bundle\",\n  template: \"<svg id='sv-icon-holder-global-container' #svgContainer></svg>\",\n  styles: [\":host { display: none; }\"]\n})\nexport class SvgBundleComponent implements OnInit {\n  @ViewChild(\"svgContainer\", { static: true }) svgContainer!: ElementRef<SVGElement>;\n  ngOnInit(): void {\n    this.svgContainer.nativeElement.innerHTML = SvgRegistry.iconsRenderedHtml();\n  }\n}","import { Component, Input } from \"@angular/core\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\nimport { SurveyElement } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-dynamic-head\",\n  templateUrl: \"./dynamic-head.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class DynamicHeadComponent extends EmbeddedViewContentComponent {\n  @Input() tagName!: string;\n  @Input() element!: SurveyElement;\n  get ariaLabel(): string | null {\n    return this.element.titleAriaLabel;\n  }\n}","<ng-template #template>\n  <ng-container [ngSwitch]=\"tagName\">\n    <h1 *ngSwitchCase=\"'h1'\" [class]=\"element.cssTitle\" [attr.id]=\"element.ariaTitleId\" [attr.tabindex]=\"element.titleTabIndex\" [attr.aria-expanded]=\"element.titleAriaExpanded\" [attr.role]=\"element.titleAriaRole\" [attr.aria-label]=\"ariaLabel\"><ng-container *ngTemplateOutlet=\"titleContent\"></ng-container></h1>\n    <h2 *ngSwitchCase=\"'h2'\"[class]=\"element.cssTitle\" [attr.id]=\"element.ariaTitleId\" [attr.tabindex]=\"element.titleTabIndex\" [attr.aria-expanded]=\"element.titleAriaExpanded\" [attr.role]=\"element.titleAriaRole\" [attr.aria-label]=\"ariaLabel\"><ng-container *ngTemplateOutlet=\"titleContent\"></ng-container></h2>\n    <h3 *ngSwitchCase=\"'h3'\"[class]=\"element.cssTitle\" [attr.id]=\"element.ariaTitleId\" [attr.tabindex]=\"element.titleTabIndex\" [attr.aria-expanded]=\"element.titleAriaExpanded\" [attr.role]=\"element.titleAriaRole\" [attr.aria-label]=\"ariaLabel\"><ng-container *ngTemplateOutlet=\"titleContent\"></ng-container></h3>\n    <h4 *ngSwitchCase=\"'h4'\"[class]=\"element.cssTitle\" [attr.id]=\"element.ariaTitleId\" [attr.tabindex]=\"element.titleTabIndex\" [attr.aria-expanded]=\"element.titleAriaExpanded\" [attr.role]=\"element.titleAriaRole\" [attr.aria-label]=\"ariaLabel\"><ng-container *ngTemplateOutlet=\"titleContent\"></ng-container></h4>\n    <h5 *ngSwitchCase=\"'h5'\"[class]=\"element.cssTitle\" [attr.id]=\"element.ariaTitleId\" [attr.tabindex]=\"element.titleTabIndex\" [attr.aria-expanded]=\"element.titleAriaExpanded\" [attr.role]=\"element.titleAriaRole\" [attr.aria-label]=\"ariaLabel\"><ng-container *ngTemplateOutlet=\"titleContent\"></ng-container></h5>\n    <h6 *ngSwitchCase=\"'h6'\"[class]=\"element.cssTitle\" [attr.id]=\"element.ariaTitleId\" [attr.tabindex]=\"element.titleTabIndex\" [attr.aria-expanded]=\"element.titleAriaExpanded\" [attr.role]=\"element.titleAriaRole\" [attr.aria-label]=\"ariaLabel\"><ng-container *ngTemplateOutlet=\"titleContent\"></ng-container></h6>\n  </ng-container>\n  <ng-template #titleContent>\n    <ng-content></ng-content>\n  </ng-template>\n</ng-template>","import { Component, HostBinding, Input, OnChanges, ViewContainerRef } from \"@angular/core\";\nimport * as Survey from \"survey-core\";\n\n@Component({\n  selector: \"'[sv-ng-svg-icon]'\",\n  template: \"\"\n})\nexport class SvgIconComponent implements OnChanges {\n  @Input() size?: number | string;\n  @Input() width?: number;\n  @Input() height?: number;\n  @Input() iconName!: string;\n  @Input() partCss?: string;\n  @Input() css?: string;\n  @Input() title?: string;\n  constructor(private viewContaierRef: ViewContainerRef) {\n  }\n  private createSvg() {\n    if(!!this.iconName) {\n      (Survey as any).createSvg(\n        this.size,\n        this.width,\n        this.height,\n        this.iconName,\n        this.viewContaierRef.element.nativeElement,\n        this.title\n      );\n    }\n  }\n  @HostBinding(\"class\") get rootClass(): string {\n    let className = \"sv-svg-icon\";\n    if(!this.css && !!this.partCss) {\n      className += \" \" + this.partCss;\n    } else if(!!this.css) {\n      className = this.css;\n    }\n    return className;\n  }\n  @HostBinding(\"[attr.role]\") get rootRole(): string {\n    return \"img\";\n  }\n  ngOnChanges(): void {\n    const el = this.viewContaierRef.element.nativeElement;\n    el.innerHTML = \"\";\n    el.appendChild(document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\"));\n    this.createSvg();\n  }\n}","import { Component, Input } from \"@angular/core\";\nimport { LocalizableString } from \"survey-core\";\n\n@Component(\n  {\n    selector: \"sv-ng-string, '[sv-ng-string]'\",\n    template: \"<ng-template [component]='{ name: model.renderAs, data: { model: model.renderAsData } }'></ng-template>\"\n  }\n)\nexport class SurveyStringComponent {\n  @Input() model!: LocalizableString;\n}","import { Component, Input } from \"@angular/core\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\n\n@Component({\n  selector: \"sv-ng-element-title-actions\",\n  templateUrl: \"./title-actions.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class ElementTitleActionsComponent extends EmbeddedViewContentComponent {\n  @Input() element: any;\n  get cssClasses() {\n    return (this.element.isPanel ? this.element.cssClasses.panel : this.element.cssClasses) || {};\n  }\n}","<ng-template #template>\n  <ng-container *ngIf=\"!element.hasTitleActions\">\n    <ng-container *ngTemplateOutlet=\"elementTitleContent\"></ng-container>\n  </ng-container>\n  <ng-container *ngIf=\"element.hasTitleActions\">\n    <div class=\"sv-title-actions\">\n      <span class=\"sv-title-actions__title\">\n        <ng-container *ngTemplateOutlet=\"elementTitleContent\"></ng-container>\n      </span>\n      <sv-ng-action-bar [model]=\"element.getTitleToolbar()\"></sv-ng-action-bar>\n    </div>\n  </ng-container>\n  <ng-template #elementTitleContent>\n    <sv-ng-string *ngIf=\"element.isTitleRenderedAsString\" [model]=\"element.locTitle\"></sv-ng-string>\n    <ng-container *ngIf=\"!element.isTitleRenderedAsString\">\n      <span\n        *ngIf=\"element.isRequireTextOnStart\"\n        [class]=\"element.cssRequiredText\"\n        [attr.aria-hidden]=\"true\"\n        >{{ element.requiredText }}</span>\n      <span\n        *ngIf=\"element.no\"\n        style=\"position: static\"\n        [class]=\"element.cssTitleNumber\"\n        [attr.aria-hidden]=\"true\"\n        >{{ element.no }}</span>\n      <span *ngIf=\"element.no\">&nbsp;</span>\n      <span\n        *ngIf=\"element.isRequireTextBeforeTitle\"\n        [class]=\"element.cssRequiredText\"\n        [attr.aria-hidden]=\"true\"\n        >{{ element.requiredText }}</span>\n      <span *ngIf=\"element.isRequireTextBeforeTitle\">&nbsp;</span>\n      <sv-ng-string [model]=\"element.locTitle\"></sv-ng-string>\n      <span *ngIf=\"element.isRequireTextAfterTitle\">&nbsp;</span>\n      <span\n        *ngIf=\" element.isRequireTextAfterTitle\"\n        [class]=\"element.cssRequiredText\"\n        [attr.aria-hidden]=\"true\"\n        >{{ element.requiredText }}</span> \n  </ng-container>\n  </ng-template>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\n\n@Component({\n  selector: \"sv-ng-element-title\",\n  templateUrl: \"./element-title.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class ElementTitleComponent extends EmbeddedViewContentComponent {\n  @Input() element: any;\n}","<ng-template #template>\n  <sv-ng-dynamic-head [tagName]=\"element.titleTagName\" [element]=\"element\" *ngIf=\"element.hasTitle\">\n    <svg *ngIf=\"!element.isExpanded && element.getCssTitleExpandableSvg()\" [iconName]=\"'icon-expand-16x16'\" [partCss]=\"element.getCssTitleExpandableSvg()\" [size]=\"'16'\" sv-ng-svg-icon></svg>\n    <svg *ngIf=\"element.isExpanded && element.getCssTitleExpandableSvg()\" [iconName]=\"'icon-collapse-16x16'\" [partCss]=\"element.getCssTitleExpandableSvg()\" [size]=\"'16'\" sv-ng-svg-icon></svg>\n    <sv-ng-element-title-actions [element]=\"element\"></sv-ng-element-title-actions>\n  </sv-ng-dynamic-head>\n</ng-template>","import { AfterViewInit, ChangeDetectorRef, Component, Input, OnDestroy, ViewContainerRef } from \"@angular/core\";\nimport { SurveyModel } from \"survey-core\";\n\n@Component({\n  selector: \"'[sv-ng-survey-header]'\",\n  templateUrl: \"survey-header.component.html\"\n})\nexport class SurveyHeaderComponent implements AfterViewInit, OnDestroy {\n  @Input() survey!: SurveyModel;\n  constructor(private viewContainerRef: ViewContainerRef, private changeDetectorRef: ChangeDetectorRef) {}\n  ngAfterViewInit(): void {\n    this.survey.afterRenderHeader(this.viewContainerRef.element.nativeElement);\n    this.survey.locLogo.onChanged = () => {\n      this.changeDetectorRef.detectChanges();\n    };\n  }\n  ngOnDestroy(): void {\n    this.survey.locLogo.onChanged = () => {};\n  }\n}","<ng-template *ngIf=\"survey.isLogoBefore\" [component]=\"{ name: survey.getElementWrapperComponentName(survey, 'logo-image'), data: { data: survey.getElementWrapperComponentData(survey, 'logo-image') } }\"></ng-template>\n<div\n  *ngIf=\"survey.renderedHasTitle\"\n  [class]=\"survey.css.headerText\"\n  [style.maxWidth]=\"survey.titleMaxWidth\"\n>\n  <sv-ng-element-title [element]=\"survey\"></sv-ng-element-title>\n  <div *ngIf=\"survey.renderedHasDescription\" [class]=\"survey.css.description\" [model]=\"survey.locDescription\" sv-ng-string></div>\n</div>\n\n<ng-template *ngIf=\"survey.isLogoAfter\" [component]=\"{ name: survey.getElementWrapperComponentName(survey, 'logo-image'), data: { data: survey.getElementWrapperComponentData(survey, 'logo-image') } }\"></ng-template>\n<div [class]=\"survey.css.headerClose\"></div>","import { Component, HostBinding, Input } from \"@angular/core\";\nimport { SurveyElement } from \"survey-core\";\n\n@Component({\n  templateUrl: \"./errors.component.html\",\n  selector: \"'[sv-ng-errors]'\"\n})\nexport class ErrorsComponent {\n  @Input() element!: SurveyElement | any;\n  @Input() location?: String;\n  constructor() {}\n  @HostBinding(\"attr.role\") get role (): string {\n    return \"alert\";\n  }\n  @HostBinding(\"id\") get id(): string {\n    return this.element.id + \"_errors\";\n  }\n  @HostBinding(\"attr.aria-live\") get ariaLive(): string {\n    return \"polite\";\n  }\n  @HostBinding(\"class\") get class(): string {\n    return this.element.cssError;\n  }\n}","<ng-container *ngFor=\"let error of element.errors;\">\n  <ng-template [component]=\"{ name: element.survey.questionErrorComponent, data: { element: element, cssClasses: element.cssClasses, error: error } }\"></ng-template>\n</ng-container>\n","import { AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild } from \"@angular/core\";\nimport { PanelModel, Question, SurveyModel } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\n\n@Component({\n  selector: \"sv-ng-element\",\n  templateUrl: \"./element.component.html\",\n  styleUrls: [\"./hide-host.scss\"]\n})\nexport class ElementComponent extends BaseAngular<PanelModel | Question> implements AfterViewInit {\n  @Input() model!: PanelModel | Question;\n  @ViewChild(\"container\", { static: false, read: ElementRef }) container!: ElementRef<HTMLDivElement>;\n  protected getModel(): PanelModel | Question {\n    return this.model;\n  }\n  protected get elementComponentName(): string {\n    return this.model.isPanel ? \"panel\": \"question\";\n  }\n\n  protected override onModelChanged(): void {\n    super.onModelChanged();\n    if(this.previousModel) {\n      this.previousModel.setWrapperElement(undefined)\n    }\n    if(this.model && this.container?.nativeElement) {\n      this.model.setWrapperElement(this.container.nativeElement);\n    }\n  }\n\n  public get componentName(): string {\n    const survey = this.surveyModel as SurveyModel;\n    if(!!survey) {\n      const name = survey.getElementWrapperComponentName(this.model);\n      if(!!name) {\n        return name;\n      }\n    }\n    return this.elementComponentName;\n  }\n  public get rootStyle() {\n    //use this if to check if cssClassses are calculated and allowRootStyle flag was set\n    if(!!this.model.cssClasses) {\n      return this.model.rootStyle;\n    } else {\n      return {};\n    }\n  }\n  public get componentData(): any {\n    const survey = this.surveyModel as SurveyModel;\n    let data: any;\n    if(!!survey) {\n      data = survey.getElementWrapperComponentData(this.model);\n    }\n    return {\n      componentName: this.elementComponentName,\n      componentData: {\n        model: this.model,\n        data: data\n      }\n    };\n  }\n  public ngAfterViewInit(): void {\n    if(this.model && this.container?.nativeElement) {\n      this.model.setWrapperElement(this.container.nativeElement)\n    }\n  }\n  public override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.model.setWrapperElement(undefined);\n  }\n}\n","<ng-template #template>\n    <div *ngIf=\"!!model\" [class]=\"model.cssClasses.questionWrapper\" [style]=\"rootStyle\" (focusin)=\"model.focusIn()\" #container>\n        <ng-template [component]=\"{ name: componentName, data: componentData }\"></ng-template>\n    </div>\n</ng-template>","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, Input, NgZone, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { IElement, QuestionRowModel } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\n@Component({\n  selector: \"sv-ng-row\",\n  templateUrl: \"./row.component.html\",\n  styleUrls: [\"./hide-host.scss\"]\n})\nexport class RowComponent extends BaseAngular<QuestionRowModel> implements AfterViewInit {\n  @Input() row!: QuestionRowModel;\n  @ViewChild(\"container\", { read: ElementRef }) container?: ElementRef<HTMLDivElement>;\n  constructor(cdr: ChangeDetectorRef, vcr: ViewContainerRef, private ngZone: NgZone) {\n    super(cdr, vcr);\n  }\n\n  protected getModel(): QuestionRowModel {\n    return this.row;\n  }\n  trackElementBy (index: number, element: IElement): string {\n    return element.name + index;\n  }\n  public ngAfterViewInit(): void {\n    const el = this.container?.nativeElement;\n    if (!!el) {\n      this.row.setRootElement(el);\n      if(!this.row.isNeedRender) {\n        this.ngZone.runOutsideAngular(() => {\n          setTimeout(() => {\n            this.row.startLazyRendering(el);\n          }, 10);\n        });\n      }\n    }\n  }\n  protected override onModelChanged(): void {\n    super.onModelChanged();\n    if(!this.previousModel) {\n      return;\n    } else {\n      this.previousModel.setRootElement(undefined);\n      if(this.container?.nativeElement) {\n        this.row.setRootElement(this.container.nativeElement);\n      }\n      this.row.isNeedRender = this.previousModel.isNeedRender;\n      this.stopLazyRendering();\n    }\n  }\n  private stopLazyRendering() {\n    this.row.stopLazyRendering();\n    this.row.isNeedRender = !this.row.isLazyRendering();\n  }\n  public override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.row.setRootElement(undefined);\n    this.stopLazyRendering();\n  }\n}","<ng-template #template>\n  <div [class]=\"row.getRowCss()\" #container>\n    <ng-container *ngFor=\"let element of row.visibleElements; trackBy: trackElementBy\">\n      <sv-ng-element [model]=\"$any(element)\" *ngIf=\"row.isNeedRender\"></sv-ng-element>\n      <ng-template *ngIf=\"!row.isNeedRender && element.skeletonComponentName\" [component]=\"{ name: element.skeletonComponentName, data: { element: element } }\"></ng-template>\n    </ng-container>\n  </div>\n</ng-template>","import { AfterViewInit, Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from \"@angular/core\";\nimport { PageModel, SurveyModel } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\n@Component({\n  selector: \"page, sv-ng-page\",\n  templateUrl: \"./page.component.html\",\n  styleUrls: [\"./hide-host.scss\"]\n  })\nexport class PageComponent extends BaseAngular<PageModel> {\n  @Input() model!: PageModel;\n  @Input() survey?: SurveyModel;\n  @ViewChild(\"pageContainer\", { static: false, read: ElementRef }) pageContainerRef!: ElementRef<HTMLDivElement>;\n  protected getModel(): PageModel {\n    return this.model;\n  }\n  protected override onModelChanged(): void {\n    if(!!this.pageContainerRef && this.pageContainerRef.nativeElement) {\n      this.model.survey.afterRenderPage(this.pageContainerRef.nativeElement);\n    }\n  }\n  ngAfterViewInit(): void {\n    this.model.survey?.afterRenderPage(this.pageContainerRef?.nativeElement);\n  }\n}","<ng-template #template>\n  <ng-container *ngIf=\"!!this.survey && !!this.model && this.model.isVisible && !!this.model.survey\">\n    <div [class]=\"model.cssRoot\" #pageContainer>\n      <sv-ng-element-title [element]=\"model\"></sv-ng-element-title>\n      <div *ngIf=\"model._showDescription\" [class]=\"model.cssClasses.page.description\">\n        <sv-ng-string [model]=\"model.locDescription\"></sv-ng-string>\n      </div>\n      <div *ngIf=\"model.hasVisibleErrors\" [element]=\"model\" sv-ng-errors></div>\n      <ng-container *ngFor=\"let row of model.visibleRows\">\n        <ng-template [component]=\"{ name: $any(model.survey).getRowWrapperComponentName(row), data: { componentData: $any(model.survey).getRowWrapperComponentData(row) } }\">\n          <sv-ng-row [row]=\"row\"></sv-ng-row>\n        </ng-template>\n      </ng-container>\n    </div>\n  </ng-container>  \n</ng-template>","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n@Component({\n  selector: \"sv-brand-info\",\n  templateUrl: \"./brand-info.component.html\"\n})\nexport class BrandInfoComponent {}\nAngularComponentFactory.Instance.registerComponent(\"sv-brand-info\", BrandInfoComponent);","<div class=\"sv-brand-info\">\n  <a class=\"sv-brand-info__logo\" href=\"https://surveyjs.io/?utm_source=built-in_links&utm_medium=online_survey_tool&utm_campaign=landing_page\"><img src=\"https://surveyjs.io/Content/Images/poweredby.svg\"/></a>\n  <div class=\"sv-brand-info__text\">Try and see how easy it is to <a href=\"https://surveyjs.io/create-survey?utm_source=built-in_links&utm_medium=online_survey_tool&utm_campaign=create_survey\">create a survey</a></div>\n  <div class=\"sv-brand-info__terms\"><a href=\"https://surveyjs.io/TermsOfUse\">Terms of Use & Privacy Statement</a></div>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { Base, Notifier } from \"survey-core\";\n\n@Component({\n  selector: \"sv-notifier\",\n  templateUrl: \"./notifier.component.html\",\n  styles: [\":host { display: none; }\"]\n  })\nexport class NotifierComponent extends BaseAngular<Notifier> {\n  @Input() notifier!: Notifier;\n  protected getStateElement(): Base {\n    return this.notifier;\n  }\n  protected getModel(): Notifier {\n    return this.notifier;\n  }\n}","<ng-template #template>\n  <ng-container *ngIf=\"notifier.isDisplayed\">\n    <div [class]=\"notifier.css\" [style]=\"{ visibility: notifier.active ? 'visible' : 'hidden' }\" role=\"alert\" aria-live=\"polite\">\n      <span>{{notifier.message}}</span>\n      <sv-action-bar [model]=\"notifier.actionBar\"></sv-action-bar> \n    </div>\n  </ng-container>\n</ng-template>","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { DomSanitizer, SafeUrl } from \"@angular/platform-browser\";\n\n@Pipe({ name: \"safeHtml\" })\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(private domSanitizer: DomSanitizer) {}\n  transform(url: string): SafeUrl {\n    return this.domSanitizer.bypassSecurityTrustHtml(url);\n  }\n}","\nimport { AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild } from \"@angular/core\";\nimport { SurveyModel, SvgRegistry } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\nimport { AngularComponentFactory } from \"./component-factory\";\n@Component({\n  selector: \"survey-content\",\n  templateUrl: \"./survey-content.component.html\"\n})\nexport class SurveyContentComponent extends BaseAngular<SurveyModel> implements OnInit, AfterViewInit {\n  @Input() model!: SurveyModel;\n  @ViewChild(\"surveyContainer\", { static: false }) rootEl!: ElementRef<HTMLDivElement>;\n  private isSurveyUpdated: boolean = false;\n  protected getModel(): SurveyModel {\n    return this.model;\n  }\n  protected override onModelChanged(): void {\n    if (!!this.previousModel) {\n      this.previousModel.destroyResizeObserver();\n      this.previousModel.renderCallback = <any>undefined;\n    }\n    if (!!this.model) {\n      this.model.renderCallback = () => {\n        this.detectChanges();\n      };\n    }\n    this.isSurveyUpdated = true;\n  }\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    if (!!this.model) {\n      this.model.rootElement = undefined as any;\n      this.model.destroyResizeObserver();\n      this.model.renderCallback = <any>undefined;\n    }\n  }\n  ngAfterViewInit(): void {\n    this.isSurveyUpdated = true;\n  }\n  override ngAfterViewChecked(): void {\n    if (!!this.model && this.isSurveyUpdated) {\n      this.model.afterRenderSurvey(this.rootEl.nativeElement);\n      this.model.startTimerFromUI();\n    }\n    super.ngAfterViewChecked();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"survey\", SurveyContentComponent);","<ng-template #template>\n  <div #surveyContainer *ngIf=\"!!model\" [class]=\"model.getRootCss()\" [style]=\"model.themeVariables\" [lang]=\"model.locale || 'en'\" [dir]=\"model.localeDir\">\n    <sv-svg-bundle *ngIf=\"model.needRenderIcons\"></sv-svg-bundle>\n    <div [class]=\"model.wrapperFormCss\">\n      <div *ngIf=\"!!model.renderBackgroundImage\" [class]=\"model.css.rootBackgroundImage\" [style]=\"model.backgroundImageStyle\"></div>\n      <form onsubmit=\"return false;\">\n        <div class=\"sv_custom_header\" [hidden]=\"model.hasLogo\"></div>\n        <div [class]=\"model.css.container\">\n          <div *ngIf=\"model.headerView === 'basic' && model.renderedHasHeader\" [class]=\"model.css.header\" [survey]=\"model\" sv-ng-survey-header></div>\n          <ng-template [component]=\"{ name: 'sv-components-container', data: { survey: model, container: 'header', needRenderWrapper: false } }\"></ng-template>\n          <div *ngIf=\"model.isShowingPage\" [class]=\"model.bodyContainerCss\">\n            <ng-template [component]=\"{ name: 'sv-components-container', data: { survey: model, container: 'left' } }\"></ng-template>\n            <div class=\"sv-components-column sv-components-column--expandable\">\n              <ng-template [component]=\"{ name: 'sv-components-container', data: { survey: model, container: 'center' } }\"></ng-template>\n              <div [class]=\"model.bodyCss\" [style.maxWidth]=\"model.renderedWidth\" [id]=\"model.activePage ? model.activePage.id : ''\">\n                <ng-template [component]=\"{ name: 'sv-components-container', data: { survey: model, container: 'contentTop' } }\"></ng-template>\n                <!-- ko if: activePage -->\n                  <ng-container *ngIf=\"model.activePage\">\n                      <sv-ng-page [model]=\"model.activePage\" [survey]=\"model\"></sv-ng-page>\n                  </ng-container>\n                  <!-- ko if: activePage.rows.length == 0 && $data.emptyPageTemplate -->\n                  <!-- ko template: { name: emptyPageTemplate, data: $data.emptyPageTemplateData || $data } -->\n                  <!-- /ko -->\n                  <!-- /ko -->\n                <!-- /ko -->\n                <ng-template [component]=\"{ name: 'sv-components-container', data: { survey: model, container: 'contentBottom' } }\"></ng-template>\n                <sv-brand-info *ngIf=\"model.showBrandInfo\"></sv-brand-info>\n              </div>\n            </div>\n            <ng-template [component]=\"{ name: 'sv-components-container', data: { survey: model, container: 'right' } }\"></ng-template>\n          </div>\n          <ng-template [component]=\"{ name: 'sv-components-container', data: { survey: model, container: 'footer', needRenderWrapper: false } }\"></ng-template>\n          <div *ngIf=\"model.state === 'completed' && model.showCompletedPage\" [class]=\"model.completedCss\"\n            [innerHtml]=\"model.processedCompletedHtml | safeHtml\"></div>\n          <ng-template *ngIf=\"model.state === 'completed' && model.showCompletedPage\" [component]=\"{ name: 'sv-components-container', data: { survey: model, container: 'completePage' } }\"></ng-template>\n          <div *ngIf=\"model.state === 'completedbefore'\" [class]=\"model.completedBeforeCss\"\n            [innerHtml]=\"model.processedCompletedBeforeHtml | safeHtml\"></div>\n          <div *ngIf=\"model.state === 'loading'\" [class]=\"model.loadingBodyCss\" [innerHtml]=\"model.processedLoadingHtml\"></div>\n          <div *ngIf=\"model.state === 'empty'\" [class]=\"model.css.bodyEmpty\">{{model.emptySurveyText}}</div>\n        </div>\n      </form>\n      <sv-notifier [notifier]=\"model.notifier\"></sv-notifier>\n    </div>\n  </div>\n</ng-template>","import { ChangeDetectorRef, Component, Input } from \"@angular/core\";\nimport { SurveyModel } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\n@Component({\n  selector: \"survey\",\n  template: \"<sv-ng-modal-container></sv-ng-modal-container><survey-content [model]='model'></survey-content>\"\n  })\nexport class SurveyComponent extends BaseAngular<SurveyModel> {\n  @Input() model!: SurveyModel;\n  protected getModel(): SurveyModel {\n    return this.model;\n  }\n  constructor(changeDetectorRef: ChangeDetectorRef) {\n    super(changeDetectorRef);\n    changeDetectorRef.detach();\n  }\n  protected override getShouldReattachChangeDetector(): boolean {\n    return false;\n  }\n  protected override onModelChanged(): void {\n    this.changeDetectorRef.detectChanges();\n  }\n}","import { ChangeDetectorRef, Component, Input, OnChanges, SimpleChanges } from \"@angular/core\";\nimport { PopupSurveyModel, SurveyModel } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\n@Component({\n  selector: \"popup-survey\",\n  templateUrl: \"./popup.survey.component.html\",\n  styleUrls: [\"./popup.survey.component.scss\"]\n})\nexport class PopupSurveyComponent extends BaseAngular<PopupSurveyModel> implements OnChanges {\n  @Input() model!: SurveyModel;\n  @Input() isExpanded?: boolean;\n  @Input() allowClose?: boolean;\n  @Input() closeOnCompleteTimeout?: number;\n  @Input() allowFullScreen?: boolean;\n  @Input() onClose?: () => void;\n  public popup!: PopupSurveyModel;\n\n  constructor(changeDetectorRef: ChangeDetectorRef) {\n    super(changeDetectorRef);\n    changeDetectorRef.detach();\n  }\n  protected getModel(): PopupSurveyModel {\n    return this.popup;\n  }\n  protected override getShouldReattachChangeDetector(): boolean {\n    return false;\n  }\n  public getHeaderCss(): string {\n    let headerCss = this.popup.cssHeaderRoot;\n    if (this.popup.isCollapsed) {\n      headerCss += \" \" + this.popup.cssRootCollapsedMod;\n    }\n    return headerCss;\n  }\n\n  public closeHandler() {\n    this.popup.hide();\n    if (!!this.onClose) {\n      this.onClose();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes[\"model\"]?.currentValue !== changes[\"model\"]?.previousValue) {\n      this.popup = new PopupSurveyModel(null, this.model);\n    }\n    if (this.isExpanded !== undefined) {\n      this.popup.isExpanded = this.isExpanded;\n    }\n    if (this.allowClose !== undefined) {\n      this.popup.allowClose = this.allowClose;\n    }\n    if (this.allowFullScreen !== undefined) {\n      this.popup.allowFullScreen = this.allowFullScreen;\n    }\n    if (this.closeOnCompleteTimeout !== undefined) {\n      this.popup.closeOnCompleteTimeout = this.closeOnCompleteTimeout;\n    }\n    this.popup.isShowing = true;\n    this.changeDetectorRef.detectChanges();\n  }\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.popup.dispose();\n  }\n}","<div *ngIf=\"!!popup && popup.isShowing\" [class]=\"popup.cssRoot\" [style.width]=\"popup.renderedWidth\" [style.maxWidth]=\"popup.renderedWidth\" (scroll)=\"popup.onScroll()\">\n  <div [class]=\"popup.cssRootContent\">\n    <div [class]=\"getHeaderCss()\">\n      <div *ngIf=\"popup.isCollapsed && !!popup.locTitle\" [class]=\"popup.cssHeaderTitleCollapsed\">\n        {{popup.locTitle.renderedHtml}}\n      </div>\n      <div [class]=\"popup.cssHeaderButtonsContainer\">\n        <div *ngIf=\"popup.allowFullScreen\" [class]=\"popup.cssHeaderFullScreenButton\" (click)=\"popup.toggleFullScreen()\">\n          <svg *ngIf=\"popup.isFullScreen\" [iconName]=\"'icon-back-to-panel_16x16'\" [size]=\"16\" sv-ng-svg-icon></svg>\n          <svg *ngIf=\"!popup.isFullScreen\" [iconName]=\"'icon-full-screen_16x16'\" [size]=\"16\" sv-ng-svg-icon></svg>\n        </div>\n\n        <div [class]=\"popup.cssHeaderCollapseButton\" (click)=\"popup.changeExpandCollapse()\">\n            <svg *ngIf=\"popup.isExpanded\" [iconName]=\"'icon-minimize_16x16'\" [size]=\"16\" sv-ng-svg-icon></svg>\n            <svg *ngIf=\"popup.isCollapsed\" [iconName]=\"'icon-restore_16x16'\" [size]=\"16\" sv-ng-svg-icon></svg>\n        </div>\n\n        <div *ngIf=\"popup.allowClose\" [class]=\"popup.cssHeaderCloseButton\" (click)=\"closeHandler()\">\n          <svg [iconName]=\"'icon-close_16x16'\" [size]=\"16\" sv-ng-svg-icon></svg>\n        </div>\n      </div>\n  </div>\n  <div [class]=\"popup.cssBody\">\n    <survey [model]=\"popup.survey\"></survey>\n  </div>\n  </div>\n</div>","import { AfterViewInit, Component, ElementRef, Input, OnDestroy, ViewChild } from \"@angular/core\";\nimport { Question } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\n\n@Component({\n  template: \"\"\n})\nexport class QuestionAngular<T extends Question = Question> extends BaseAngular<Question> implements AfterViewInit, OnDestroy {\n  @Input() public model!: T;\n\n  @ViewChild(\"contentElement\") elementContentRef!: ElementRef<HTMLElement>;\n\n  protected getModel() {\n    return this.model;\n  }\n\n  ngAfterViewInit() {\n    if (!!this.model) {\n      this.model.afterRenderQuestionElement(this.elementContentRef?.nativeElement);\n    }\n  }\n  override ngOnDestroy() {\n    if (!!this.model) {\n      this.model.beforeDestroyQuestionElement(this.elementContentRef?.nativeElement);\n    }\n    super.ngOnDestroy();\n  }\n}\n\nexport function getComponentName(question: Question): string {\n  if (question.customWidget) return \"survey-customwidget\";\n  if (question.isDefaultRendering()) {\n    return question.getTemplate() + \"-question\";\n  }\n  return question.getComponentName();\n}","import { Component, HostBinding, HostListener, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"'[sv-ng-element-header]'\",\n  templateUrl: \"./element-header.component.html\"\n})\nexport class ElementHeaderComponent {\n  @Input() element: any;\n  constructor() {\n  }\n  @HostBinding(\"class\") get rootClass(): string {\n    return this.element.cssHeader;\n  }\n  @HostBinding(\"style.width\") get width(): string {\n    return this.element.titleWidth;\n  }\n  @HostListener(\"click\", [\"$event\"]) click(e: MouseEvent): void {\n    if (this.element.clickTitleFunction !== undefined) {\n      this.element.clickTitleFunction(e);\n    }\n  }\n}","<sv-ng-element-title [element]=\"element\"></sv-ng-element-title>\n<div *ngIf=\"element.hasDescriptionUnderTitle\" [class]=\"element.cssDescription\" [model]=\"element.locDescription\" [attr.id]=\"element.ariaDescriptionId\" [style.display]=\"element.hasDescription ? '': 'none' \" sv-ng-string></div>\n<ng-container *ngIf=\"element.hasAdditionalTitleToolbar\">\n<sv-ng-action-bar [model]=\"element.additionalTitleToolbar\"></sv-ng-action-bar>\n</ng-container>","import { Component, Input } from \"@angular/core\";\nimport { Question } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-comment, '[sv-ng-comment]'\",\n  templateUrl: \"./comment.component.html\",\n})\nexport class SurveyCommentComponent {\n  @Input() question!: Question;\n  constructor() {\n  }\n  public get comment(): string {\n    if(!this.question.comment) return \"\";\n    return this.question.comment;\n  }\n}","<ng-container *ngIf=\"!question.isReadOnlyRenderDiv()\">\n  <ng-template [component]=\"{ name: 'sv-text-area', data: { model: question.commentTextAreaModel } }\"></ng-template>\n</ng-container>\n<div *ngIf=\"question.isReadOnlyRenderDiv()\">{{ question.comment }}</div>\n","import { Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { Question } from \"survey-core\";\nimport { AngularComponentFactory } from \"./component-factory\";\nimport { EmbeddedViewContentComponent } from \"./embedded-view-content.component\";\nimport { getComponentName } from \"./question\";\n\n@Component({\n  selector: \"sv-ng-question\",\n  templateUrl: \"./question.component.html\"\n})\nexport class QuestionComponent extends EmbeddedViewContentComponent {\n  @Input() model!: Question;\n  @ViewChild(\"elementContainer\") rootEl?: ElementRef<HTMLDivElement>;\n  protected getModel(): Question {\n    return this.model;\n  }\n  ngAfterViewInit(): void {\n    if (!!this.rootEl?.nativeElement) {\n      this.model.afterRender(this.rootEl?.nativeElement);\n    }\n  }\n  ngOnDestroy() {\n    if(!!this.model) {\n      this.model.destroyResizeObserver();\n    }\n  }\n  public getComponentName(): string { return getComponentName(this.model); }\n  public getQuestionContentWrapperComponentName(): string {\n    return (<any>this.model.survey).getQuestionContentWrapperComponentName(this.model);\n  }\n  public getQuestionContentWrapperComponentData(): any {\n    return {\n      componentData: {\n        model: this.model,\n        data: (<any>this.model.survey).getElementWrapperComponentData(this.model)\n      }\n    };\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"question\", QuestionComponent);","<ng-template #template>\n  <div *ngIf=\"!!model\" #elementContainer [class]=\"model.getRootCss()\" [style]=\"model.getRootStyle()\" [id]=\"model.id\" [attr.data-name]=\"model.name\" [attr.role]=\"model.ariaRole\" [attr.aria-required]=\"model.ariaRequired\" [attr.aria-invalid]=\"model.ariaInvalid\" [attr.aria-labelledby]=\"model.ariaLabelledBy\" [attr.aria-describedby]=\"model.ariaDescribedBy\" [attr.aria-expanded]=\"model.ariaExpanded\">\n    <div *ngIf=\"model.showErrorsAboveQuestion && model.hasVisibleErrors\" [element]=\"model\" sv-ng-errors></div>\n    <div [element]=\"model\" *ngIf=\"model.hasTitleOnLeftTop\" sv-ng-element-header></div>\n    <ng-template [component]=\"{ name: getQuestionContentWrapperComponentName(), data: getQuestionContentWrapperComponentData() }\">\n      <div [class]=\"model.cssContent\" role=\"presentation\" [visible]=\"model.renderedIsExpanded\">\n        <div *ngIf=\"model.showErrorOnTop && model.hasVisibleErrors\" [element]=\"model\" sv-ng-errors></div>\n        <ng-template [component]=\"{ name: getComponentName(), data: { model: model }, default: 'skeleton-question' }\"></ng-template>\n        <div *ngIf=\"model.hasComment\" [class]=\"model.getCommentAreaCss(false)\">\n          <div [model]=\"model.locCommentText\" sv-ng-string></div>\n          <sv-ng-comment [question]=\"model\"></sv-ng-comment>\n        </div>\n        <div *ngIf=\"model.showErrorOnBottom && model.hasVisibleErrors\" [element]=\"model\" sv-ng-errors></div>\n        <div *ngIf=\"model.hasDescriptionUnderInput\" [class]=\"model.cssDescription\" [attr.id]=\"model.ariaDescriptionId\" [model]=\"model.locDescription\" sv-ng-string></div>\n      </div>\n    </ng-template>\n    <div [element]=\"model\" *ngIf=\"model.hasTitleOnBottom\" sv-ng-element-header></div>\n    <div *ngIf=\"model.showErrorsBelowQuestion && model.hasVisibleErrors\" [element]=\"model\" sv-ng-errors></div>\n  </div>\n</ng-template>","import { ChangeDetectorRef, Component, DoCheck, Input, OnChanges, OnDestroy, SimpleChanges } from \"@angular/core\";\nimport { LocalizableString } from \"survey-core\";\nimport { AngularComponentFactory } from \"./component-factory\";\n\n@Component({\n  selector: \"sv-ng-string-viewer, string-viewer, '[sv-ng-string-viewer]'\",\n  templateUrl: \"./string-viewer.component.html\",\n  styleUrls: [\"./string-viewer.component.scss\"]\n})\nexport class StringViewerComponent implements DoCheck {\n  @Input() model!: LocalizableString;\n  className: string = \"\";\n  private previousModel: LocalizableString | undefined;\n  constructor(private changeDetectorRef: ChangeDetectorRef) {}\n  ngDoCheck(): void {\n    if(this.model !== this.previousModel) {\n      this.className = this.model.allowLineBreaks ? \"sv-string-viewer sv-string-viewer--multiline\" : \"sv-string-viewer\";\n      if(!!this.previousModel) {\n        this.clearOnChanged(this.previousModel);\n      }\n      if(!!this.model) {\n        this.model.onChanged = () => { this.changeDetectorRef.detectChanges(); };\n      }\n      this.previousModel = this.model;\n    }\n  }\n  clearOnChanged(model: LocalizableString) {\n    model.onChanged = () => {};\n  }\n  ngOnDestroy(): void {\n    !!this.model && this.clearOnChanged(this.model);\n  }\n}\nAngularComponentFactory.Instance.registerComponent(LocalizableString.defaultRenderer, StringViewerComponent);","<span *ngIf=\"!model.hasHtml\" [class]=\"className\">{{model.renderedHtml}}</span>\n<span *ngIf=\"model.hasHtml\" [class]=\"className\" [innerHtml]=\"model.renderedHtml | safeHtml\"></span>","import { Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { TextAreaModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\n\n@Component({\n  selector: \"sv-text-area\",\n  templateUrl: \"./text-area.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class TextAreaComponent extends EmbeddedViewContentComponent {\n  @Input() model!: TextAreaModel;\n  @ViewChild(\"contentElement\") elementContentRef!: ElementRef<HTMLElement>;\n\n  get value() {\n    return this.model.getTextValue() || \"\";\n  }\n\n  public ngAfterViewInit(): void {\n    if (!!this.model && !!this.elementContentRef?.nativeElement) {\n      const element = this.elementContentRef.nativeElement;\n      this.model.setElement(element as HTMLTextAreaElement);\n    }\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-text-area\", TextAreaComponent);","<ng-template #template>\n<textarea\n[readonly]=\"model.isReadOnlyAttr\"\n[disabled]=\"model.isDisabledAttr\"\n[id]=\"model.id\"\n[attr.maxlength]=\"model.maxLength\"\n[attr.cols]=\"model.cols\"\n[attr.rows]=\"model.rows\"\n[attr.placeholder]=\"model.placeholder\"\n[class]=\"model.className\"\n[value]=\"value\"\n(input)=\"model.onTextAreaInput($event)\"\n(keydown)=\"model.onTextAreaKeyDown($event)\"\n(focus)=\"model.onTextAreaFocus($event)\"\n(blur)=\"model.onTextAreaBlur($event)\"\n(change)=\"model.onTextAreaChange($event)\"\n[attr.aria-required]=\"model.ariaRequired\"\n[attr.aria-label]=\"model.ariaLabel\"\n[attr.aria-labelledby]=\"model.ariaLabelledBy\"\n[attr.aria-describedby]=\"model.ariaDescribedBy\"\n[attr.aria-invalid]=\"model.ariaInvalid\"\n[attr.aria-errormessage]=\"model.ariaErrormessage\"\n[style.resize]=\"model.question.resizeStyle\"\n#contentElement></textarea>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { PopupBaseViewModel, PopupDropdownViewModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-popup-pointer, '[sv-ng-popup-pointer]'\",\n  templateUrl: \"./popup-pointer.component.html\"\n})\n\nexport class PopupPointerComponent extends BaseAngular<PopupBaseViewModel> {\n  @Input() model!: PopupBaseViewModel;\n\n  get popupModel(): PopupDropdownViewModel {\n    return this.model as PopupDropdownViewModel;\n  }\n\n  protected getModel(): PopupBaseViewModel {\n    return this.model;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"popup-pointer\", PopupPointerComponent);","<span class=\"sv-popup__pointer\" [style]=\"{ left: popupModel.pointerTarget.left, top: popupModel.pointerTarget.top }\"></span>","import { ChangeDetectorRef, Component, ElementRef, Input, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { PopupBaseViewModel, PopupModel, createPopupViewModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-popup, '[sv-ng-popup]'\",\n  template: \"<div #containerRef><sv-ng-popup-container [model]='model' ></sv-ng-popup-container></div>\"\n})\n\nexport class PopupComponent extends BaseAngular<PopupModel> {\n  @Input() popupModel!: PopupModel;\n  @Input() getTarget?: (container: HTMLElement) => HTMLElement;\n  @Input() getArea?: (container: HTMLElement) => HTMLElement;\n  @ViewChild(\"containerRef\") containerRef!: ElementRef<HTMLDivElement>;\n\n  public model!: PopupBaseViewModel;\n\n  protected getModel(): PopupModel {\n    return this.popupModel;\n  }\n\n  constructor(viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef) {\n    super(changeDetectorRef, viewContainerRef);\n  }\n  protected override onModelChanged(): void {\n    if (this.model) {\n      this.model.resetComponentElement();\n      this.model.dispose();\n    }\n    this.model = createPopupViewModel(this.popupModel, this.viewContainerRef?.element.nativeElement);\n    this.setContainerElement();\n  }\n\n  private setContainerElement(): void {\n    if (!!this.containerRef?.nativeElement) {\n      const container = this.containerRef.nativeElement as HTMLElement;\n      this.model.setComponentElement(container,\n        this.getTarget ? this.getTarget(container.parentElement as HTMLElement) : container?.parentElement?.parentElement,\n        this.getArea ? this.getArea(container.parentElement as HTMLElement) : undefined);\n    }\n  }\n  ngAfterViewInit(): void {\n    this.setContainerElement();\n  }\n  override ngOnInit() {\n    this.onModelChanged();\n  }\n  override ngOnDestroy(): void {\n    this.model.resetComponentElement();\n    this.model.dispose();\n    super.ngOnDestroy();\n  }\n}","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"question-skeleton\",\n  templateUrl: \"./skeleton.component.html\",\n  styleUrls: [\"./skeleton.component.scss\"]\n})\nexport class QuestionSkeletonComponent {\n  @Input() model: any;\n}\n\nAngularComponentFactory.Instance.registerComponent(\"skeleton-question\", QuestionSkeletonComponent);","<div class=\"sv-skeleton--not-implemented\">\n  <div>{{ model.getType() + \" question type renderer is not implemented yet.\" }}</div>\n  <div>{{ model.value }}</div>\n</div>\n","import { Component, ElementRef, Input, OnInit, ViewChild } from \"@angular/core\";\nimport { DropdownListModel, Helpers } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\n\n@Component({\n  selector: \"sv-ng-dropdown, '[sv-ng-dropdown]'\",\n  templateUrl: \"./dropdown.component.html\"\n})\nexport class DropdownComponent extends BaseAngular implements OnInit {\n  @Input() model: any;\n  @ViewChild(\"inputElement\") inputElementRef!: ElementRef<HTMLDivElement>;\n  get dropdownModel(): DropdownListModel {\n    return this.model?.dropdownListModel;\n  }\n  protected getModel() {\n    return this.model.dropdownListModel;\n  }\n\n  override ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  click(event: any) {\n    this.dropdownModel?.onClick(event);\n  }\n  chevronPointerDown(event: any) {\n    this.dropdownModel?.chevronPointerDown(event);\n  }\n  clear(event: any) {\n    this.dropdownModel?.onClear(event);\n  }\n  keyhandler(event: any) {\n    this.dropdownModel?.keyHandler(event);\n  }\n  blur(event: any) {\n    this.model.onBlur(event);\n    this.updateInputDomElement();\n  }\n  focus(event: any) {\n    this.model.onFocus(event);\n  }\n  inputChange(event: any) {\n    this.detectChanges();\n  }\n  updateInputDomElement() {\n    if (!!this.inputElementRef?.nativeElement) {\n      const control: any = this.inputElementRef.nativeElement;\n      const newValue = this.model.inputStringRendered;\n      if (!Helpers.isTwoValueEquals(newValue, control.value, false, true, false)) {\n        control.value = this.model.inputStringRendered || \"\";\n      }\n    }\n  }\n}","<div [class]=\"model.cssClasses.selectWrapper\" (click)=\"click($event)\">\n    <div *ngIf=\"!model.isReadOnly\" [attr.tabindex]=\"dropdownModel.noTabIndex ? null : 0\" [class]=\"model.getControlClass()\"\n        [attr.disabled]=\"model.isDisabledAttr ? true : null\" (blur)=\"blur($event)\"\n        (keydown)=\"keyhandler($event)\" [attr.id]=\"model.inputId\" [attr.aria-required]=\"model.ariaRequired\"\n        [attr.aria-label]=\"model.ariaLabel\" [attr.aria-invalid]=\"model.ariaInvalid\"\n        [attr.aria-errormessage]=\"model.ariaErrormessage\" [attr.role]=\"model.ariaRole\"\n        [attr.aria-controls]=\"dropdownModel.listElementId\"\n        [attr.aria-expanded]=\"model.ariaExpanded\"\n        [attr.aria-activedescendant]=\"dropdownModel.ariaActivedescendant\">\n        <div *ngIf=\"dropdownModel.showHintPrefix\" [class]=\"model.cssClasses.hintPrefix\">\n            <span>{{ dropdownModel.hintStringPrefix }}</span>\n        </div>\n        <div [class]=\"model.cssClasses.controlValue\">\n            <div *ngIf=\"dropdownModel.showHintString\" [class]=\"model.cssClasses.hintSuffix\">\n                <span style=\"visibility: hidden\">{{ dropdownModel.inputStringRendered }}</span>\n                <span>{{ dropdownModel.hintStringSuffix }}</span>\n            </div>\n            <ng-container *ngIf=\"dropdownModel.showInputFieldComponent\">\n                <ng-template [component]=\"{ name: model.inputFieldComponentName, data: { model: dropdownModel.getSelectedAction(), question: model } }\"></ng-template>\n            </ng-container>\n            <sv-ng-string *ngIf=\"model.showSelectedItemLocText\" [model]=\"model.selectedItemLocText\"></sv-ng-string>\n            <input #inputElement type=\"text\" autocomplete=\"off\" [(ngModel)]=\"dropdownModel.inputStringRendered\" [class]=\"model.cssClasses.filterStringInput\"\n            [attr.role]=\"dropdownModel.filterStringEnabled ? model.ariaRole : null\"\n            [attr.id]=\"model.getInputId()\"\n            [attr.inputmode]=\"dropdownModel.inputMode\"\n            [attr.tabindex]=\"dropdownModel.noTabIndex ? null : -1\"\n            [attr.disabled]=\"model.isDisabledAttr ? true : null\"\n            [attr.aria-controls]=\"dropdownModel.listElementId\"\n            [attr.aria-label]=\"model.a11y_input_ariaLabel\"\n            [attr.aria-labelledby]=\"model.a11y_input_ariaLabelledBy\"\n            [attr.aria-describedby]=\"model.a11y_input_ariaDescribedBy\"\n            [attr.aria-expanded]=\"model.ariaExpanded\"\n            [attr.aria-activedescendant]=\"dropdownModel.ariaActivedescendant\"\n            [attr.placeholder]=\"dropdownModel.placeholderRendered\" \n            [attr.readonly]=\"dropdownModel.filterReadOnly ? true : null\" \n            (change)=\"inputChange($event)\" (blur)=\"blur($event)\" (focus)=\"focus($event)\"/>\n        </div>\n        <div *ngIf=\"(model.allowClear && model.cssClasses.cleanButtonIconId)\" aria-hidden=\"true\"\n            [class]=\"model.cssClasses.cleanButton\" (click)=\"clear($event)\" [visible]=\"model.showClearButton\">\n            <!-- ko component: { name: 'sv-svg-icon', params: { css: model.cssClasses.cleanButtonSvg, iconName: model.cssClasses.cleanButtonIconId, size: 'auto' } } -->\n            <!-- /ko -->\n            <svg [iconName]=\"model.cssClasses.cleanButtonIconId\" [partCss]=\"model.cssClasses.cleanButtonSvg\" [title]=\"model.clearCaption\"\n                [size]=\"'auto'\" sv-ng-svg-icon></svg>\n        </div>\n    </div>\n    <sv-ng-popup *ngIf=\"!model.isReadOnly\" [popupModel]=\"dropdownModel.popupModel\"></sv-ng-popup>\n    <div *ngIf=\"model.isReadOnly\" [class]=\"model.getControlClass()\" [attr.id]=\"model.inputId\" \n    [attr.tabindex]=\"model.isDisabledAttr ? null : 0\"\n    [attr.disabled]=\"model.isDisabledAttr ? true : null\"\n    [attr.aria-label]=\"model.a11y_input_ariaLabel\"\n    [attr.aria-labelledby]=\"model.a11y_input_ariaLabelledBy\"\n    [attr.aria-describedby]=\"model.a11y_input_ariaDescribedBy\">\n        <sv-ng-string *ngIf=\"model.selectedItemLocText\" [model]=\"model.selectedItemLocText\"></sv-ng-string>\n        <div>{{ model.readOnlyText }}</div>\n    </div>\n    <div *ngIf=\"model.cssClasses.chevronButtonIconId\" [class]=\"model.cssClasses.chevronButton\" (pointerdown)=\"chevronPointerDown($event)\" aria-hidden=\"true\">\n        <svg [iconName]=\"model.cssClasses.chevronButtonIconId\" [partCss]=\"model.cssClasses.chevronButtonSvg\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n    </div>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { DropdownMultiSelectListModel, QuestionTagboxModel } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-tagbox-filter\",\n  templateUrl: \"./tagbox-filter.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class TagboxFilterComponent extends BaseAngular {\n  @Input() model!: DropdownMultiSelectListModel;\n  @Input() question!: QuestionTagboxModel;\n\n  getModel() {\n    return this.model;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-tagbox-filter\", TagboxFilterComponent);","<ng-template #template>\n  <div [class]=\"question.cssClasses.hint\">\n    <div *ngIf=\"model.showHintPrefix\" [class]=\"question.cssClasses.hintPrefix\">\n        <span>{{ model.hintStringPrefix }}</span>\n    </div>\n    <div [class]=\"question.cssClasses.hintSuffixWrapper\">\n        <div *ngIf=\"model.showHintString\" [class]=\"question.cssClasses.hintSuffix\">\n            <span style=\"visibility: hidden\">{{ model.inputStringRendered }}</span>\n            <span>{{ model.hintStringSuffix }}</span>\n        </div>\n    <input\n      type=\"text\"\n      autocomplete=\"off\"\n      [(ngModel)]=\"model.inputStringRendered\"\n      [attr.id]=\"question.getInputId()\"\n      [class]=\"question.cssClasses.filterStringInput\"\n      [attr.inputmode]=\"model.inputMode\"\n      [attr.role]=\"model.filterStringEnabled ? question.ariaRole : null\"\n      [attr.readonly]=\"model.filterReadOnly ? true : null\"\n      [attr.disabled]=\"question.isDisabledAttr ? true : null\"\n      [attr.size]=\"!model.inputStringRendered ? 1 : null\"\n      [attr.aria-label]=\"question.a11y_input_ariaLabel\"\n      [attr.aria-labelledby]=\"question.a11y_input_ariaLabelledBy\"\n      [attr.aria-describedby]=\"question.a11y_input_ariaDescribedBy\"\n      [attr.aria-controls]=\"model.listElementId\"\n      [attr.aria-expanded]=\"question.ariaExpanded\"\n      [attr.aria-activedescendant]=\"model.ariaActivedescendant\"\n      [attr.placeholder]=\"model.filterStringPlaceholder\"\n      (keydown)=\"model.inputKeyHandler($event)\"\n      (blur)=\"question.onBlur($event)\"\n      (focus)=\"question.onFocus($event)\"\n    />\n    </div>\n  </div>\n</ng-template>\n","import { Component, Input } from \"@angular/core\";\nimport { ItemValue, QuestionTagboxModel } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-tagbox-item, '[sv-ng-tagbox-item]'\",\n  templateUrl: \"./tagbox-item.component.html\",\n})\nexport class TagboxItemComponent extends BaseAngular {\n  @Input() item!: ItemValue;\n  @Input() question!: QuestionTagboxModel;\n\n  removeItem(event: any) {\n    this.question.dropdownListModel.deselectItem(this.item.value);\n    event.stopPropagation();\n  }\n\n  getModel() {\n    return this.item;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-tagbox-item\", TagboxItemComponent);","<div class=\"sv-tagbox__item\">\n  <div class=\"sv-tagbox__item-text\" [model]=\"item.locText\" sv-ng-string></div>  \n  <div [class]=\"question.cssClasses.cleanItemButton\" (click)=\"removeItem($event)\">\n    <svg [iconName]=\"question.cssClasses.cleanItemButtonIconId\" [partCss]=\"question.cssClasses.cleanItemButtonSvg\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n  </div>\n</div>","import { Component, Input, OnInit } from \"@angular/core\";\nimport { DropdownMultiSelectListModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-tagbox, '[sv-ng-tagbox]'\",\n  templateUrl: \"./tagbox.component.html\"\n})\nexport class TagboxComponent implements OnInit {\n    @Input() model: any;\n\n    get dropdownModel(): DropdownMultiSelectListModel {\n      return this.model?.dropdownListModel;\n    }\n\n    getModel() {\n      return this.model;\n    }\n\n    ngOnInit(): void {\n      if (!this.model.dropdownListModel) {\n        this.model.dropdownListModel = new DropdownMultiSelectListModel(this.model);\n      }\n    }\n\n    click(event: any) {\n      this.dropdownModel?.onClick(event);\n    }\n    chevronPointerDown(event: any) {\n      this.dropdownModel?.chevronPointerDown(event);\n    }\n    clear(event: any) {\n      this.dropdownModel?.onClear(event);\n    }\n    keyhandler(event: any) {\n      this.dropdownModel?.keyHandler(event);\n    }\n    blur(event: any) {\n      this.model?.onBlur(event);\n    }\n    focus(event: any) {\n      this.model?.onFocus(event);\n    }\n}","<div [class]=\"model.cssClasses.selectWrapper\" (click)=\"click($event)\">\n    <div *ngIf=\"!model.isReadOnly\" [attr.tabindex]=\"dropdownModel.noTabIndex ? null : 0\" [class]=\"model.getControlClass()\"\n        [attr.disabled]=\"model.isDisabledAttr ? true : null\" (blur)=\"blur($event)\"\n        (keydown)=\"keyhandler($event)\" [attr.id]=\"model.inputId\" [attr.aria-required]=\"model.ariaRequired\"\n        [attr.aria-label]=\"model.ariaLabel\" [attr.aria-invalid]=\"model.ariaInvalid\"\n        [attr.aria-errormessage]=\"model.ariaErrormessage\" [attr.role]=\"model.ariaRole\"\n        [attr.aria-controls]=\"dropdownModel.listElementId\"\n        [attr.aria-expanded]=\"model.ariaExpanded\"\n        [attr.aria-activedescendant]=\"dropdownModel.ariaActivedescendant\">\n        <div [class]=\"model.cssClasses.controlValue\">\n            <ng-container *ngIf=\"!model.isEmpty()\">\n                <sv-ng-tagbox-item *ngFor=\"let item of model.selectedChoices\" [item]=\"item\" [question]=\"model\">\n                </sv-ng-tagbox-item>\n            </ng-container>\n            <ng-template [component]=\"{ name: 'sv-tagbox-filter', data: { model: dropdownModel, question: model } }\"></ng-template>\n        </div>\n        <div *ngIf=\"(model.allowClear && model.cssClasses.cleanButtonIconId)\" [class]=\"model.cssClasses.cleanButton\"\n            (click)=\"clear($event)\" [visible]=\"model.showClearButton\" aria-hidden=\"true\">\n            <!-- ko component: { name: 'sv-svg-icon', params: { css: model.cssClasses.cleanButtonSvg, iconName: model.cssClasses.cleanButtonIconId, size: 'auto' } } -->\n            <!-- /ko -->\n            <svg [iconName]=\"model.cssClasses.cleanButtonIconId\" [partCss]=\"model.cssClasses.cleanButtonSvg\" [title]=\"model.clearCaption\"\n                [size]=\"'auto'\" sv-ng-svg-icon></svg>\n        </div>\n    </div>\n    <sv-ng-popup *ngIf=\"!model.isReadOnly\" [popupModel]=\"model.popupModel\"></sv-ng-popup>\n    <div *ngIf=\"model.isReadOnly\" [class]=\"model.getControlClass()\" [attr.id]=\"model.inputId\"\n    [attr.tabindex]=\"model.isDisabledAttr ? null : 0\"\n    [attr.disabled]=\"model.isDisabledAttr ? true : null\"\n    [attr.aria-label]=\"model.a11y_input_ariaLabel\"\n    [attr.aria-labelledby]=\"model.a11y_input_ariaLabelledBy\"\n    [attr.aria-describedby]=\"model.a11y_input_ariaDescribedBy\">\n        <sv-ng-string *ngIf=\"model.locReadOnlyText\" [model]=\"model.locReadOnlyText\"></sv-ng-string>\n    </div>\n    <div *ngIf=\"model.cssClasses.chevronButtonIconId\" [class]=\"model.cssClasses.chevronButton\" (pointerdown)=\"chevronPointerDown($event)\" aria-hidden=\"true\">\n        <svg [iconName]=\"model.cssClasses.chevronButtonIconId\" [partCss]=\"model.cssClasses.chevronButtonSvg\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n    </div>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../../../base-angular\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-dropdown-option-item, '[sv-ng-dropdown-option-item]'\",\n  template: '<ng-template #template><option [value]=\"item.value\" [disabled]=\"!item.isEnabled\">{{ item.text }}</option><ng-template>',\n})\nexport class DropdownOptionItemComponent extends BaseAngular {\n  @Input() item: any;\n  protected override onModelChanged(): void {\n    if (!this.item.locText) return;\n    this.item.locText.onChanged = () => {\n      this.detectChanges();\n    };\n  }\n  protected getModel() {\n    return this.item;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-dropdown-option-item\", DropdownOptionItemComponent);","import { Component, Input } from \"@angular/core\";\nimport { Question, QuestionSelectBase, TextAreaModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-comment-other, '[sv-ng-comment-other]'\",\n  templateUrl: \"./comment-other.component.html\",\n})\nexport class SurveyCommentOtherComponent {\n  @Input() question!: Question;\n  constructor() {\n  }\n  public get otherValue(): string {\n    const val = (<QuestionSelectBase>this.question).otherValue;\n    return !!val ? val : \"\";\n  }\n  public get textAreaModel(): TextAreaModel {\n    return (<QuestionSelectBase>this.question).otherTextAreaModel;\n  }\n}","<ng-container *ngIf=\"!question.isReadOnlyRenderDiv()\">\n  <ng-template [component]=\"{ name: 'sv-text-area', data: { model: textAreaModel } }\"></ng-template>\n</ng-container>\n<div *ngIf=\"question.isReadOnlyRenderDiv()\">{{ otherValue }}</div>\n","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\nimport { RendererFactory } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-dropdown-select-question\",\n  templateUrl: \"./dropdown-select.component.html\"\n})\nexport class DropdownSelectComponent {\n  @Input() model: any;\n\n  get editableValue() {\n    return this.model.renderedValue || \"\";\n  }\n  set editableValue(newValue: any) {\n    if(newValue === \"\") {\n      this.model.renderedValue = undefined;\n    } else {\n      this.model.renderedValue = newValue;\n    }\n  }\n\n  click(event: any) {\n    this.model.onClick(event);\n  }\n  keyup(event: any) {\n    this.model.onKeyUp(event);\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"dropdown-select-question\", DropdownSelectComponent);\nRendererFactory.Instance.registerRenderer(\"dropdown\", \"select\", \"dropdown-select-question\");","<div [class]=\"model.renderCssRoot\">\n  <div [class]=\"model.cssClasses.selectWrapper\">\n    <select *ngIf=\"!model.isReadOnly\" [attr.id]=\"model.inputId\" [(ngModel)]=\"editableValue\"\n      [disabled]=\"model.isInputReadOnly\" (click)=\"click($event)\" (keyup)=\"keyup($event)\"\n      [class]=\"model.getControlClass()\" [attr.autocomplete]=\"model.autocomplete\" [required]=\"model.isRequired\"\n      [attr.aria-required]=\"model.ariaRequired\" [attr.aria-label]=\"model.ariaLabel\"\n      [attr.aria-invalid]=\"model.ariaInvalid\" [attr.aria-errormessage]=\"model.ariaErrormessage\">\n      <option *ngIf=\"model.allowClear\" value=\"\">{{ model.placeholder }}</option>\n      <ng-template *ngFor=\"let item of model.visibleChoices\" [component]=\"{ name: 'sv-dropdown-option-item', data: { item } }\"></ng-template>\n    </select>\n    <div *ngIf=\"model.isReadOnly\" disabled [class]=\"model.getControlClass()\" [attr.id]=\"model.inputId\">{{ model.readOnlyText }}</div>\n    <div *ngIf=\"model.cssClasses.chevronButtonIconId\" [class]=\"model.cssClasses.chevronButton\">\n      <svg [iconName]=\"model.cssClasses.chevronButtonIconId\" [partCss]=\"model.cssClasses.chevronButtonSvg\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n    </div>\n  </div>\n  <div *ngIf=\"model.isOtherSelected\" [class]=\"model.getCommentAreaCss(true)\"\n    [style.display]=\"model.isFlowLayout ? 'inline': '' \" [question]=\"model\" sv-ng-comment-other></div>\n</div>","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { DomSanitizer, SafeResourceUrl, SafeUrl } from \"@angular/platform-browser\";\n\n//temp: disables angular sanitizer, which breaks a links\n@Pipe({ name: \"safeUrl\" })\nexport class SafeUrlPipe implements PipeTransform {\n  constructor(private domSanitizer: DomSanitizer) {}\n  transform(url: string): SafeUrl {\n    return this.domSanitizer.bypassSecurityTrustUrl(url);\n  }\n}\n\n@Pipe({ name: \"safeResourceUrl\" })\nexport class SafeResourceUrlPipe implements PipeTransform {\n  constructor(private domSanitizer: DomSanitizer) {}\n  transform(url: string): SafeResourceUrl {\n    return this.domSanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n}","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\nimport { SurveyModel } from \"survey-core\";\n@Component({\n  selector: \"sv-logo-image\",\n  templateUrl: \"./logo-image.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class LogoImageComponent extends EmbeddedViewContentComponent {\n  @Input() data!: SurveyModel;\n  get survey(): SurveyModel {\n    return this.data;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-logo-image\", LogoImageComponent);","<ng-template #template>\n  <div [class]=\"survey.logoClassNames\">\n    <img\n    [class]=\"survey.css.logoImage\"\n    [attr.src]=\"survey.locLogo.renderedHtml | safeUrl\"\n    [style.width]=\"survey.renderedStyleLogoWidth\"\n    [style.height]=\"survey.renderedStyleLogoHeight\"\n    [attr.width]=\"survey.renderedLogoWidth\"\n    [attr.height]=\"survey.renderedLogoHeight\"\n    [attr.alt]=\"survey.locTitle.renderedHtml\"\n    [style.objectFit]=\"survey.logoFit\"\n    />\n  </div>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { CharacterCounter } from \"survey-core\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { BaseAngular } from \"../../base-angular\";\n\n@Component({\n  selector: \"sv-ng-character-counter\",\n  templateUrl: \"./character-counter.component.html\",\n  styles: [\":host { display: none; }\"],\n  })\nexport class CharacterCounterComponent extends BaseAngular {\n  @Input() counter!: CharacterCounter;\n  @Input() remainingCharacterCounter!: string;\n\n  getModel() {\n    return this.counter;\n  }\n\n}\n\nAngularComponentFactory.Instance.registerComponent(\"character-counter\", CharacterCounterComponent);","<ng-template #template>\n  <div [class]=\"remainingCharacterCounter\">{{ counter.remainingCharacterCounter }}</div>\n</ng-template>","import { Component, ElementRef, ViewChild } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { Helpers, QuestionTextModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-text-question\",\n  templateUrl: \"./text.component.html\",\n  styleUrls: [\"./text.component.scss\"]\n})\nexport class TextQuestionComponent extends QuestionAngular<QuestionTextModel> {\n  @ViewChild(\"inputElement\") inputElementRef!: ElementRef<HTMLDivElement>;\n\n  get value(): string {\n    return this.model.inputValue ?? \"\";\n  }\n\n  blur(event: any): void {\n    this.model.onBlur(event);\n    this.updateInputDomElement();\n  }\n\n  updateInputDomElement(): void {\n    if (!!this.inputElementRef?.nativeElement) {\n      const control: any = this.inputElementRef.nativeElement;\n      if (!Helpers.isTwoValueEquals(this.value, control.value, false, true, false)) {\n        control.value = this.value;\n      }\n    }\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"text-question\", TextQuestionComponent);","  <ng-container [ngTemplateOutlet]=\"input\" *ngIf=\"!model.dataListId && !model.isReadOnlyRenderDiv()\"></ng-container>\n  <div *ngIf=\"model.dataListId && !model.isReadOnlyRenderDiv()\">\n    <ng-container [ngTemplateOutlet]=\"input\"></ng-container>\n    <datalist [id]=\"model.dataListId\">\n      <option *ngFor=\"let dataListItem of model.dataList\" [value]=\"dataListItem\"></option>\n    </datalist>\n  </div>\n  <div *ngIf=\"model.isReadOnlyRenderDiv()\" #contentElement>{{ value }}</div>\n  <ng-template #input>\n    <input #inputElement [style]=\"model.inputStyle\" [class]=\"model.getControlClass()\" [attr.list]=\"model.dataListId\"\n    (change)=\"model.onChange($event)\" [value]=\"value\" [disabled]=\"model.isDisabledAttr\" [type]=\"model.inputType\" [id]=\"model.inputId\" [attr.placeholder]=\"model.renderedPlaceholder || ''\"\n    (keyup)=\"model.onKeyUp($event)\" (keydown)=\"model.onKeyDown($event)\" (blur)=\"blur($event)\" (focus)=\"model.onFocus($event)\" (compositionupdate)=\"model.onCompositionUpdate($event)\" \n    [attr.size] = \"model.renderedInputSize\" [attr.maxlength]= \"model.getMaxLength()\" [attr.min]=\"model.renderedMin\" [readonly]=\"model.isReadOnlyAttr\"\n    [attr.max]=\"model.renderedMax\" [attr.step]=\"model.renderedStep\" [attr.max]=\"model.renderedMax\" [attr.aria-required]=\"model.a11y_input_ariaRequired\"\n    [attr.aria-label]=\"model.a11y_input_ariaLabel\" [attr.aria-labelledby]=\"model.a11y_input_ariaLabelledBy\" [attr.aria-describedby]=\"model.a11y_input_ariaDescribedBy\"[attr.aria-invalid]=\"model.a11y_input_ariaInvalid\" [attr.aria-errormessage]=\"model.a11y_input_ariaErrormessage\" [attr.autocomplete]=\"model.autocomplete\" #contentElement/>\n    <sv-ng-character-counter *ngIf=\"model.getMaxLength()\" \n    [counter]=\"model.characterCounter\"\n    [remainingCharacterCounter]=\"model.cssClasses.remainingCharacterCounter\">\n  </sv-ng-character-counter>\n  </ng-template>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionHtmlModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n@Component({\n  selector: \"sv-ng-html-question\",\n  templateUrl: \"./html.component.html\",\n  styleUrls: []\n})\nexport class HtmlQuestionComponent extends QuestionAngular<QuestionHtmlModel> {\n  override onModelChanged(): void {\n    super.onModelChanged();\n    this.model.locHtml.onChanged = () => {\n      this.detectChanges();\n    };\n  }\n  override ngOnDestroy(): void {\n    this.model.locHtml.onChanged = () => {};\n    super.ngOnDestroy();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"html-question\", HtmlQuestionComponent);","<div [class]=\"model.renderCssRoot\" [innerHTML]=\"model.locHtml.renderedHtml | safeHtml\" #contentElement></div>","import { Component, Input } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { ItemValue, QuestionRadiogroupModel, QuestionSelectBase } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"['sv-ng-selectbase']\",\n  templateUrl: \"./selectbase.component.html\"\n})\nexport class SelectBaseComponent<T extends QuestionSelectBase> extends QuestionAngular<T> {\n  //#todo temp fix (CanClearButton should be placed in selectbase so it could work with imagepicker)\n  @Input() override model!: any;\n\n  public inputType: string = \"checkbox\";\n  public showLegend: boolean = true;\n\n  public getDefaultComponentName(): string {\n    return \"sv-ng-selectbase-item\";\n  }\n  public trackItemBy(_: number, item: ItemValue): any {\n    return item.value;\n  }\n  public trackColumnBy(index: number): any {\n    return index;\n  }\n\n  public getItemValueComponentName(item: ItemValue): string {\n    return this.model.getItemValueWrapperComponentName(item) || this.getDefaultComponentName();\n  }\n  public getItemValueComponentData(item: ItemValue): any {\n    const itemComponentProperty = this.model.getPropertyByName(\"itemComponent\");\n    const isDefaultItemComponent = itemComponentProperty.isDefaultValue(this.model.itemComponent);\n    const itemComponent = isDefaultItemComponent ? this.getDefaultComponentName() : this.model.itemComponent;\n\n    return {\n      componentName: itemComponent,\n      componentData: {\n        question: this.model,\n        model: item,\n        inputType: this.inputType,\n        data: this.model.getItemValueWrapperComponentData(item)\n      }\n    };\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"selectbase\", SelectBaseComponent);","<fieldset [class]=\"model.getSelectBaseRootCss()\" #contentElement \n  [attr.role]=\"model.a11y_input_ariaRole\"\n  [attr.aria-required]=\"model.a11y_input_ariaRequired\"\n  [attr.aria-label]=\"model.a11y_input_ariaLabel\"\n  [attr.aria-labelledby]=\"model.a11y_input_ariaLabelledBy\"\n  [attr.aria-describedby]=\"model.a11y_input_ariaDescribedBy\"\n  [attr.aria-invalid]=\"model.a11y_input_ariaInvalid\"\n  [attr.aria-errormessage]=\"model.a11y_input_ariaErrormessage\"\n>\n  <legend *ngIf=\"showLegend\" class=\"sv-hidden\">{{model.locTitle.renderedHtml}}</legend>\n  <ng-container *ngIf=\"model.hasHeadItems\">\n    <ng-container *ngFor=\"let item of model.headItems; trackBy: trackItemBy\">\n      <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\"></ng-template>\n    </ng-container>\n  </ng-container>\n  <ng-container *ngIf=\"!model.hasColumns && !model.blockedRow\">\n    <ng-container *ngFor=\"let item of model.bodyItems; trackBy: trackItemBy\" >\n      <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\"></ng-template>\n    </ng-container>\n  </ng-container>\n  <div [class]=\"model.cssClasses.rootRow\" *ngIf=\"!model.hasColumns && model.blockedRow\">\n    <ng-container *ngFor=\"let item of model.dataChoices; trackBy: trackItemBy\">\n      <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\"></ng-template>\n    </ng-container>\n  </div>\n  <ng-container *ngIf=\"model.hasColumns\">\n    <div [class]=\"model.cssClasses.rootMultiColumn\">\n      <div [class]=\"model.getColumnClass()\" *ngFor=\"let column of model.columns; trackBy: trackColumnBy\" role=\"presentation\">\n        <ng-container *ngFor=\"let item of column; trackBy: trackItemBy\">\n          <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\"></ng-template>\n        </ng-container>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"model.hasFootItems\">\n    <ng-container *ngFor=\"let item of model.footItems; trackBy: trackItemBy\">\n      <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\"></ng-template>\n    </ng-container>\n  </ng-container>\n  <div *ngIf=\"model.isOtherSelected\" [class]=\"model.getCommentAreaCss(true)\" [question]=\"model\" sv-ng-comment-other></div>\n  <div *ngIf=\"model.showClearButtonInContent\">\n    <input\n      type=\"button\"\n      (click)=\"model.clearValue(true)\"\n      [value]=\"model.clearButtonCaption\"\n      [class]=\"model.cssClasses.clearButton\"\n    />\n  </div>\n</fieldset>","import { Component } from \"@angular/core\";\nimport { QuestionRadiogroupModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { SelectBaseComponent } from \"./selectbase.component\";\n\n@Component({\n  selector: \"sv-ng-radiogroup-question\",\n  templateUrl: \"./selectbase.component.html\"\n})\nexport class RadiogroupComponent extends SelectBaseComponent<QuestionRadiogroupModel> {\n  override ngOnInit(): void {\n    this.inputType = \"radio\";\n    this.showLegend = false;\n    super.ngOnInit();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"radiogroup-question\", RadiogroupComponent);","import { Component, Input } from \"@angular/core\";\n@Component({\n  selector: \"sv-ng-radiogroup-item, '[sv-ng-radiogroup-item]'\",\n  templateUrl: \"./radiogroup-item.component.html\",\n  styleUrls: [\"./radiogroup-item.component.scss\"]\n})\nexport class RadiogroupItemComponent {\n  @Input() question: any;\n  @Input() model: any;\n  constructor() {\n  }\n}\n","<input type=\"radio\" [name]=\"question.questionName\" [attr.name]=\"question.questionName\" [id]=\"question.getItemId(model)\" [attr.aria-errormessage]=\"question.ariaErrormessage\" [class]=\"question.cssClasses.itemControl\"\n  [disabled]=\"!question.getItemEnabled(model)\" [readonly]=\"question.isReadOnlyAttr\" [(ngModel)]=\"question.renderedValue\" [attr.value]=\"model.value\" [value]=\"model.value\"\n/>\n<ng-content></ng-content>","import { Component } from \"@angular/core\";\nimport { QuestionCheckboxModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { SelectBaseComponent } from \"./selectbase.component\";\n\n@Component({\n  selector: \"sv-ng-checkbox-question\",\n  templateUrl: \"./selectbase.component.html\"\n})\nexport class CheckboxComponent extends SelectBaseComponent<QuestionCheckboxModel> {}\n\nAngularComponentFactory.Instance.registerComponent(\"checkbox-question\", CheckboxComponent);","import { Component, Input } from \"@angular/core\";\nimport { ItemValue, QuestionCheckboxModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-checkbox-item, '[sv-ng-checkbox-item]'\",\n  templateUrl: \"./checkbox-item.component.html\",\n  styleUrls: [\"./checkbox-item.component.scss\"]\n  })\nexport class CheckboxItemComponent {\n  @Input() question!: QuestionCheckboxModel;\n  @Input() model!: ItemValue;\n  constructor() {\n  }\n  onChange(event: any) {\n    this.question[\"clickItemHandler\"](this.model, event.target.checked);\n  }\n  onSelectAllChange(event: any) {\n    this.question.toggleSelectAll();\n  }\n}\n","<input type=\"checkbox\" [name]=\"question.name+model.id\" [id]=\"question.getItemId(model)\" [class]=\"question.cssClasses.itemControl\" [required]=\"question.hasRequiredError()\"\n  [disabled]=\"!question.getItemEnabled(model)\" [readonly]=\"question.isReadOnlyAttr\" [checked]=\"question.isItemSelected(model)\" [value]=\"model.value\" (change)=\"onChange($event)\"/>\n<ng-content></ng-content>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { QuestionDropdownModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-dropdown-question\",\n  templateUrl: \"./dropdown.component.html\"\n})\nexport class DropdownQuestionComponent extends QuestionAngular<QuestionDropdownModel> {\n}\n\nAngularComponentFactory.Instance.registerComponent(\"dropdown-question\", DropdownQuestionComponent);","<div [class]=\"model.renderCssRoot\" #contentElement>\n  <sv-ng-dropdown [model]=\"model\"></sv-ng-dropdown>\n  <div *ngIf=\"model.isOtherSelected\" [class]=\"model.getCommentAreaCss(true)\" [question]=\"model\" sv-ng-comment-other></div>\n</div>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { QuestionTagboxModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-tagbox-question\",\n  templateUrl: \"./tagbox.component.html\"\n})\nexport class TagboxQuestionComponent extends QuestionAngular<QuestionTagboxModel> {\n}\n\nAngularComponentFactory.Instance.registerComponent(\"tagbox-question\", TagboxQuestionComponent);","<div [class]=\"model.renderCssRoot\" #contentElement>\n  <sv-ng-tagbox [model]=\"model\"></sv-ng-tagbox>\n  <div *ngIf=\"model.isOtherSelected\" [class]=\"model.getCommentAreaCss(true)\" [question]=\"model\" sv-ng-comment-other></div>\n</div>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionRatingModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-rating-question\",\n  templateUrl: \"./rating.component.html\"\n})\nexport class RatingQuestionComponent extends QuestionAngular<QuestionRatingModel> {\n  trackByFn(index: number): number {\n    return index;\n  }\n  public onClick(event: any) {\n    event.stopPropagation();\n    this.model.setValueFromClick(event.target.value);\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"rating-question\", RatingQuestionComponent);","  <div [class]=\"model.ratingRootCss\" #contentElement>\n      <fieldset role=\"radiogroup\">\n          <legend role=\"presentation\" class=\"sv-hidden\"></legend>\n          <span *ngIf=\"model.hasMinLabel\" [class]=\"model.cssClasses.minText\" [model]=\"model.locMinRateDescription\" sv-ng-string>\n          </span>\n          <ng-template *ngFor=\"let item of model.renderedRateItems; index as index; trackBy: trackByFn\" [component]=\"{ name: model.itemComponent, data: {model: model, item: item, index: index }}\"></ng-template>\n          <span *ngIf=\"model.hasMaxLabel\" [class]=\"model.cssClasses.maxText\" [model]=\"model.locMaxRateDescription\" sv-ng-string></span>\n      </fieldset>\n  </div>\n","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionBooleanModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-boolean-question\",\n  templateUrl: \"./boolean.component.html\"\n})\nexport class BooleanQuestionComponent extends QuestionAngular<QuestionBooleanModel> {\n  onChange(event: any) {\n    this.model.booleanValue = event.target.value;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"boolean-question\", BooleanQuestionComponent);","<div [class]=\"model.cssClasses.root\" (keydown)=\"model.onKeyDownCore($event)\" #contentElement>\n    <label [class]=\"model.getItemCss()\">\n      <input\n        type=\"checkbox\"\n        [attr.name]=\"model.name\" [attr.id]=\"model.inputId\" \n        [attr.role]=\"model.a11y_input_ariaRole\"\n        [attr.aria-required]=\"model.a11y_input_ariaRequired\"\n        [attr.aria-label]=\"model.a11y_input_ariaLabel\"\n        [attr.aria-labelledby]=\"model.a11y_input_ariaLabelledBy\"\n        [attr.aria-describedby]=\"model.a11y_input_ariaDescribedBy\"\n        [attr.aria-invalid]=\"model.a11y_input_ariaInvalid\"\n        [attr.aria-errormessage]=\"model.a11y_input_ariaErrormessage\"\n        [class]=\"model.cssClasses.control\" [disabled]=\"model.isDisabledAttr\" [readonly]=\"model.isReadOnlyAttr\"  [indeterminate]=\"model.isIndeterminate\" [value]=\"model.booleanValue\" [(ngModel)]=\"model.booleanValue\" />\n      <div [class]=\"model.cssClasses.sliderGhost\" (click)=\"model.onLabelClick($event, model.swapOrder)\">\n        <span [class]=\"model.getLabelCss(model.swapOrder)\" [model]=\"model.locLabelLeft\" sv-ng-string></span>\n      </div>\n      <div [class]=\"model.cssClasses.switch\" (click)=\"model.onSwitchClickModel($event)\">\n        <span [class]=\"model.cssClasses.slider\">\n            <span *ngIf=\"model.cssClasses.sliderText && model.isDeterminated\" [class]=\"model.cssClasses.sliderText\" [model]=\"model.getCheckedLabel()\" sv-ng-string></span>\n        </span>\n      </div>\n      <div [class]=\"model.cssClasses.sliderGhost\" (click)=\"model.onLabelClick($event, !model.swapOrder)\">\n        <span [class]=\"model.getLabelCss(!model.swapOrder)\" [model]=\"model.locLabelRight\"  sv-ng-string></span>\n      </div>\n    </label>\n</div>","import { AfterViewInit, Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\nimport { ImageItemValue, QuestionImagePickerModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n@Component({\n  selector: \"sv-ng-imagepicker-item\",\n  templateUrl: \"./imagepicker-item.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class ImagePickerItemComponent extends BaseAngular<ImageItemValue> implements AfterViewInit {\n  @Input() question!: QuestionImagePickerModel;\n  @Input() model!: ImageItemValue;\n  protected getModel(): ImageItemValue {\n    return this.model;\n  }\n  onChange(event: any) {\n    if (this.question.isReadOnlyAttr) return;\n    if (this.question.multiSelect) {\n      if (event.target.checked) {\n        this.question.value = this.question.value.concat(event.target.value);\n      } else {\n        var currValue = this.question.value;\n        currValue.splice(this.question.value.indexOf(event.target.value), 1);\n        this.question.value = currValue;\n      }\n    } else {\n      this.question.value = event.target.value;\n    }\n  }\n  ngAfterViewInit(): void {\n    this.model.locImageLink.onChanged = () => {\n      this.detectChanges();\n    };\n  }\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.model.locImageLink.onChanged = () => {};\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-ng-imagepicker-item\", ImagePickerItemComponent);","<ng-template #template>\n  <div [class]=\"question.getItemClass(model)\">\n    <label [class]=\"question.cssClasses.label\">\n        <input [type]=\"question.inputType\" [attr.name]=\"question.questionName\" [attr.value]=\"model.value\" [id]=\"question.getItemId(model)\" [attr.aria-required]=\"question.ariaRequired\" [attr.aria-label]=\"question.ariaLabel\" [attr.aria-invalid]=\"question.ariaInvalid\" [attr.aria-errormessage]=\"question.ariaErrormessage\"\n        (change)=\"onChange($event)\" [checked]=\"question.isItemSelected(model)\" [disabled]=\"!question.getItemEnabled(model)\" [readonly]=\"question.isReadOnlyAttr\" [class]=\"question.cssClasses.itemControl\"\n        />\n        <div [class]=\"question.cssClasses.itemDecorator\">\n            <div [class]=\"question.cssClasses.imageContainer\">\n              <span *ngIf=\"question.cssClasses.checkedItemDecorator\" [class]=\"question.cssClasses.checkedItemDecorator\">\n                <svg *ngIf=\"question.cssClasses.checkedItemSvgIconId\" [class]=\"question.cssClasses.checkedItemSvgIcon\" [iconName]=\"question.cssClasses.checkedItemSvgIconId\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n              </span>\n              <img *ngIf=\"model.locImageLink.renderedHtml && !model.contentNotLoaded && question.contentMode === 'image'\" [class]=\"question.cssClasses.image\" [attr.src]=\"model.locImageLink.renderedHtml\" [attr.width]=\"question.renderedImageWidth\" [attr.height]=\"question.renderedImageHeight\" [attr.alt]=\"model.locText.renderedHtml\"  [style.objectFit]=\"question.imageFit\" (load)=\"question.onContentLoaded(model, $event)\" (error)=\"model.onErrorHandler()\"/>\n              <video *ngIf=\"model.locImageLink.renderedHtml && !model.contentNotLoaded && question.contentMode === 'video'\" controls [class]=\"question.cssClasses.image\" [attr.src]=\"model.locImageLink.renderedHtml\" [attr.width]=\"question.renderedImageWidth\" [attr.height]=\"question.renderedImageHeight\" [style.objectFit]=\"question.imageFit\" (loadedmetadata)=\"question.onContentLoaded(model, $event)\" (error)=\"model.onErrorHandler()\"></video>\n              <div *ngIf=\"!model.locImageLink.renderedHtml || model.contentNotLoaded\" [class]=\"question.cssClasses.itemNoImage\" [style.width]=\"question.renderedImageWidth + 'px'\" [style.height]=\"question.renderedImageHeight + 'px'\" [style.objectFit]=\"question.imageFit\">\n                <svg *ngIf=\"question.cssClasses.itemNoImageSvgIconId\" [class]=\"question.cssClasses.itemNoImageSvgIcon\" [iconName]=\"question.cssClasses.itemNoImageSvgIconId\" [size]=\"48\" sv-ng-svg-icon></svg>\n              </div>\n            </div>\n            <span *ngIf=\"question.showLabel\" [class]=\"question.cssClasses.itemText\" [model]=\"model.locText\" sv-ng-string></span>\n        </div>\n    </label>\n  </div>\n</ng-template>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { ImageItemValue, ItemValue, QuestionImagePickerModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-imagepicker-question\",\n  templateUrl: \"./imagepicker.component.html\"\n})\nexport class ImagePickerQuestionComponent extends QuestionAngular<QuestionImagePickerModel> {\n  public getItemValueComponentName(item: ItemValue): string {\n    return this.model.getItemValueWrapperComponentName(item) || \"sv-ng-imagepicker-item\";\n  }\n  public getItemValueComponentData(item: ItemValue): any {\n    return {\n      componentName: \"sv-ng-imagepicker-item\",\n      componentData: {\n        question: this.model,\n        model: item,\n        data: this.model.getItemValueWrapperComponentData(item)\n      }\n    };\n  }\n\n}\n\nAngularComponentFactory.Instance.registerComponent(\"imagepicker-question\", ImagePickerQuestionComponent);","  <fieldset [class]=\"model.getSelectBaseRootCss()\" #contentElement>\n      <legend class=\"sv-hidden\">{{model.locTitle.renderedHtml}}</legend>\n      <ng-container *ngIf=\"!model.hasColumns\">\n        <ng-container *ngFor=\"let item of model.visibleChoices\">\n          <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\"></ng-template>\n        </ng-container>\n      </ng-container>\n      <ng-container *ngIf=\"model.hasColumns\">\n        <div *ngFor=\"let column of model.columns\" [class]=\"model.getColumnClass()\" role=\"presentation\">\n          <ng-container *ngFor=\"let item of column\">\n            <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\"></ng-template>\n          </ng-container>\n        </div>\n      </ng-container>\n  </fieldset>","import { Component, Input, OnChanges } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { ButtonGroupItemModel, ItemValue, QuestionButtonGroupModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-button-group-item\",\n  templateUrl: \"./button-group-item.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class ButtonGroupItemComponent extends BaseAngular<ItemValue> implements OnChanges {\n  @Input() item!: ItemValue;\n  @Input() question!: QuestionButtonGroupModel;\n  @Input() index!: number;\n  public model!: ButtonGroupItemModel;\n  public ngOnChanges(): void {\n    this.model = new ButtonGroupItemModel(this.question, this.item, this.index);\n  }\n  protected getModel(): ItemValue {\n    return this.item;\n  }\n}","<ng-template #template>\n  <label role=\"radio\" [class]=\"model.css.label\" [attr.title]=\"model.caption.renderedHtml\">\n    <input type=\"radio\"\n      [attr.name]=\"model.name\" [attr.id]=\"model.id\" [attr.aria-required]=\"model.isRequired\" [attr.aria-label]=\"model.caption.renderedHtml\" role=\"radio\" [attr.aria-invalid]=\"model.hasErrors\" [attr.aria-errormessage]=\"model.describedBy\" [disabled]=\"model.readOnly\" [class]=\"model.css.control\" [(ngModel)]=\"question.renderedValue\" [attr.value]=\"model.value\" [value]=\"model.value\"/>\n    <div data-bind=\"css: model.css.decorator\">\n      <svg *ngIf=\"model.iconName\" [iconName]=\"model.iconName\" [size]=\"model.iconSize\" [class]=\"model.css.icon\" sv-ng-svg-icon></svg>\n      <span [class]=\"model.css.caption\" *ngIf=\"model.showCaption\" [attr.title]=\"model.caption.renderedHtml\" sv-ng-string [model]=\"model.caption\">\n      </span>\n    </div>\n  </label>\n</ng-template>","\nimport { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../../question\";\nimport { QuestionButtonGroupModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-buttongroup-question\",\n  templateUrl: \"./button-group.component.html\"\n})\nexport class ButtonGroupQuestionComponent extends QuestionAngular<QuestionButtonGroupModel> {\n}","<div role=\"group\" [class]=\"model.cssClasses.root\">\n  <sv-button-group-item *ngFor=\"let item of model.visibleChoices; index as index\" [question]=\"model\" [item]=\"item\" [index]=\"index\" ></sv-button-group-item>\n</div>\n","import { Component, Input, TemplateRef, ViewContainerRef, OnChanges, OnInit, SimpleChanges, ChangeDetectorRef } from \"@angular/core\";\nimport { SurveyModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"./component-factory\";\nimport { EmbeddedViewContentComponent } from \"./embedded-view-content.component\";\n\n@Component({\n  selector: \"sv-components-container, [sv-components-container], sv-ng-components-container\",\n  templateUrl: \"./components-container.component.html\",\n  styleUrls: [\"./hide-host.scss\"]\n})\nexport class ComponentsContainerComponent extends EmbeddedViewContentComponent {\n  @Input() survey!: SurveyModel;\n  @Input() container!: string;\n  @Input() needRenderWrapper?: boolean;\n  get components(): Array<any> {\n    return this.survey.getContainerContent(this.container as any);\n  }\n  get isNeedRenderWrapper(): boolean {\n    return this.needRenderWrapper === false ? false : true;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-components-container\", ComponentsContainerComponent);","<ng-template #template>\n  <ng-container *ngIf=\"isNeedRenderWrapper\">\n    <div *ngIf=\"components.length > 0\" [class]=\"'sv-components-column' + ' sv-components-container-' + container\">\n      <ng-container *ngFor=\"let component of components\">\n        <ng-template [component]=\"{ name: component.component, data: { survey: survey, container: container, model: component.data } }\"></ng-template>\n      </ng-container>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"!isNeedRenderWrapper && components.length > 0\">\n    <ng-container *ngFor=\"let component of components\">\n      <ng-template [component]=\"{ name: component.component, data: { survey: survey, container: container, model: component.data } }\"></ng-template>\n    </ng-container>\n  </ng-container>\n</ng-template>","import { Directive, ElementRef, Input, SimpleChanges, OnChanges, OnDestroy } from \"@angular/core\";\nimport { doKey2ClickDown, doKey2ClickUp, doKey2ClickBlur, IAttachKey2clickOptions } from \"survey-core\";\n\n@Directive({\n  selector: \"[key2click]\"\n})\nexport class Key2ClickDirective implements OnChanges, OnDestroy {\n  static defaultOptions: IAttachKey2clickOptions = { processEsc: true, disableTabStop: false };\n  private isSubscribed = false;\n\n  options?: IAttachKey2clickOptions = { ...Key2ClickDirective.defaultOptions };\n  @Input() key2click?: IAttachKey2clickOptions;\n\n  private onkeydown (evt: any) {\n    doKey2ClickDown(evt, this.options);\n  }\n  private onkeyup = (evt: any) => {\n    evt.preventDefault();\n    evt.stopPropagation();\n    doKey2ClickUp(evt, this.options);\n    return false;\n  }\n  private blur (evt: any) {\n    doKey2ClickBlur(evt);\n  }\n  constructor(private el: ElementRef) {\n    this.subscribeEventListeners();\n  }\n\n  get element() {\n    return this.el.nativeElement;\n  }\n\n  subscribeEventListeners() {\n    if(this.isSubscribed) return;\n\n    this.element.tabIndex = 0;\n    this.element.addEventListener(\"keyup\", this.onkeyup.bind(this));\n    this.element.addEventListener(\"keydown\", this.onkeydown.bind(this));\n    this.element.addEventListener(\"blur\", this.blur);\n\n    this.isSubscribed = true;\n  }\n  unsubscribeEventListeners() {\n    if(!this.isSubscribed) return;\n\n    this.element.tabIndex = -1;\n    this.element.removeEventListener(\"keyup\", this.onkeyup.bind(this));\n    this.element.removeEventListener(\"keydown\", this.onkeydown.bind(this));\n    this.element.removeEventListener(\"blur\", this.blur);\n\n    this.isSubscribed = false;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const curValue = changes[\"key2click\"].currentValue;\n    if(curValue.disableTabStop) {\n      this.unsubscribeEventListeners();\n    } else {\n      this.subscribeEventListeners();\n    }\n    this.options = Object.assign({}, Key2ClickDirective.defaultOptions, curValue);\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeEventListeners();\n  }\n}","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-action-bar-item\",\n  templateUrl: \"./action-bar-item.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class ActionBarItemComponent extends BaseAngular {\n  @Input() model: any;\n\n  getModel() {\n    return this.model;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-action-bar-item\", ActionBarItemComponent);","<ng-template #template>\n  <button type=\"button\" (click)=\"model.doAction($event)\" (mousedown)=\"model.doMouseDown($event)\" (focus)=\"model.doFocus($event)\" [key2click]=\"{ processEsc: false, disableTabStop: model.disableTabStop }\" [class]=\"model.getActionBarItemCss()\" [attr.title]=\"model.tooltip || model.title\" [attr.aria-checked]=\"model.ariaChecked\" [attr.aria-expanded]=\"model.ariaExpanded\" [attr.role]=\"model.ariaRole\" [disabled]=\"model.disabled\">\n    <svg *ngIf=\"model.iconName\" [iconName]=\"model.iconName\" [size]=\"model.iconSize\" [title]=\"model.tooltip || model.title\" [class]=\"model.cssClasses.itemIcon\" sv-ng-svg-icon></svg>\n    <span *ngIf=\"model.hasTitle\" [class]=\"model.getActionBarItemTitleCss()\">{{ model.title }}</span>\n  </button>\n<ng-template>","import { Component, Input } from \"@angular/core\";\nimport { ActionDropdownViewModel, getActionDropdownButtonTarget } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-action-bar-item-dropdown\",\n  templateUrl: \"./action-bar-item-dropdown.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class ActionBarItemDropdownComponent extends BaseAngular {\n  @Input() model: any\n  public getTarget: (container: HTMLElement) => HTMLElement = getActionDropdownButtonTarget;\n  protected viewModel!: ActionDropdownViewModel;\n\n  protected getModel() {\n    return this.model;\n  }\n  override ngOnInit(): void {\n    super.ngOnInit();\n    this.viewModel = new ActionDropdownViewModel(this.model);\n  }\n  override ngOnDestroy(): void {\n    this.viewModel.dispose();\n    super.ngOnDestroy();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-action-bar-item-dropdown\", ActionBarItemDropdownComponent);","<ng-template #template>\n    <button type=\"button\" (click)=\"model.action(model, model.getIsTrusted($event))\" [key2click]=\"{ processEsc: false, disableTabStop: model.disableTabStop }\" [class]=\"model.getActionBarItemCss()\" [title]=\"model.tooltip || model.title\" [disabled]=\"model.disabled\" [attr.role]=\"model.ariaRole\">\n        <svg *ngIf=\"model.iconName\" [iconName]=\"model.iconName\" [size]=\"model.iconSize\" [title]=\"model.tooltip || model.title\" [class]=\"model.cssClasses.itemIcon\" sv-ng-svg-icon></svg>\n        <span *ngIf=\"model.hasTitle\" [class]=\"model.getActionBarItemTitleCss()\">{{ model.title }}</span>\n    </button>\n    <sv-ng-popup [popupModel]=\"model.popupModel\" [getTarget]=\"getTarget\"></sv-ng-popup>\n</ng-template>","import { AfterViewInit, Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\nimport { ItemValue } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"['sv-ng-selectbase-item'], sv-ng-selebase-item\",\n  templateUrl: \"./selectbase-item.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class SelectBaseItemComponent extends BaseAngular<ItemValue> implements AfterViewInit {\n\n  @Input() question!: any;\n  @Input() model!: ItemValue | any;\n  @Input() inputType!: string;\n  @Input() showLabel: boolean = true;\n  @ViewChild(\"container\", { read: ElementRef }) container!: ElementRef<HTMLDivElement>\n  protected getModel(): ItemValue {\n    return this.model;\n  }\n  protected override onModelChanged(): void {\n    super.onModelChanged();\n    if(!this.question.isDesignMode) {\n      if(this.previousModel) {\n        this.previousModel.setRootElement(undefined as any);\n      }\n      if(this.model && this.container?.nativeElement) {\n        this.model.setRootElement(this.container.nativeElement)\n      }\n    }\n  }\n  ngAfterViewInit(): void {\n    if(this.model && this.container?.nativeElement && !this.question.isDesignMode) {\n      this.model.setRootElement(this.container.nativeElement)\n    }\n  }\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    if(this.model && !this.question.isDesignMode) {\n      this.model.setRootElement(undefined);\n    }\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-ng-selectbase-item\", SelectBaseItemComponent);","<ng-template #template>\n  <div role=\"presentation\" [class]=\"question.getItemClass(model)\" #container>\n    <ng-container [ngSwitch]=\"inputType\">\n      <label *ngSwitchCase=\"'checkbox'\" [class]=\"question.getLabelClass(model)\" [model]=\"model\" [question]=\"question\"\n        sv-ng-checkbox-item>\n        <ng-container *ngTemplateOutlet=\"itemDecorator\"></ng-container>\n      </label>\n      <label *ngSwitchCase=\"'radio'\" (mousedown)=\"question.onMouseDown()\" [class]=\"question.getLabelClass(model)\"\n        [model]=\"model\" [question]=\"question\" sv-ng-radiogroup-item>\n        <ng-container *ngTemplateOutlet=\"itemDecorator\"></ng-container>\n      </label>\n    </ng-container>\n    <ng-template #itemDecorator>\n      <span *ngIf=\"question.cssClasses.materialDecorator\" [class]=\"question.cssClasses.materialDecorator\">\n        <svg *ngIf=\"question.itemSvgIcon\" [class]=\"question.cssClasses.itemDecorator\">\n          <use [attr.xlink:href]=\"question.itemSvgIcon\"></use>\n        </svg>\n      </span>\n      <span [class]=\"question.getControlLabelClass(model)\" *ngIf=\"!model.hideCaption\">\n        <sv-ng-string [model]=\"model.locText\"></sv-ng-string>\n      </span>\n    </ng-template>\n  </div>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-skeleton\",\n  templateUrl: \"./skeleton.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class SkeletonComponent extends EmbeddedViewContentComponent {\n  @Input() element: any;\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-skeleton\", SkeletonComponent);","<ng-template #template>\n  <div class=\"sv-skeleton-element\" [id]=\"element.id\" [style.height]=\"element.skeletonHeight\"></div>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { Base, SurveyTimerModel } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component(\n  {\n    selector: \"sv-timerpanel\",\n    templateUrl: \"./timer-panel.component.html\",\n  }\n)\n\nexport class TimerPanelComponent extends BaseAngular<SurveyTimerModel> {\n  @Input() model!: SurveyTimerModel;\n  private readonly circleLengthValue = 440;\n\n  protected getStateElement(): Base {\n    return this.model;\n  }\n  protected getModel(): SurveyTimerModel {\n    return this.model;\n  }\n  public get circleLength(): number {\n    return this.circleLengthValue;\n  }\n  public get progress(): number {\n    return -this.model.progress * this.circleLength;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-timerpanel\", TimerPanelComponent);","<div *ngIf=\"model.isRunning && model.showTimerAsClock\" [class]=\"model.rootCss\">\n    <svg *ngIf=\"model.showProgress\" [class]=\"model.getProgressCss()\" [style.stroke-dasharray]=\"circleLength\" [style.stroke-dashoffset]=\"progress\" [size]=\"'auto'\" [iconName]=\"'icon-timercircle'\" sv-ng-svg-icon></svg>\n    <div [class]=\"model.textContainerCss\">\n        <span [class]=\"model.majorTextCss\">{{ model.clockMajorText }}</span>\n        <span *ngIf=\"model.clockMinorText\" [class]=\"model.minorTextCss\">{{ model.clockMinorText }}</span>\n    </div>\n</div>\n<div *ngIf=\"model.isRunning && !model.showTimerAsClock\" [class]='model.survey.getCss().timerRoot'>{{model.text}}</div>","import { AfterViewInit, Component, Input } from \"@angular/core\";\nimport { ListModel, Action, IAction } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-list-item, '[sv-ng-list-item]'\",\n  templateUrl: \"./list-item.component.html\",\n  styleUrls: [\"../../hide-host.scss\"],\n})\n\nexport class ListItemComponent extends BaseAngular implements AfterViewInit {\n  @Input() element: any;\n  @Input() model!: Action;\n  @Input() listModel!: ListModel;\n\n  get elementId() {\n    return (this.model as IAction)?.elementId;\n  }\n\n  get ariaSelected(): boolean | string {\n    return this.listModel.isItemSelected(this.model) || \"\";\n  }\n  get class(): string {\n    return this.listModel.getItemClass(this.model);\n  }\n  get paddingLeft(): string {\n    return this.listModel.getItemIndent(this.model);\n  }\n  click(event: any): void {\n    this.listModel.onItemClick(this.model);\n    event.stopPropagation();\n  }\n  pointerdown(event: any): void {\n    this.listModel.onPointerDown(event, this.model);\n  }\n  get itemComponent(): string {\n    return this.model.component || this.listModel.itemComponent;\n  }\n\n  getModel() {\n    return this.model;\n  }\n\n  ngAfterViewInit(): void {\n    this.listModel.onLastItemRended(this.model);\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-list-item\", ListItemComponent);","<ng-template #template>\n  <li role=\"option\" [key2click]=\"{ processEsc: false, disableTabStop: model.disableTabStop }\" [visible]=\"listModel.isItemVisible(model)\" [class]=\"class\" [attr.id]=\"elementId\" [attr.aria-selected]=\"ariaSelected ? 'true' : 'false'\" (click)=\"click($event)\" (pointerdown)=\"pointerdown($event)\">\n    <ng-container *ngIf=\"model.needSeparator\">\n    <div [class]=\"listModel.cssClasses.itemSeparator\"></div>\n    </ng-container>\n    <div [class]=\"listModel.cssClasses.itemBody\" [style.paddingInlineStart]=\"paddingLeft\" [attr.title]=\"model.locTitle.calculatedText\"\n    (mouseover)=\"listModel.onItemHover(model)\"\n    (mouseleave)=\"listModel.onItemLeave(model)\">\n    <ng-template [component]=\"{ name: itemComponent, data: { model: model, listModel: listModel } }\"></ng-template>\n    </div>\n  </li>\n</ng-template>","import { AfterViewInit, Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { Action } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-list, '[sv-ng-list]'\",\n  templateUrl: \"./list.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class ListComponent extends BaseAngular implements AfterViewInit {\n  @Input() model: any;\n  @ViewChild(\"listContainerElement\") listContainerElement!: ElementRef<HTMLDivElement>;\n\n  trackItemBy = (_: any, item: Action) => {\n    return item.id;\n  }\n  getModel() {\n    return this.model;\n  }\n  onGoToItems(event: Event): void {\n    this.model.goToItems(event);\n  }\n  onMouseDown(event: Event): void {\n    event.preventDefault();\n  }\n  onKeyDown(event: Event): void {\n    this.model.onKeyDown(event);\n  }\n  onMouseMove(event: Event): void {\n    this.model.onMouseMove(event);\n  }\n  protected override getPropertiesToUpdateSync(): string[] {\n    return [\"renderElements\"];\n  }\n  ngAfterViewInit(): void {\n    if (!!this.listContainerElement?.nativeElement) {\n      this.model.initListContainerHtmlElement(this.listContainerElement.nativeElement);\n    }\n  }\n  override ngOnDestroy(): void {\n    this.model.initListContainerHtmlElement(undefined as any);\n    super.ngOnDestroy();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-list\", ListComponent);","<ng-template #template>\n    <div [class]=\"model.cssClasses.root\" #listContainerElement>\n        <div *ngIf=\"model.showFilter\" [class]=\"model.cssClasses.filter\">\n            <div [class]=\"model.cssClasses.filterIcon\">\n                <svg [iconName]=\"'icon-search'\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n            </div>\n            <input type=\"text\" [class]=\"model.cssClasses.filterInput\" [(ngModel)]=\"model.filterString\"\n                [attr.aria-label]=\"model.filterStringPlaceholder || ''\"\n                [attr.placeholder]=\"model.filterStringPlaceholder || ''\" \n                (keyup)=\"onGoToItems($event)\" />\n                <button *ngIf=\"model.showSearchClearButton && !!model.filterString\" (click)=\"model.onClickSearchClearButton($event)\" [class]=\"model.cssClasses.searchClearButtonIcon\">\n                    <svg [iconName]=\"'icon-searchclear'\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n                </button>\n        </div>\n        <div [class]=\"model.cssClasses.emptyContainer\" [visible]=\"model.isEmpty\">\n            <div [class]=\"model.cssClasses.emptyText\" [attr.aria-label]=\"model.emptyMessage || ''\">{{ model.emptyMessage }}</div>\n        </div>\n        <ul *ngIf=\"model.renderElements\" [class]=\"model.getListClass()\" role=\"listbox\" [attr.id]=\"model.elementId\" [visible]=\"!model.isEmpty\" (mousedown)=\"onMouseDown($event)\" (keydown)=\"onKeyDown($event)\" (mousemove)=\"onMouseMove($event)\">\n            <sv-ng-list-item *ngFor=\"let item of model.renderedActions; trackBy: trackItemBy\" [listModel]=\"model\" [model]=\"item\"></sv-ng-list-item>\n            <!--ko foreach: model.renderedActions -->\n            <!-- ko component: { name: 'sv-list-item', params: { item: $data, model: $parent.model } } -->\n            <!-- /ko -->\n            <!-- /ko -->\n        </ul>\n    </div>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { ListModel, Action } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-list-item-content, '[sv-ng-list-item-content]'\",\n  templateUrl: \"./list-item-content.component.html\",\n  styleUrls: [\"../../hide-host.scss\"],\n})\n\nexport class ListItemContentComponent extends BaseAngular {\n  @Input() element: any;\n  @Input() model!: Action;\n  @Input() listModel!: ListModel;\n\n  getModel() {\n    return this.model;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-list-item-content\", ListItemContentComponent);","<ng-template #template>\n<svg *ngIf=\"model.iconName\" [class]=\"listModel.cssClasses.itemIcon\" [iconName]=\"model.iconName\" [size]=\"model.iconSize\"\n  sv-ng-svg-icon></svg>\n<sv-ng-string [model]=\"model.locTitle\"></sv-ng-string>\n<svg *ngIf=\"model.markerIconName\" [class]=\"model.cssClasses.itemMarkerIcon\" [iconName]=\"model.markerIconName\" [size]=\"model.markerIconSize\"\n  sv-ng-svg-icon></svg>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { ListModel, Action } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-list-item-group, '[sv-ng-list-item-group]'\",\n  templateUrl: \"./list-item-group.component.html\",\n  styleUrls: [\"../../hide-host.scss\"],\n})\n\nexport class ListItemGroupComponent extends BaseAngular {\n  @Input() element: any;\n  @Input() model!: Action;\n  @Input() listModel!: ListModel;\n\n  getModel() {\n    return this.model;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-list-item-group\", ListItemGroupComponent);","<ng-template #template>\n  <sv-ng-list-item-content [model]=\"model\" [listModel]=\"listModel\"></sv-ng-list-item-content>\n  <sv-ng-popup [popupModel]=\"model.popupModel\"></sv-ng-popup>\n</ng-template>","import { AfterViewInit, Component, Input } from \"@angular/core\";\nimport { ListModel, Action, QuestionRatingModel, RenderedRatingItem } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-rating-item\",\n  templateUrl: \"./rating-item.component.html\",\n  styleUrls: [\"../../hide-host.scss\"],\n})\n\nexport class RatingItemComponent extends BaseAngular {\n  @Input() element: any;\n  @Input() model!: QuestionRatingModel;\n  @Input() item!: RenderedRatingItem;\n  @Input() index!: number;\n\n  onClick(event: any): void {\n    this.model.setValueFromClick(event.target.value);\n    event.stopPropagation();\n  }\n\n  getModel() {\n    return this.item;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-rating-item\", RatingItemComponent);","<ng-template #template>\n  <label [class]=\"model.getItemClassByText(item.itemValue, item.text)\" (mousedown)=\"model.onMouseDown()\">\n    <input type=\"radio\"\n      class=\"sv-visuallyhidden\"\n      [attr.name]=\"model.questionName\" [attr.id]=\"model.getInputId(index)\" [value]=\"item.value\" [attr.aria-required]=\"model.ariaRequired\" [attr.aria-label]=\"model.ariaLabel\" [attr.aria-invalid]=\"model.ariaInvalid\" [attr.aria-errormessage]=\"model.ariaErrormessage\"\n      [disabled]=\"model.isDisabledAttr\" [readonly]=\"model.isReadOnlyAttr\" [checked]=\"model.value === item.value\" (click)=\"onClick($event)\"\n      />\n      <span [class]=\"model.cssClasses.itemText\" [attr.data-text]=\"item.text\" [model]=\"item.locText\" sv-ng-string></span>\n  </label>\n</ng-template>","import { AfterViewInit, Component, Input } from \"@angular/core\";\nimport { ListModel, Action, QuestionRatingModel, RenderedRatingItem } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-rating-item-star\",\n  templateUrl: \"./rating-item-star.component.html\",\n  styleUrls: [\"../../hide-host.scss\"],\n})\n\nexport class RatingItemStarComponent extends BaseAngular<RenderedRatingItem> {\n  @Input() element: any;\n  @Input() model!: QuestionRatingModel;\n  @Input() item!: RenderedRatingItem;\n  @Input() index!: number;\n\n  onClick(event: any): void {\n    this.model.setValueFromClick(event.target.value);\n    event.stopPropagation();\n  }\n\n  getModel() {\n    return this.item;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-rating-item-star\", RatingItemStarComponent);","<ng-template #template>\n  <label [class]=\"model.getItemClass(item.itemValue, item.highlight)\" (mouseover)=\"model.onItemMouseIn(item)\" (mouseout)=\"model.onItemMouseOut(item)\" (mousedown)=\"model.onMouseDown()\">\n    <input type=\"radio\"\n      class=\"sv-visuallyhidden\"\n      [attr.name]=\"model.questionName\" [attr.id]=\"model.getInputId(index)\" [value]=\"item.value\" [attr.aria-required]=\"model.ariaRequired\" [attr.aria-label]=\"model.ariaLabel\" [attr.aria-invalid]=\"model.ariaInvalid\" [attr.aria-errormessage]=\"model.ariaErrormessage\"\n      [disabled]=\"model.isDisabledAttr\" [readonly]=\"model.isReadOnlyAttr\" [checked]=\"model.value === item.value\" (click)=\"onClick($event)\"\n      />\n      <svg [iconName]=\"model.itemStarIcon\" [size]=\"'auto'\" [title]=\"item.text\" [class]=\"'sv-star'\" sv-ng-svg-icon></svg>\n      <svg [iconName]=\"model.itemStarIconAlt\" [size]=\"'auto'\" [title]=\"item.text\" [class]=\"'sv-star-2'\" sv-ng-svg-icon></svg>\n  </label>\n</ng-template>","import { AfterViewInit, Component, Input } from \"@angular/core\";\nimport { ListModel, Action, QuestionRatingModel, RenderedRatingItem } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-rating-item-smiley\",\n  templateUrl: \"./rating-item-smiley.component.html\",\n  styleUrls: [\"../../hide-host.scss\"],\n})\n\nexport class RatingItemSmileyComponent extends BaseAngular<RenderedRatingItem> {\n  @Input() element: any;\n  @Input() model!: QuestionRatingModel;\n  @Input() item!: RenderedRatingItem;\n  @Input() index!: number;\n\n  onClick(event: any): void {\n    this.model.setValueFromClick(event.target.value);\n    event.stopPropagation();\n  }\n\n  getModel() {\n    return this.item;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-rating-item-smiley\", RatingItemSmileyComponent);","<ng-template #template>\n  <label [style]=\"model.getItemStyle(item.itemValue, item.highlight)\" [class]=\"model.getItemClass(item.itemValue, item.highlight)\" (mouseover)=\"model.onItemMouseIn(item)\" (mouseout)=\"model.onItemMouseOut(item)\" (mousedown)=\"model.onMouseDown()\">\n    <input type=\"radio\"\n      class=\"sv-visuallyhidden\"\n      [attr.name]=\"model.questionName\" [attr.id]=\"model.getInputId(index)\" [value]=\"item.value\" [attr.aria-required]=\"model.ariaRequired\" [attr.aria-label]=\"model.ariaLabel\" [attr.aria-invalid]=\"model.ariaInvalid\" [attr.aria-errormessage]=\"model.ariaErrormessage\"\n      [disabled]=\"model.isDisabledAttr\" [readonly]=\"model.isReadOnlyAttr\" [checked]=\"model.value === item.value\" (click)=\"onClick($event)\"\n      />\n      <svg [iconName]=\"model.getItemSmileyIconName(item.itemValue)\" [size]=\"'auto'\" [title]=\"item.text\" sv-ng-svg-icon></svg>\n  </label>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../../../base-angular\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-rating-dropdown-item, '[sv-ng-rating-dropdown-item]'\",\n  templateUrl: \"./rating-dropdown-item.component.html\",\n  styleUrls: [\"../../../hide-host.scss\"],\n})\n\nexport class RatingDropdownItemComponent extends BaseAngular {\n  @Input() element: any;\n  @Input() model!: any;\n\n  getModel() {\n    return this.model;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-rating-dropdown-item\", RatingDropdownItemComponent);","<ng-template #template>\n  <div class=\"sd-rating-dropdown-item\">\n    <span class=\"sd-rating-dropdown-item_text\">{{model.title}}</span>\n    <ng-container *ngIf=\"!!model.description\">\n    <div class=\"sd-rating-dropdown-item_description\">\n      <sv-ng-string [model]=\"model.description\"></sv-ng-string>\n    </div>\n    </ng-container>\n  </div>\n</ng-template>","\nimport { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\nimport { RendererFactory } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-rating-dropdown-question\",\n  templateUrl: \"./rating-dropdown.component.html\"\n})\nexport class RatingDropdownComponent {\n  @Input() model: any;\n}\n\nAngularComponentFactory.Instance.registerComponent(\"rating-dropdown-question\", RatingDropdownComponent);\nRendererFactory.Instance.registerRenderer(\n  \"rating\",\n  \"dropdown\",\n  \"rating-dropdown-question\"\n);\n","<div [class]=\"model.cssClasses.rootDropdown\">\n    <sv-ng-dropdown [model]=\"model\"></sv-ng-dropdown>\n</div>","\nimport { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\nimport { RendererFactory } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-boolean-checkbox-question\",\n  templateUrl: \"./boolean-checkbox.component.html\"\n})\nexport class BooleanCheckboxComponent {\n  @Input() model: any;\n}\n\nAngularComponentFactory.Instance.registerComponent(\"boolean-checkbox-question\", BooleanCheckboxComponent);\nRendererFactory.Instance.registerRenderer(\n  \"boolean\",\n  \"checkbox\",\n  \"boolean-checkbox-question\"\n);\n","<div [class]=\"model.cssClasses.rootCheckbox\">\n  <div [class]=\"model.getCheckboxItemCss()\">\n    <label [class]=\"model.cssClasses.checkboxLabel\">\n      <input\n        type=\"checkbox\"\n        [value]=\"model.booleanValue\" [class]=\"model.cssClasses.controlCheckbox\" \n        [attr.name]=\"model.name\" [id]=\"model.inputId\" [attr.aria-required]=\"model.ariaRequired\" [attr.aria-label]=\"model.ariaLabel\"\n        [attr.aria-invalid]=\"model.ariaInvalid\" [attr.aria-errormessage]=\"model.ariaErrormessage\" [(ngModel)]=\"model.booleanValue\" [value]=\"model.booleanValue\"\n        [disabled]=\"model.isDisabledAttr\" [readonly]=\"model.isReadOnlyAttr\" [indeterminate]=\"model.isIndeterminate\"\n      />\n      <span [class]=\"model.cssClasses.checkboxMaterialDecorator\">\n        <svg *ngIf=\"!!model.svgIcon\" [class]=\"model.cssClasses.checkboxItemDecorator\">\n          <use [attr.xlink:href]=\"model.svgIcon\"></use>\n        </svg>\n        <span class=\"check\"></span>\n      </span>\n      <span *ngIf=\"model.isLabelRendered\" [class]=\"model.cssClasses.checkboxControlLabel\" [id]=\"model.labelRenderedAriaID\">\n        <sv-ng-element-title-actions [element]=\"model\"></sv-ng-element-title-actions>\n      </span>\n    </label>\n    <div *ngIf=\"model.canRenderLabelDescription\" [class]=\"model.cssDescription\" [attr.id]=\"model.ariaDescriptionId\" [model]=\"model.locDescription\" sv-ng-string></div>\n  </div>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { LocalizableString, QuestionBooleanModel } from \"survey-core\";\n@Component({\n  selector: \"sv-ng-boolean-radio-item\",\n  templateUrl: \"boolean-radio-item.component.html\",\n})\nexport class BooleanRadioItemComponent {\n  @Input() question!: QuestionBooleanModel;\n  @Input() value!: boolean;\n  @Input() locText!: LocalizableString;\n  constructor() {\n\n  }\n}\n","<div role=\"presentation\" [class]=\"question.getRadioItemClass(question.cssClasses, value)\">\n  <label [class]=\"question.cssClasses.radioLabel\">\n    <input\n      type=\"radio\"\n      [attr.name]=\"question.name\" [attr.aria-errormessage]=\"question.ariaErrormessage\" [value]=\"value\" [(ngModel)]=\"question.booleanValue\"\n      [disabled]=\"question.isDisabledAttr\" [readonly]=\"question.isReadOnlyAttr\" [class]=\"question.cssClasses.itemRadioControl || ''\"\n    />\n    <span *ngIf=\"question.cssClasses.materialRadioDecorator\" [class]=\"question.cssClasses.materialRadioDecorator\">\n      <svg\n        *ngIf=\"question.itemSvgIcon\"\n        [class]=\"question.cssClasses.itemRadioDecorator\"\n      >\n        <use [attr.xlink:href]=\"question.itemSvgIcon\"></use>\n      </svg>\n    </span>\n    <span [class]=\"question.cssClasses.radioControlLabel\" [model]=\"locText\" sv-ng-string>\n    </span>\n  </label>\n</div>\n","\nimport { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\nimport { QuestionBooleanModel, RendererFactory } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-boolean-radio-question\",\n  templateUrl: \"./boolean-radio.component.html\"\n})\nexport class BooleanRadioComponent {\n  @Input() model!: QuestionBooleanModel;\n}\n\nAngularComponentFactory.Instance.registerComponent(\"boolean-radio-question\", BooleanRadioComponent);\nRendererFactory.Instance.registerRenderer(\n  \"boolean\",\n  \"radio\",\n  \"boolean-radio-question\"\n);\n","<div [class]=\"model.cssClasses.rootRadio\">\n  <fieldset role=\"presentation\" [class]=\"model.cssClasses.radioFieldset\">\n    <sv-ng-boolean-radio-item *ngIf=\"model.swapOrder\" [value]=\"true\" [locText]=\"model.locLabelTrue\" [question]=\"model\" ></sv-ng-boolean-radio-item>\n    <sv-ng-boolean-radio-item  [value]=\"false\" [locText]=\"model.locLabelFalse\" [question]=\"model\" ></sv-ng-boolean-radio-item>\n    <sv-ng-boolean-radio-item *ngIf=\"!model.swapOrder\" [value]=\"true\" [locText]=\"model.locLabelTrue\" [question]=\"model\" ></sv-ng-boolean-radio-item>\n  </fieldset>\n</div>\n","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\nimport { SurveyProgressModel } from \"survey-core\";\nimport { EmbeddedViewContentComponent } from \"../../../embedded-view-content.component\";\n\n@Component({\n  selector: \"sv-ng-progress-default\",\n  templateUrl: \"./progress.component.html\"\n})\nexport class ProgressDefaultComponent extends EmbeddedViewContentComponent {\n  @Input() container?: string;\n  @Input() model: any;\n  getProgressTextInBarCss(css: any): string {\n    return SurveyProgressModel.getProgressTextInBarCss(css);\n  }\n  getProgressTextUnderBarCss(css: any): string {\n    return SurveyProgressModel.getProgressTextUnderBarCss(css);\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-progress\", ProgressDefaultComponent);\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-pages\", ProgressDefaultComponent);\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-questions\", ProgressDefaultComponent);\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-correctquestions\", ProgressDefaultComponent);\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-requiredquestions\", ProgressDefaultComponent);","<ng-template #template>\n  <div [class]=\"model.getProgressCssClasses(container)\">\n    <div [class]=\"model.css.progressBar\" [style.width]=\"model.progressValue + '%'\"\n        role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\" aria-label=\"progress\">\n        <span [class]=\"getProgressTextInBarCss(model.css)\">\n          {{ model.progressText }}\n        </span>\n    </div>\n    <span [class]=\"getProgressTextUnderBarCss(model.css)\"> {{  model.progressText }} </span>\n  </div>\n</ng-template>","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewChild } from \"@angular/core\";\nimport { SurveyModel, ProgressButtons, ProgressButtonsResponsivityManager, IProgressButtonsViewModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-progress-buttons\",\n  templateUrl: \"./progress.component.html\"\n})\nexport class ProgressButtonsComponent implements OnDestroy, AfterViewInit, OnChanges, OnInit, IProgressButtonsViewModel {\n  @Input() model!: ProgressButtons;\n  @Input() survey!: SurveyModel;\n  @Input() container!: string;\n  @ViewChild(\"progressButtonsListContainer\") progressButtonsListContainer!: ElementRef<HTMLDivElement>;\n  public hasScroller: boolean = false;\n  public canShowHeader: boolean = false;\n  public canShowFooter: boolean = false;\n  public canShowItemTitles: boolean = true;\n  private respManager?: ProgressButtonsResponsivityManager;\n  constructor(private changeDetectorRef: ChangeDetectorRef) {\n  }\n  onResize(canShowItemTitles: boolean): void {\n    this.canShowItemTitles = canShowItemTitles;\n    this.canShowHeader = !this.canShowItemTitles;\n    this.changeDetectorRef.detectChanges();\n  }\n  onUpdateScroller(hasScroller: boolean): void {\n    this.hasScroller = hasScroller;\n    this.changeDetectorRef.detectChanges();\n  }\n  onUpdateSettings(): void {\n    this.canShowItemTitles = this.model.showItemTitles;\n    this.canShowFooter = !this.model.showItemTitles;\n    this.changeDetectorRef.detectChanges();\n  }\n  ngOnInit(): void {\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n  }\n  public clickScrollButton(\n    isLeftScroll: boolean\n  ): void {\n    if (this.progressButtonsListContainer) {\n      this.progressButtonsListContainer.nativeElement.scrollLeft += (isLeftScroll ? -1 : 1) * 70;\n    }\n  }\n  public ngAfterViewInit(): void {\n    if (!!this.progressButtonsListContainer?.nativeElement) {\n      const element = this.progressButtonsListContainer.nativeElement;\n      this.respManager = new ProgressButtonsResponsivityManager(this.model, element, this);\n    }\n  }\n  public ngOnDestroy(): void {\n    this.respManager?.dispose();\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-buttons\", ProgressButtonsComponent);\n","<div [class]=\"model.getRootCss(container)\" [style.maxWidth]=\"model.progressWidth\" role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\" aria-label=\"progress\">\n  <div *ngIf=\"canShowHeader\" [class]=\"survey.css.progressButtonsHeader\">\n    <div [class]=\"survey.css.progressButtonsPageTitle\" [title]=\"model.headerText\">{{ model.headerText }}</div>\n  </div>\n  <div [class]=\"survey.css.progressButtonsContainer\">\n    <div\n      [class]=\"model.getScrollButtonCss(hasScroller, true)\"\n      (click)=\"clickScrollButton(true)\"\n      role=\"button\"\n    ></div>\n    <div\n      [class]=\"survey.css.progressButtonsListContainer\" #progressButtonsListContainer>\n      <ul [class]=\"survey.css.progressButtonsList\">\n        <li\n          *ngFor=\"let page of survey.visiblePages; index as index\"\n          [class]=\"model.getListElementCss(index)\"\n          (click)=\"model.isListElementClickable(index) ? model.clickListElement(page) : null\"\n          [attr.data-page-number]=\"model.getItemNumber(page)\">\n          <div [class]=\"survey.css.progressButtonsConnector\"></div>\n          <div *ngIf=\"canShowItemTitles\"\n            [class]=\"survey.css.progressButtonsPageTitle\"\n            [title]=\"page.renderedNavigationTitle\"\n          >\n            <sv-ng-string [model]=\"page.locNavigationTitle\"></sv-ng-string>\n          </div>\n          <div *ngIf=\"canShowItemTitles\"\n            [class]=\"survey.css.progressButtonsPageDescription\"\n            [title]=\"page.locNavigationDescription.renderedHtml\"\n          >\n            {{ page.locNavigationDescription.renderedHtml }}\n          </div>\n          <div [class]=\"survey.css.progressButtonsButton\"><div [class]=\"survey.css.progressButtonsButtonBackground\"></div><div [class]=\"survey.css.progressButtonsButtonContent\"></div><span>{{model.getItemNumber(page)}}</span></div>\n        </li>\n      </ul>\n    </div>\n    <div\n      [class]=\"model.getScrollButtonCss(hasScroller, false)\"\n      (click)=\"clickScrollButton(false)\"\n      role=\"button\"\n    ></div>\n  </div>\n  <div *ngIf=\"canShowFooter\" [class]=\"survey.css.progressButtonsFooter\">\n    <div [class]=\"survey.css.progressButtonsPageTitle\" [title]=\"model.footerText\">{{ model.footerText }}</div>\n  </div>\n</div>","import { Component, Input, OnChanges, OnInit, SimpleChanges, ChangeDetectorRef } from \"@angular/core\";\nimport { EmbeddedViewContentComponent } from \"../../../embedded-view-content.component\";\nimport { createTOCListModel, getTocRootCss, ListModel, SurveyModel, TOCModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\n\n@Component({\n  selector: \"sv-navigation-toc, sv-ng-navigation-toc\",\n  templateUrl: \"./progress.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class ProgressTocComponent extends EmbeddedViewContentComponent implements OnChanges, OnInit {\n  @Input() model!: TOCModel;\n  override ngOnInit(): void {\n    super.ngOnInit();\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-navigation-toc\", ProgressTocComponent);\n","<ng-template #template>\n  <div [class]=\"model.containerCss\">\n    <sv-ng-list *ngIf=\"!model.isMobile\" [model]=\"model.listModel\"></sv-ng-list>\n    <div *ngIf=\"model.isMobile\" (click)=\"model.togglePopup()\" data-bind=\"key2click\">\n        <svg [iconName]=\"model.icon\" [size]=\"24\" sv-ng-svg-icon></svg>\n        <sv-ng-popup [popupModel]=\"model.popupModel\"></sv-ng-popup>\n    </div>\n  </div>  \n</ng-template>","import { AfterViewInit, Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { PanelModel } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\nimport { AngularComponentFactory } from \"./component-factory\";\n@Component({\n  selector: \"sv-ng-panel, '[sv-ng-panel]'\",\n  templateUrl: \"./panel.component.html\",\n})\nexport class PanelComponent extends BaseAngular<PanelModel> implements AfterViewInit {\n  @Input() model!: PanelModel;\n  @ViewChild(\"panelContainer\", { static: false, read: ElementRef }) panelContainerRef!: ElementRef<HTMLDivElement>;\n  protected getModel(): PanelModel {\n    return this.model;\n  }\n  ngAfterViewInit(): void {\n    if (!!this.panelContainerRef?.nativeElement) {\n      this.model.afterRender(this.panelContainerRef.nativeElement);\n    }\n  }\n  trackRowBy = (_: any, row: any) => {\n    return row.id;\n  }\n  public get canRender() {\n    return this.model && this.model.survey && this.model.getIsContentVisible();\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"panel\", PanelComponent);","<ng-template #template>\n  <div *ngIf=\"canRender\" [attr.id]=\"model.id\" [class]=\"model.getContainerCss()\" (focusin)=\"model.focusIn()\" #panelContainer>\n    <div *ngIf=\"model.showErrorsAbovePanel && model.hasVisibleErrors\" [element]=\"model\" sv-ng-errors></div>\n    <div *ngIf=\"model.hasDescription || model.hasTitle\" [element]=\"model\" sv-ng-element-header></div>\n    <div *ngIf=\"!model.showErrorsAbovePanel && model.hasVisibleErrors\" [element]=\"model\" sv-ng-errors></div>\n    <div *ngIf=\"model.renderedIsExpanded\" [style.paddingLeft]=\"model.innerPaddingLeft\" [class]=\"model.cssClasses.panel.content\" [attr.id]=\"model.contentId\">\n      <ng-container *ngFor=\"let row of model.visibleRows; trackBy: trackRowBy\">\n        <ng-template [component]=\"{ name: $any(model.survey).getRowWrapperComponentName(row), data: { componentData: $any(model.survey).getRowWrapperComponentData(row) } }\">\n          <sv-ng-row [row]=\"row\"></sv-ng-row>\n        </ng-template>\n      </ng-container>\n      <sv-ng-action-bar [model]=\"model.getFooterToolbar()\"></sv-ng-action-bar>\n    </div>\n  </div>\n</ng-template>","import { Action } from \"survey-core\";\nimport { Base } from \"survey-core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { Component, Input } from \"@angular/core\";\n\n@Component({\n  templateUrl: \"./survey-nav-btn.component.html\",\n  selector: \"sv-ng-nav-btn\",\n  styles: [\":host { display: contents; }\"]\n})\nexport class SurveyNavigationButton {\n  @Input() public model!: Action;\n  getModel(): Action {\n    return this.model;\n  }\n  buttonMouseDown(): Base {\n    return this.model.data && this.model.data.mouseDown();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-nav-btn\", SurveyNavigationButton);\n","<input *ngIf=\"model.visible\" type=\"button\" [value]=\"model.title\" [class]=\"model.innerCss\" (mousedown)=\"buttonMouseDown()\" (click)=\"model.action()\" [disabled]=\"model.disabled\" [attr.title]=\"model.getTooltip()\"/>","import { Component, Input } from \"@angular/core\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\nimport { QuestionFileModel } from \"survey-core\";\n\n@Component({\n  templateUrl: \"./file-item.component.html\",\n  selector: \"sv-ng-file-item\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class FileItemComponent extends EmbeddedViewContentComponent {\n    @Input() item!: any;\n    @Input() question!: QuestionFileModel;\n}","<ng-template #template>\n    <span [class]=\"question.cssClasses.previewItem\" (click)=\"question.doDownloadFileFromContainer($event)\">\n        <div *ngIf=\"item.name && question.cssClasses.fileSign\" [class]=\"question.cssClasses.fileSign\">\n            <a (click)=\"question.doDownloadFile($event, item)\" [attr.href]=\"item.content | safeUrl\"\n                [attr.title]=\"item.name\" [attr.download]=\"item.name\" [style.width]=\"question.imageWidth\">{{\n                item.name\n                }}</a>\n        </div>\n        <div [class]=\"question.getImageWrapperCss(item)\">\n            <img *ngIf=\"question.canPreviewImage(item)\" [attr.src]=\"item.content | safeUrl\"\n                [style.height]=\"question.imageHeight\" [style.width]=\"question.imageWidth\" alt=\"File preview\" />\n            <svg *ngIf=\"question.defaultImage(item)\" [iconName]=\"question.cssClasses.defaultImageIconId\"\n                [partCss]=\"question.cssClasses.defaultImage\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n            <div *ngIf=\"item.name && !question.isReadOnly\" [class]=\"question.getRemoveButtonCss()\"\n                (click)=\"question.doRemoveFile(item, $event)\">\n                <span [class]=\"question.cssClasses.removeFile\">{{ question.removeFileCaption }}</span>\n                <svg *ngIf=\"question.cssClasses.removeFileSvgIconId\" [title]=\"question.removeFileCaption\"\n                    [partCss]=\"question.cssClasses.removeFileSvg\" [iconName]=\"question.cssClasses.removeFileSvgIconId\"\n                    [size]=\"'auto'\" sv-ng-svg-icon></svg>\n            </div>\n        </div>\n        <div *ngIf=\"item.name && question.cssClasses.fileSignBottom\" [class]=\"question.cssClasses.fileSignBottom\">\n            <a (click)=\"question.doDownloadFile($event, item)\" [attr.href]=\"item.content | safeUrl\"\n                [attr.title]=\"item.name\" [attr.download]=\"item.name\" [style.width]=\"question.imageWidth\">{{\n                item.name\n                }}</a>\n        </div>\n    </span>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { QuestionFileModel, QuestionFilePage } from \"survey-core\";\n\n@Component({\n    templateUrl: \"./file-page.component.html\",\n    selector: \"sv-ng-file-page\",\n    styleUrls: [\"../../hide-host.scss\"]\n})\nexport class FilePageComponent extends BaseAngular<QuestionFilePage> {\n    @Input() page!: QuestionFilePage;\n    @Input() question!: QuestionFileModel;\n    protected override getModel() {\n        return this.page;\n    }\n}","<ng-template #template>\n    <div [class]=\"page.css\" [attr.id]=\"page.id\">\n        <ng-container *ngFor=\"let item of page.items\">\n            <sv-ng-file-item [item]=\"item\" [question]=\"question\"></sv-ng-file-item>\n        </ng-container>\n    </div>\n</ng-template>","import { Action, QuestionFileModel, QuestionFilePage } from \"survey-core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { Component, Input } from \"@angular/core\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\n@Component({\n  selector: \"sv-ng-file-preview\",\n  templateUrl: \"./file-preview.component.html\"\n})\nexport class FilePreviewComponent extends EmbeddedViewContentComponent {\n    @Input() question!: QuestionFileModel;\n    trackFilesFn: (index: number) => string = (index: number): string => {\n      return this.question.inputId + \"_\" + index;\n    }\n    trackPagesFn(_: number, page: QuestionFilePage): string {\n      return page.id;\n    }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-file-preview\", FilePreviewComponent);","<ng-template #template>\n    <ng-container *ngIf=\"question.showPreviewContainer\">\n        <div [class]=\"question.cssClasses.fileList || undefined\">\n            <ng-container *ngIf=\"question.supportFileNavigator\">\n                <sv-ng-file-page *ngFor=\"let page of question.renderedPages; trackBy: trackPagesFn\" [page]=\"page\" [question]=\"question\"></sv-ng-file-page>\n            </ng-container>\n            <ng-container *ngIf=\"!question.supportFileNavigator\">\n                <sv-ng-file-item *ngFor=\"let item of question.previewValue\" [item]=\"item\" [question]=\"question\"></sv-ng-file-item>\n            </ng-container>\n        </div>\n    </ng-container>\n</ng-template>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionMatrixModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-matrix-question\",\n  templateUrl: \"./matrix.component.html\",\n  styleUrls: [\"../hide-host.scss\"]\n})\nexport class MatrixQuestionComponent extends QuestionAngular<QuestionMatrixModel> {\n  override ngOnInit() {\n    this.model.visibleRowsChangedCallback = () => {\n      this.detectChanges();\n    };\n    super.ngOnInit();\n  }\n  public onCellChanged(row: any, column: any): void {\n    row.value = column.value;\n    this.detectChanges();\n  }\n  trackRowByFn(i: number, row: any): string {\n    return \"column-\" + row.name + \"-\" + i;\n  }\n  trackColumnByFn(i: number, column: any): string {\n    return \"column-\" + column.value + \"-\" + i;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"matrix-question\", MatrixQuestionComponent);","<ng-template #template>\n  <div [class]=\"model.cssClasses.tableWrapper\" #contentElement>\n    <fieldset>\n      <legend class=\"sv-hidden\">{{model.locTitle.renderedHtml}}</legend>\n      <table [class]=\"model.getTableCss()\">\n        <thead *ngIf=\"model.showHeader\">\n          <tr>\n            <td *ngIf=\"model.hasRows\"></td>\n            <th\n              *ngFor=\"let column of model.visibleColumns\" [style]=\"{ minWidth: model.columnMinWidth, width: model.columnMinWidth }\" [class]=\"model.cssClasses.headerCell\">\n              <ng-template [component]=\"{ name: model.getColumnHeaderWrapperComponentName(column), data: { componentData: model.getColumnHeaderWrapperComponentData(column) } }\">\n                <sv-ng-string [model]=\"column.locText\"></sv-ng-string>\n              </ng-template>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let row of model.visibleRows; trackBy: trackRowByFn \" [class]=\"row.rowClasses || undefined\">\n           <td [class]=\"row.rowTextClasses\" [style]=\"{ minWidth: model.rowTitleWidth, width: model.rowTitleWidth }\" *ngIf=\"model.hasRows\">\n              <ng-template [component]=\"{ name: model.getRowHeaderWrapperComponentName($any(row)), data: { componentData: model.getRowHeaderWrapperComponentData($any(row)) } }\">\n                <sv-ng-string [model]=\"row.locText\"></sv-ng-string>\n              </ng-template>\n            </td>\n            <ng-container *ngIf=\"model.hasCellText\">\n              <td *ngFor=\"let column of model.visibleColumns\"\n                [class]=\"model.getItemClass(row, column)\"\n                (click)=\"onCellChanged(row, column)\" [model]=\"model.getCellDisplayLocText(row.name, column)\" sv-ng-string>\n              </td>\n            </ng-container>\n            <ng-container *ngIf=\"!model.hasCellText\">\n              <td\n              *ngFor=\"let column of model.visibleColumns; index as columnIndex; trackBy: trackColumnByFn\"\n              [attr.data-responsive-title]=\"column.locText.renderedHtml\"\n              [class]=\"model.cssClasses.cell\">\n                <ng-template [component]=\"{ name: model.cellComponent, data: { cellChangedOwner: this, question: model, row: row, column: column, columnIndex: columnIndex } }\"></ng-template>\n              </td>\n            </ng-container>\n          </tr>\n        </tbody>\n      </table>\n    </fieldset>\n  </div>\n</ng-template>","import { Action, QuestionFileModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { Component, Input } from \"@angular/core\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\n@Component({\n  selector: \"sv-ng-choose-file-btn\",\n  templateUrl: \"./choose-file.component.html\"\n})\nexport class ChooseFileBtn extends EmbeddedViewContentComponent {\n    @Input() data: any;\n    @Input() model!: Action;\n    public get question(): QuestionFileModel {\n      return (this.model && this.model.data.question) || this.data.question;\n    }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-file-choose-btn\", ChooseFileBtn);","<ng-template #template>\n    <label tabindex=\"0\" [class]=\"question.getChooseFileCss()\"\n        [attr.for]=\"question.inputId\" [attr.aria-label]=\"question.chooseButtonText\" [key2click]\n        (click)=\"question.chooseFile($event)\">\n        <svg *ngIf=\"question.cssClasses.chooseFileIconId\" [title]=\"question.chooseButtonText\"\n            [iconName]=\"question.cssClasses.chooseFileIconId\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n        <span>{{ question.chooseButtonText }}</span>\n</label>\n</ng-template>","import { Component } from \"@angular/core\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\n\n@Component({\n  templateUrl: \"./loading-indicator.component.html\",\n  selector: \"sv-ng-loading-indicator\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class LoadingIndicatorComponent extends EmbeddedViewContentComponent {\n\n}","<ng-template #template>\n    <div class=\"sd-loading-indicator\">\n        <svg [iconName]=\"'icon-loading'\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n    </div>\n</ng-template>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionFileModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n@Component({\n  selector: \"sv-ng-file-question\",\n  templateUrl: \"./file.component.html\",\n  styleUrls: []\n})\nexport class FileQuestionComponent extends QuestionAngular<QuestionFileModel> {}\n\nAngularComponentFactory.Instance.registerComponent(\"file-question\", FileQuestionComponent);","<div [class]=\"model.fileRootCss\" #contentElement>\n  <input [class]=\"model.cssClasses.fileInput\" *ngIf=\"!model.isReadOnlyAttr && !model.isDisabledAttr && model.hasFileUI\" tabindex=\"-1\" type=\"file\"\n    [attr.id]=\"model.inputId\" [attr.aria-required]=\"model.ariaRequired\"\n    [attr.aria-label]=\"model.ariaLabel\" [attr.aria-invalid]=\"model.ariaInvalid\"\n    [attr.aria-errormessage]=\"model.ariaErrormessage\" [attr.multiple]=\"model.multipleRendered\"\n    [attr.title]=\"model.inputTitle\" [attr.accept]=\"model.acceptedTypes\" [attr.capture]=\"model.renderCapture\" />\n  <input *ngIf=\"model.isReadOnlyAttr\" type=\"file\" readonly [class]=\"model.getReadOnlyFileCss()\" [attr.id]=\"model.inputId\"\n    [attr.multiple]=\"model.multipleRendered\" [attr.placeholder]=\"model.title\" style=\"color: transparent\" />\n  <input *ngIf=\"model.isDisabledAttr\" type=\"file\" disabled [class]=\"model.getReadOnlyFileCss()\" [attr.id]=\"model.inputId\"\n    [attr.multiple]=\"model.multipleRendered\" [attr.placeholder]=\"model.title\" style=\"color: transparent\" />\n  <div [class]=\"model.cssClasses.dragArea\" (dragenter)=\"model.onDragEnter($event)\" (drop)=\"model.onDrop($event)\"\n    (dragover)=\"model.onDragOver($event)\" (dragleave)=\"model.onDragLeave($event)\">\n    <div [class]=\"model.getFileDecoratorCss()\" *ngIf=\"model.showFileDecorator\">\n      <span [class]=\"model.cssClasses.dragAreaPlaceholder\" [model]=\"model.locRenderedPlaceholder\" sv-ng-string></span>\n      <div [class]=\"model.cssClasses.wrapper\">\n        <sv-ng-choose-file-btn [data]=\"{ question: model }\" *ngIf=\"model.showChooseButton\"></sv-ng-choose-file-btn>\n        <sv-ng-action-bar [model]=\"model.actionsContainer\" *ngIf=\"model.actionsContainerVisible\"></sv-ng-action-bar>\n        <span [class]=\"model.cssClasses.noFileChosen\" *ngIf=\"model.isEmpty()\">{{ model.noFileChosenCaption }}</span>\n      </div>\n    </div>\n    <ng-container *ngIf=\"model.showLoadingIndicator\">\n      <div [class]=\"model.cssClasses.loadingIndicator\">\n        <sv-ng-loading-indicator></sv-ng-loading-indicator>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"model.isPlayingVideo\">\n      <ng-container *ngTemplateOutlet=\"fileVideo\"></ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"model.showRemoveButton\">\n      <ng-container *ngTemplateOutlet=\"fileCleanButton; context: { css: model.showRemoveButton }\"></ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"model.allowShowPreview\">\n      <ng-template [component]=\"{ name: 'sv-file-preview', data: { question: model } }\"></ng-template>\n    </ng-container>\n    <ng-container *ngIf=\"model.showRemoveButtonBottom\">\n      <ng-container *ngTemplateOutlet=\"fileCleanButton; context: { css: model.showRemoveButtonBottom }\"></ng-container>\n    </ng-container>\n    <sv-action-bar *ngIf=\"model.fileNavigatorVisible\" [model]=\"model.fileNavigator\"></sv-action-bar>\n  </div>\n</div>\n<ng-template #fileCleanButton let-css=\"css\">\n  <button type=\"button\" [class]=\"css\" (click)=\"model.doClean()\">\n    <span>{{ model.clearButtonCaption }}</span>\n    <svg *ngIf=\"model.cssClasses.removeButtonIconId\" [iconName]=\"model.cssClasses.removeButtonIconId\" [size]=\"'auto'\"\n      [title]=\"model.clearButtonCaption\" sv-ng-svg-icon></svg>\n  </button>\n</ng-template>\n<ng-template #fileVideo>\n  <div [class]=\"model.cssClasses.videoContainer\">\n    <sv-ng-action [model]=\"model.changeCameraAction\"></sv-ng-action>\n    <sv-ng-action [model]=\"model.closeCameraAction\"></sv-ng-action>\n    <video autoplay playsinline [attr.id]=\"model.videoId\" [class]=\"model.cssClasses.video\"></video>\n    <sv-ng-action [model]=\"model.takePictureAction\"></sv-ng-action>\n  </div>\n</ng-template>","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionCommentModel } from \"survey-core\";\n\n@Component({\n  templateUrl: \"./comment.component.html\",\n  selector: \"sv-ng-question-comment\"\n})\n\nexport class CommentQuestionComponent extends QuestionAngular<QuestionCommentModel> {\n  onChange(event: any) {\n    this.model.value = event.target.value;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"comment-question\", CommentQuestionComponent);","<ng-container *ngIf=\"!model.isReadOnlyRenderDiv()\">\n  <ng-template [component]=\"{ name: 'sv-text-area', data: { model: model.textAreaModel } }\"></ng-template>\n  <sv-ng-character-counter *ngIf=\"model.getMaxLength()\" \n  [counter]=\"model.characterCounter\"\n  [remainingCharacterCounter]=\"model.cssClasses.remainingCharacterCounter\">\n  </sv-ng-character-counter>\n</ng-container>\n<div *ngIf=\"model.isReadOnlyRenderDiv()\" #contentElement>{{ model.value }}</div>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionSignaturePadModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-signature-component\",\n  templateUrl: \"./signature.component.html\"\n  })\nexport class SignaturePadQuestionComponent extends QuestionAngular<QuestionSignaturePadModel> {}\n\nAngularComponentFactory.Instance.registerComponent(\"signaturepad-question\", SignaturePadQuestionComponent);","<div\n[class]=\"model.cssClasses.root\"\n[style.width]=\"model.renderedCanvasWidth\" #contentElement>\n<div [class]=\"model.cssClasses.placeholder\" [visible]=\"model.needShowPlaceholder()\" [model]=\"$any(model).locRenderedPlaceholder\" sv-ng-string></div>\n<div>\n  <img *ngIf=\"!!model.backgroundImage\" [src]=\"model.backgroundImage\" [style.width]=\"model.renderedCanvasWidth\" [class]=\"model.cssClasses.backgroundImage\">\n  <canvas tabindex=\"-1\" [class]=\"model.cssClasses.canvas\" (blur)=\"model.onBlur($event)\"></canvas>\n</div>\n<div [class]=\"model.cssClasses.controls\" *ngIf=\"model.canShowClearButton\">\n  <button\n    type=\"button\"\n    [class]=\"model.cssClasses.clearButton\"\n    [title]=\"model.clearButtonCaption\"\n    (click)=\"model.clearValue(true)\"\n  >\n    <span *ngIf=\"!model.cssClasses.clearButtonIconId\">✖</span>\n    <svg\n      *ngIf=\"model.cssClasses.clearButtonIconId\"\n      [iconName]=\"model.cssClasses.clearButtonIconId\"\n      [size]=\"'auto'\" sv-ng-svg-icon></svg>\n  </button>\n</div>\n<ng-container *ngIf=\"model.showLoadingIndicator\">\n  <div [class]=\"model.cssClasses.loadingIndicator\">\n    <sv-ng-loading-indicator></sv-ng-loading-indicator>\n  </div>\n</ng-container>\n</div>","import { MultipleTextCell, MultipleTextItemModel, QuestionMultipleTextModel, QuestionTextModel } from \"survey-core\";\nimport { Component, DoCheck, Input, OnDestroy } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\n\n@Component({\n  selector: \"'[sv-ng-multipletext-item]'\",\n  templateUrl: \"./mutlipletextitem.component.html\"\n})\nexport class MultipleTextItemComponent extends BaseAngular<QuestionTextModel> implements DoCheck, OnDestroy {\n  @Input() question!: QuestionMultipleTextModel;\n  @Input() model!: MultipleTextCell;\n  protected getModel(): QuestionTextModel {\n    if(!this.model.isErrorsCell) {\n      return this.model.item.editor;\n    }\n    return null as any;\n  }\n  public get item(): MultipleTextItemModel {\n    return this.model.item;\n  }\n  public get editor(): QuestionTextModel {\n    return this.model.item.editor;\n  }\n  override ngDoCheck(): void {\n    super.ngDoCheck();\n    if(this.model.isErrorsCell) {\n      this.editor.registerFunctionOnPropertyValueChanged(\"errors\", () => {\n        this.update();\n      }, \"__ngSubscription\")\n    }\n  }\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    if(this.model.isErrorsCell) {\n      this.editor.unRegisterFunctionOnPropertyValueChanged(\"errors\", \"__ngSubscription\")    \n    }\n  }\n}\n","<ng-container *ngIf=\"!model.isErrorsCell\">\n  <label [class]=\"question.getItemLabelCss(item)\">\n    <span [class]=\"question.getItemTitleCss()\" [style]=\"{ minWidth: question.itemTitleWidth, width: question.itemTitleWidth }\">\n      <span *ngIf=\" item.editor.isRequireTextBeforeTitle || item.editor.isRequireTextOnStart\"\n        [class]=\"question.cssClasses.requiredText\">{{ item.editor.requiredText }}</span>\n      <sv-ng-string [model]=\"item.locTitle\"></sv-ng-string>\n      <span *ngIf=\"item.editor.isRequireTextAfterTitle\">&nbsp;</span>\n      <span *ngIf=\"item.editor.isRequireTextAfterTitle\" [class]=\"question.cssClasses.requiredText\" aria-hidden=\"true\">{{\n        item.editor.requiredText }}</span>\n    </span>\n    <div [class]=\"question.getItemCss()\" (focusin)=\"item.focusIn()\">\n      <sv-ng-text-question [model]=\"item.editor\"></sv-ng-text-question>\n    </div>\n  </label>\n</ng-container>\n<ng-container *ngIf=\"model.isErrorsCell\">\n  <div *ngIf=\"item.editor.hasVisibleErrors\" [element]=\"item.editor\" sv-ng-errors></div>\n</ng-container>","import { MultipleTextCell, MultipleTextItemModel, MutlipleTextRow, QuestionMultipleTextModel, QuestionTextModel } from \"survey-core\";\nimport { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\n\n@Component({\n  selector: \"sv-ng-multipletext-row\",\n  templateUrl: \"./multipletextrow.component.html\",\n  styleUrls: [\"../hide-host.scss\"]\n})\nexport class MultipleTextRowComponent extends BaseAngular<MutlipleTextRow> {\n  @Input() question!: QuestionMultipleTextModel;\n  @Input() model!: MutlipleTextRow;\n  protected getModel(): MutlipleTextRow {\n    return this.model;\n  }\n  trackItemBy (_: number, cell: MultipleTextCell): string {\n    return \"item\" + cell.item.editor.id;\n  }\n}\n","<ng-template #template>\n    <tr [class]=\"question.cssClasses.row\" *ngIf=\"model.isVisible\">\n        <ng-container *ngFor=\"let cell of model.cells; trackBy: trackItemBy\">\n            <td [class]=\"cell.className\" [question]=\"question\" [model]=\"cell\" sv-ng-multipletext-item></td>\n        </ng-container>\n    </tr>\n</ng-template>","import { QuestionAngular } from \"../question\";\nimport { MultipleTextItemModel, QuestionMultipleTextModel } from \"survey-core\";\nimport { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-multipletext-question\",\n  templateUrl: \"./multipletext.component.html\"\n})\nexport class MultipleTextComponent extends QuestionAngular<QuestionMultipleTextModel> {\n  trackRowBy = (index: number): string => {\n    return this.model.inputId + \"rowkey\" + index;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"multipletext-question\", MultipleTextComponent);","<table [class]=\"model.getQuestionRootCss()\" #contentElement>\n  <tbody>\n    <ng-container *ngFor=\"let row of model.getRows(); index as rowIndex; trackBy: trackRowBy\">\n      <sv-ng-multipletext-row [model]=\"row\" [question]=\"model\"></sv-ng-multipletext-row>\n    </ng-container>\n  </tbody>\n</table>","import { Component } from \"@angular/core\";\nimport { ItemValue, QuestionRankingModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { SelectBaseComponent } from \"./selectbase.component\";\n\n@Component({\n  selector: \"sv-ng-ranking-question\",\n  templateUrl: \"./ranking.component.html\",\n})\nexport class RankingQuestionComponent extends SelectBaseComponent<QuestionRankingModel> {\n  public override inputType: string = \"\";\n  override trackItemBy = (index: number, item: ItemValue): string => {\n    return item.value + \"-\" + index + \"-item\";\n  }\n  public override getDefaultComponentName(): string {\n    return \"sv-ng-ranking-item\";\n  }\n  public override getItemValueComponentData(item: ItemValue, index?: number, unrankedItem?: boolean): any {\n    const res = {\n      componentName: this.getDefaultComponentName(),\n      componentData: {\n        question: this.model,\n        model: item,\n        inputType: this.inputType,\n        data: this.model.getItemValueWrapperComponentData(item),\n        index,\n        unrankedItem\n      }\n    };\n    return res;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"ranking-question\", RankingQuestionComponent);","<div *ngIf=\"!model.selectToRankEnabled\" [class]=\"model.rootClass\" #contentElement>\n  <ng-container *ngFor=\"let item of model.renderedRankingChoices; index as index; trackBy: trackItemBy\">\n    <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item, index) }\"></ng-template>\n  </ng-container>\n</div>\n\n<div *ngIf=\"model.selectToRankEnabled\" [class]=\"model.rootClass\" #contentElement>\n  <div [class]='model.getContainerClasses(\"from\")' data-ranking=\"from-container\">\n    <ng-container *ngFor=\"let item of model.renderedUnRankingChoices; index as index; trackBy: trackItemBy\">\n      <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item, index, true) }\"></ng-template>\n    </ng-container>\n\n    <div *ngIf=\"model.renderedUnRankingChoices.length === 0\" [class]=\"model.cssClasses.containerPlaceholder\" [model]=\"$any(model).locSelectToRankEmptyRankedAreaText\" sv-ng-string></div>\n  </div>\n\n  <div [class]=\"model.cssClasses.containersDivider\"></div>\n\n  <div [class]='model.getContainerClasses(\"to\")' data-ranking=\"to-container\">\n    <ng-container *ngFor=\"let item of model.renderedRankingChoices; index as index; trackBy: trackItemBy\">\n      <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item, index) }\"></ng-template>\n    </ng-container>\n\n    <div *ngIf=\"model.renderedRankingChoices.length === 0\" [class]=\"model.cssClasses.containerPlaceholder\" [model]=\"$any(model).locSelectToRankEmptyUnrankedAreaText\" sv-ng-string></div>\n  </div>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\nimport { ItemValue, QuestionRankingModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-ranking-item\",\n  templateUrl: \"./ranking-item.component.html\"\n})\nexport class RankingItemComponent extends BaseAngular<ItemValue> {\n  @Input() question!: QuestionRankingModel;\n  @Input() model!: ItemValue;\n  @Input() index!: number;\n  @Input() unrankedItem!: boolean;\n  protected getModel(): ItemValue {\n    return this.model;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-ng-ranking-item\", RankingItemComponent);","\n\n\n<div [attr.tabindex]=\"question.getItemTabIndex(model)\" [attr.data-sv-drop-target-ranking-item]=\"index\" \n    [class]=\"question.getItemClass(model)\"\n    (keydown)=\"question.handleKeydown($event, model)\"\n    (pointerdown)=\"question.handlePointerDown($event, model, $any($event.currentTarget))\"\n    (pointerup)=\"question.handlePointerUp($event, model, $any($event.currentTarget))\">\n  <div tabindex=\"-1\" style=\"outline: none;\">\n    <div [class]=\"question.cssClasses.itemGhostNode\"></div>\n    <div [class]=\"question.cssClasses.itemContent\">\n      <div [class]=\"question.cssClasses.itemIconContainer\">\n        <svg [class]=\"question.getIconHoverCss()\">\n          <use [attr.xlink:href]=\"question.dragDropSvgIcon\"></use>\n        </svg> \n        <svg [class]=\"question.getIconFocusCss()\">\n          <use [attr.xlink:href]=\"question.arrowsSvgIcon\"></use>\n        </svg> \n      </div>\n\n      <div *ngIf=\"!unrankedItem && question.getNumberByIndex(index); else elseBlock\" [class]=\"question.getItemIndexClasses(model)\">{{ question.getNumberByIndex(index) }}</div>\n      <ng-template #elseBlock><div [class]=\"question.getItemIndexClasses(model)\">\n        <svg>\n          <use [attr.xlink:href]=\"question.dashSvgIcon\"></use>\n        </svg> \n      </div></ng-template>\n\n      <ng-template [component]=\"{ name: question.itemComponent, data: { item: model, cssClasses: question.cssClasses } }\"></ng-template>\n    </div>\n  </div>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { ItemValue } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { EmbeddedViewContentComponent } from \"../embedded-view-content.component\";\n\n@Component({\n  selector: \"sv-ranking-item\",\n  templateUrl: \"./ranking-item-content.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class RankingItemContentComponent extends EmbeddedViewContentComponent {\n  @Input() item!: ItemValue;\n  @Input() cssClasses: any;\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-ranking-item\", RankingItemContentComponent);","<ng-template #template>\n  <div [class]=\"cssClasses.controlLabel\">\n    <sv-ng-string [model]=\"item.locText\"></sv-ng-string>\n  </div>\n</ng-template>\n","import { Component, Input } from \"@angular/core\";\nimport { LocalizableString } from \"survey-core\";\nimport { AngularComponentFactory } from \"./component-factory\";\n\n@Component({\n  selector: \"sv-ng-string-editor\",\n  templateUrl: \"./string-editor.component.html\"\n})\nexport class StringEditorComponent {\n  @Input() model!: LocalizableString;\n\n  onInput = (event: any) => {\n    this.model.text = event.target.innerText;\n  };\n  onClick = (event: any) => {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n}\nAngularComponentFactory.Instance.registerComponent(LocalizableString.editableRenderer, StringEditorComponent);","<span\n  class=\"sv-string-editor\"\n  contenteditable=\"true\"\n  *ngIf=\"model.hasHtml\"\n  [innerHtml]=\"model.renderedHtml\"\n  (blur)=\"onInput($event)\"\n  (click)=\"onClick($event)\"\n></span>\n<span\n  class=\"sv-string-editor\"\n  contenteditable=\"true\"\n  *ngIf=\"!model.hasHtml\"\n  (blur)=\"onInput($event)\"\n  (click)=\"onClick($event)\"\n  >{{ model.renderedHtml }}</span\n>\n","import { Action, QuestionPanelDynamicModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"\",\n  template: \"\"\n})\nexport class PaneldynamicAction {\n  @Input() data: any;\n  @Input() model!: Action;\n  public get question(): QuestionPanelDynamicModel {\n    return (this.model && this.model.data.question) || this.data.question;\n  }\n}\n\n@Component({\n  selector: \"sv-ng-paneldynamic-add-btn\",\n  templateUrl: \"./paneldynamic-add-btn.component.html\"\n})\nexport class PanelDynamicAddBtn extends PaneldynamicAction {\n  addPanelClick() {\n    this.question.addPanelUI();\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-paneldynamic-add-btn\", PanelDynamicAddBtn);","<button type=\"button\" [id]=\"question.addButtonId\" *ngIf=\"question.canAddPanel\" [class]=\"question.getAddButtonCss()\" (click)=\"addPanelClick()\">\n<span [class]=\"question.cssClasses.buttonAddText\"><sv-ng-string [model]=\"question.locPanelAddText\"></sv-ng-string></span>\n</button>","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { PaneldynamicAction } from \"./paneldynamic-add-btn.component\";\n\n@Component({\n  selector: \"sv-ng-paneldynamic-next-btn\",\n  templateUrl: \"./paneldynamic-next-btn.component.html\"\n})\nexport class PanelDynamicNextBtn extends PaneldynamicAction {\n  nextPanelClick() {\n    this.question.goToNextPanel();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-paneldynamic-next-btn\", PanelDynamicNextBtn);\n","<div [attr.title]=\"question.panelNextText\" (click)=\"nextPanelClick()\" [class]=\"question.getNextButtonCss()\">\n  <svg [iconName]=\"question.cssClasses.progressBtnIcon\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n</div>","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { PaneldynamicAction } from \"./paneldynamic-add-btn.component\";\n\n@Component({\n  selector: \"sv-ng-paneldynamic-prev-btn\",\n  templateUrl: \"./paneldynamic-prev-btn.component.html\"\n})\nexport class PanelDynamicPrevBtn extends PaneldynamicAction {\n  prevPanelClick() {\n    this.question.goToPrevPanel();\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-paneldynamic-prev-btn\", PanelDynamicPrevBtn);","<div [attr.title]=\"question.panelPrevText\" (click)=\"prevPanelClick()\" [class]=\"question.getPrevButtonCss()\">\n  <svg [iconName]=\"question.cssClasses.progressBtnIcon\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n</div>\n","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { PaneldynamicAction } from \"./paneldynamic-add-btn.component\";\n\n@Component({\n  selector: \"sv-ng-paneldynamic-remove-btn\",\n  templateUrl: \"./paneldynamic-remove-btn.component.html\"\n})\nexport class PaneldynamicRemoveButtonComponent extends PaneldynamicAction {\n  get panel() {\n    return (this.data ? this.data : this.model.data).panel;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-paneldynamic-remove-btn\", PaneldynamicRemoveButtonComponent);\n","<button type=\"button\" [id]=\"question.getPanelRemoveButtonId(panel)\" (click)=\"question.removePanelUI(panel)\" [class]=\"question.getPanelRemoveButtonCss()\"> \n  <span [class]=\"question.cssClasses.buttonRemoveText\"><sv-ng-string [model]=\"question.locPanelRemoveText\"></sv-ng-string></span>\n  <span [class]=\"question.cssClasses.iconRemove\"></span>\n</button>\n","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { PaneldynamicAction } from \"./paneldynamic-add-btn.component\";\n\n@Component({\n  selector: \"sv-ng-paneldynamic-progress-text\",\n  templateUrl: \"./paneldynamic-progress-text.component.html\"\n})\nexport class PanelDynamicProgressText extends PaneldynamicAction {\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-paneldynamic-progress-text\", PanelDynamicProgressText);","<div [class]=\"question.cssClasses.progressText\">{{ question.progressText }}</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { PanelModel, QuestionPanelDynamicModel, SurveyModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-paneldynamic-question\",\n  templateUrl: \"./paneldynamic.component.html\"\n})\nexport class PanelDynamicQuestionComponent extends QuestionAngular<QuestionPanelDynamicModel | any> implements OnInit {\n  public trackPanelBy(_: number, panel: PanelModel) {\n    return panel.id;\n  }\n  protected override onModelChanged(): void {\n    super.onModelChanged();\n    this.model.panelCountChangedCallback = () => {\n      this.update();\n    };\n    this.model.currentIndexChangedCallback = () => {\n      this.update()\n    };\n    this.model.renderModeChangedCallback = () => {\n      this.update();\n    };\n  }\n  get progressCssClass() {\n    return this.model.isProgressTopShowing\n      ? this.model.cssClasses.progressTop\n      : this.model.cssClasses.progressBottom;\n  }\n  override ngOnDestroy(): void {\n    this.model.panelCountChangedCallback = () => {};\n    this.model.currentIndexChangedCallback = () => {};\n    this.model.renderModeChangedCallback = () => {};\n    super.ngOnDestroy();\n  }\n  public getPanelComponentName(panel: PanelModel): string {\n    const survey = this.surveyModel as SurveyModel;\n    if(!!survey) {\n      const name = survey.getElementWrapperComponentName(panel);\n      if(!!name) {\n        return name;\n      }\n    }\n    return \"panel\";\n  }\n  public getPanelComponentData(panel: PanelModel): any {\n    const survey = this.surveyModel as SurveyModel;\n    let data: any;\n    if(!!survey) {\n      data = survey.getElementWrapperComponentData(panel);\n    }\n    return {\n      componentName: \"panel\",\n      componentData: {\n        model: panel,\n        data: data\n      }\n    };\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"paneldynamic-question\", PanelDynamicQuestionComponent);","<div [class]=\"model.cssClasses.root\" #contentElement>\n  <div *ngIf=\"model.getShowNoEntriesPlaceholder()\" [class]=\"model.cssClasses.noEntriesPlaceholder\">\n    <span [model]=\"model.locNoEntriesText\" sv-ng-string></span>\n    <sv-ng-paneldynamic-add-btn *ngIf=\"model.canAddPanel\" [data]=\"{ question: model }\"></sv-ng-paneldynamic-add-btn>\n  </div>\n  <div [class]=\"model.cssClasses.progress\"\n    *ngIf=\"!model.showLegacyNavigation && model.isProgressTopShowing && model.isRangeShowing\">\n    <div [class]=\"model.cssClasses.progressBar\" [style]=\"{ width: model.progress }\" role=\"progressbar\"></div>\n  </div>\n  <ng-container [ngTemplateOutlet]=\"progress\"\n    *ngIf=\"model.showLegacyNavigation && model.isProgressTopShowing\"></ng-container>\n  <div [class]=\"model.cssClasses.panelsContainer\">\n    <ng-container *ngFor=\"let panel of model.renderedPanels; index as index; trackBy: trackPanelBy\">\n      <div [class]=\"model.getPanelWrapperCss(panel)\">\n        <ng-template\n          [component]=\"{ name: getPanelComponentName(panel), data: getPanelComponentData(panel) }\"></ng-template>\n        <ng-container\n          *ngIf=\"model.panelRemoveButtonLocation ==='right' && model.canRemovePanel && panel.state != 'collapsed'\">\n          <ng-template\n            [component]=\"{ name: 'sv-paneldynamic-remove-btn', data: { data: { panel, question: model }}}\"></ng-template>\n        </ng-container>\n      </div>\n      <hr [class]=\"model.cssClasses.separator\" *ngIf=\"model.showSeparator(index)\" />\n    </ng-container>\n  </div>\n  <ng-container [ngTemplateOutlet]=\"progress\"\n    *ngIf=\"model.showLegacyNavigation && model.isProgressBottomShowing\"></ng-container>\n  <sv-ng-paneldynamic-add-btn *ngIf=\"model.showLegacyNavigation && model.isRenderModeList\"\n    [data]=\"{ question: model }\"></sv-ng-paneldynamic-add-btn>\n  <ng-container [ngTemplateOutlet]=\"progressV2\" *ngIf=\"model.showNavigation\"></ng-container>\n</div>\n\n<ng-template #progressV2>\n  <div [class]=\"model.cssClasses.footer\" *ngIf=\"!!model.cssClasses.footer\">\n    <hr [class]=\"model.cssClasses.separator\" />\n    <div [class]=\"model.cssClasses.progress\" *ngIf=\"model.isRangeShowing && model.isProgressBottomShowing\">\n      <div [class]=\"model.cssClasses.progressBar\" [style]=\"{ width: model.progress }\" role=\"progressbar\"></div>\n    </div>\n    <div *ngIf=\"model.footerToolbar.visibleActions.length\" [class]=\"model.cssClasses.footerButtonsContainer\">\n      <sv-ng-action-bar [model]=\"model.footerToolbar\"></sv-ng-action-bar>\n    </div>\n  </div>\n</ng-template>\n<ng-template #progress>\n  <div [class]=\"this.progressCssClass\">\n    <div style=\"clear: both\" [class]=\"this.progressCssClass\">\n      <div [class]=\"model.cssClasses.progressContainer\">\n        <sv-ng-paneldynamic-prev-btn [data]=\"{ question: model }\"></sv-ng-paneldynamic-prev-btn>\n        <div [class]=\"model.cssClasses.progress\" *ngIf=\"model.isRangeShowing\">\n          <div [class]=\"model.cssClasses.progressBar\" [style]=\"{ width: model.progress }\" role=\"progressbar\"></div>\n        </div>\n        <sv-ng-paneldynamic-next-btn [data]=\"{ question: model }\"></sv-ng-paneldynamic-next-btn>\n      </div>\n      <sv-ng-paneldynamic-add-btn [data]=\"{ question: model }\"></sv-ng-paneldynamic-add-btn>\n      <sv-ng-paneldynamic-progress-text [data]=\"{ question: model }\"></sv-ng-paneldynamic-progress-text>\n    </div>\n  </div>\n</ng-template>","import { ChangeDetectorRef, Component, Input, TemplateRef, ViewContainerRef } from \"@angular/core\";\nimport { ButtonGroupItemModel, PanelModel, Question, SurveyModel } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\nimport { AngularComponentFactory } from \"./component-factory\";\nimport { EmbeddedViewContentComponent } from \"./embedded-view-content.component\";\n\n@Component({\n  selector: \"sv-template-renderer\",\n  templateUrl: \"./template-renderer.component.html\",\n  styleUrls: [\"./hide-host.scss\"]\n})\nexport class TemplateRendererComponent extends EmbeddedViewContentComponent {\n  @Input() componentName!: string;\n  @Input() componentData!: any;\n  @Input() contentTempl?: TemplateRef<unknown>;\n}\nAngularComponentFactory.Instance.registerComponent(SurveyModel.TemplateRendererComponentName, TemplateRendererComponent);","<ng-template #template>\n  <ng-container *ngIf=\"!!componentName\">\n    <ng-template [component]=\"{ name: componentName, data: componentData }\"></ng-template>\n  </ng-container>\n  <ng-container *ngIf=\"!componentName && contentTempl\">\n    <ng-container *ngTemplateOutlet=\"contentTempl\"></ng-container>\n  </ng-container>\n</ng-template>","import { AfterViewInit, Component, ElementRef, Input, OnChanges, OnDestroy, SimpleChanges, ViewChild } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { Question } from \"survey-core\";\n\n@Component(\n  {\n    templateUrl: \"./customwidget.component.html\",\n    selector: \"sv-ng-custom-widget\"\n  }\n)\nexport class CustomWidgetComponent implements AfterViewInit, OnDestroy, OnChanges {\n  @Input() css: any;\n  @Input() model!: Question;\n\n  @ViewChild(\"content\") container!: ElementRef<HTMLDivElement>;\n\n  get hasDefaultRender(): boolean {\n    return this.model.customWidget.isDefaultRender || this.hasAngularComponent;\n  }\n  get hasHtml(): boolean {\n    return this.model.customWidget.htmlTemplate ? true : false;\n  }\n  get customHtml(): string {\n    return this.model.customWidget.htmlTemplate;\n  }\n  get hasAngularComponent(): boolean {\n    return AngularComponentFactory.Instance.isComponentRegistered(this.model.customWidget.name);\n  }\n  get componentName(): string {\n    if (this.hasAngularComponent) return this.model.customWidget.name;\n    return this.model.getTemplate() + \"-question\";\n  }\n  ngAfterViewInit(): void {\n    this.model.customWidget.afterRender(this.model, this.container.nativeElement);\n  }\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    if(simpleChanges[\"model\"].previousValue !== undefined && simpleChanges[\"model\"].currentValue !== undefined) {\n      this.model.customWidget.afterRender(this.model, this.container.nativeElement);\n    }\n  }\n  ngOnDestroy(): void {\n    this.model.customWidget.willUnmount(this.model, this.container.nativeElement);\n  }\n\n}\n\nAngularComponentFactory.Instance.registerComponent(\"survey-customwidget\", CustomWidgetComponent);\n","<div #content>\n  <div *ngIf=\"hasHtml\" [innerHTML]=\"customHtml | safeHtml\"></div>\n  <ng-container *ngIf=\"hasDefaultRender\">\n    <ng-template [component]=\"{ name: componentName, data: { model: model, css: css } }\"></ng-template>  \n  </ng-container>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { MatrixRowModel, ItemValue, QuestionMatrixModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { BaseAngular } from \"../base-angular\";\n\nexport interface INgMatrixCellChanged {\n  onCellChanged(row: MatrixRowModel, column: ItemValue): void;\n}\n\n@Component({\n  selector: \"sv-ng-matrix-cell, '[sv-ng-matrix-cell]'\",\n  templateUrl: \"./matrixcell.component.html\"\n})\nexport class MatrixCellComponent extends BaseAngular<ItemValue> {\n  @Input() question!: QuestionMatrixModel;\n  @Input() column!: ItemValue;\n  @Input() row!: MatrixRowModel;\n  @Input() columnIndex!: number;\n  @Input() cellChangedOwner!: INgMatrixCellChanged;\n  protected getModel(): ItemValue {\n    return this.row.item;\n  }\n  public onChange(): void {\n    this.cellChangedOwner.onCellChanged(this.row, this.column);\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"survey-matrix-cell\", MatrixCellComponent);","<label (mousedown)=\"question.onMouseDown()\" [class]=\"question.getItemClass(row, column)\">\n  <input\n    type=\"radio\"\n    [class]=\"question.cssClasses.itemValue\"\n    [name]=\"row.fullName\"\n    [value]=\"column.value\"\n    [checked]=\"row.value === column.value\"\n    [readonly]=\"row.isReadOnlyAttr\"\n    [disabled]=\"row.isDisabledAttr\"\n    [attr.id]=\"question.inputId + '_' + row.name + '_' + columnIndex\"\n    (change)=\"onChange()\"\n    [attr.aria-required]=\"question.a11y_input_ariaRequired\"\n    [attr.aria-label]=\"question.getCellAriaLabel(row.locText.renderedHtml, column.locText.renderedHtml)\"\n    [attr.aria-invalid]=\"question.a11y_input_ariaInvalid\"\n    [attr.aria-errormessage]=\"question.a11y_input_ariaErrormessage\"\n  />\n  <span [class]=\"question.cssClasses.materialDecorator\">\n    <svg *ngIf=\"question.itemSvgIcon\" [class]=\"question.cssClasses.itemDecorator\">\n      <use [attr.xlink:href]=\"question.itemSvgIcon\"></use>\n    </svg> \n  </span>\n  <span *ngIf=\"question.isMobile\" [class]=\"question.cssClasses.cellResponsiveTitle\" [model]=\"column.locText\" sv-ng-string></span>\n</label>\n<ng-content></ng-content>","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\nimport { IAction } from \"survey-core\";\nimport { EmbeddedViewContentComponent } from \"../../../embedded-view-content.component\";\n\n@Component({\n  templateUrl: \"drag-drop-icon.component.html\",\n  selector: \"sv-ng-matrix-drag-drop-icon\",\n  styleUrls: [\"../../../hide-host.scss\"]\n})\nexport class MatrixDynamicDragDropIconComponent extends EmbeddedViewContentComponent {\n  @Input() public model!: IAction;\n\n  get question() {\n    return this.model.data.question;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\n  \"sv-matrix-drag-drop-icon\",\n  MatrixDynamicDragDropIconComponent\n);\n","<ng-template #template>\n  <div>\n    <svg *ngIf=\"question.iconDragElement\" [class]=\"question.cssClasses.dragElementDecorator\">\n      <use [attr.xlink:href]=\"question.iconDragElement\"></use>\n    </svg>\n    <span *ngIf=\"!question.iconDragElement\" data-bind=\"css: question.cssClasses.iconDrag\"></span>\n  </div>\n</ng-template>","import { Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\nimport {\n  Question,\n  QuestionMatrixDropdownModelBase,\n  QuestionMatrixDropdownRenderedCell,\n  MatrixDropdownRowModelBase,\n  SurveyModel\n} from \"survey-core\";\nimport { getComponentName } from \"../question\";\n\n@Component({\n  selector: \"sv-ng-matrixdropdown-cell\",\n  templateUrl: \"./matrixdropdowncell.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class MatrixDropdownCellComponent extends BaseAngular<Question> {\n  @Input() question!: QuestionMatrixDropdownModelBase;\n  @Input() cell!: QuestionMatrixDropdownRenderedCell;\n\n  @ViewChild(\"cellContainer\") cellContainer!: ElementRef<HTMLElement>;\n  getModel() {\n    if(this.cell.hasQuestion) {\n      return this.cell.question;\n    }\n    if(!!this.cell.column) {\n      return this.cell.column;\n    }\n    return null as any;\n  }\n  public get row(): MatrixDropdownRowModelBase {\n    return this.cell.row;\n  }\n  public override ngDoCheck(): void {\n    super.ngDoCheck();\n    if(this.cell.isErrorsCell && this.cell?.question) {\n      this.cell.question.registerFunctionOnPropertiesValueChanged([\"errors\", \"visible\"], () => {\n        this.update();\n      }, \"__ngSubscription\")\n    }\n  }\n  public get panelComponentName(): string {\n    const panel = this.cell.panel;\n    const survey = <SurveyModel>panel.survey;\n    if(!!survey) {\n      const name = survey.getElementWrapperComponentName(panel);\n      if(!!name) {\n        return name;\n      }\n    }\n    return \"panel\";\n  }\n  public get panelComponentData(): any {\n    const panel = this.cell.panel;\n    const survey = <SurveyModel>panel.survey;\n    let data: any;\n    if(!!survey) {\n      data = survey.getElementWrapperComponentData(panel);\n    }\n    return {\n      componentName: \"panel\",\n      componentData: {\n        model: panel,\n        data: data\n      }\n    };\n  }\n\n  getComponentName(element: Question) { return getComponentName(element); }\n  getCellStyle() {\n    if (!!this.cell.width || !!this.cell.minWidth)\n      return { width: this.cell.width, minWidth: this.cell.minWidth };\n    return null;\n  }\n  public get isRequiredCell(): boolean {\n    return !!this.cell.column && this.cell.column.isRenderedRequired;\n  }\n  ngAfterViewInit() {\n    if (!this.cell.hasQuestion || !this.question || !this.question.survey) return;\n    const el = this.cellContainer?.nativeElement;\n    if(el) {\n      const cellQ = this.cell.question;\n      var options = {\n        cell: this.cell.cell,\n        cellQuestion: cellQ,\n        htmlElement: el,\n        row: this.cell.row,\n        column: this.cell.cell.column,\n      };\n      this.question.survey.matrixAfterCellRender(this.question, options);\n      cellQ.afterRenderCore(el);\n    }\n  }\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    if(this.cell.isErrorsCell && this.cell?.question) {\n      this.cell.question.unRegisterFunctionOnPropertiesValueChanged([\"errors\", \"visible\"], \"__ngSubscription\")    \n    }\n  }\n  public get canRender() {\n    return this.question && this.question.survey && this.cell.isVisible;\n  }\n}","<ng-template #template>\n  <td [class]=\"cell.className\" *ngIf=\"canRender\" [title]=\"cell.getTitle()\"\n    [style]=\"getCellStyle()\" [attr.colspan]=\"cell.colSpans\" (focusin)=\"cell.focusIn()\" #cellContainer>\n    <sv-ng-matrix-drag-drop-icon *ngIf=\"cell.isDragHandlerCell\"\n      [model]=\"$any({ data: { row: row, question: question } })\"></sv-ng-matrix-drag-drop-icon>\n    <sv-action-bar *ngIf=\"cell.isActionsCell\" [model]=\"cell.item.getData()\" [handleClick]=\"false\"></sv-action-bar>\n    <ng-container *ngIf=\"cell.hasPanel\">\n      <ng-template [component]=\"{ name: panelComponentName, data: panelComponentData }\"></ng-template>\n    </ng-container>\n    <div *ngIf=\"cell.isErrorsCell && cell.question?.hasVisibleErrors\" [element]=\"cell.question\" sv-ng-errors></div>\n    <span *ngIf=\"cell.showResponsiveTitle\" [class]=\"cell.responsiveTitleCss\" [model]=\"cell.responsiveLocTitle\" sv-ng-string></span>\n    <div *ngIf=\"cell.hasQuestion\" [class]=\"cell.cellQuestionWrapperClassName\"\n      [visible]=\"cell.question.isVisible\">\n      <ng-container *ngIf=\"!cell.isChoice && cell.question.isDefaultRendering()\">\n        <ng-template\n          [component]=\"{ name: question.getCellWrapperComponentName(cell.cell), data: { componentData: question.getCellWrapperComponentData(cell.cell)} }\">\n          <ng-template\n            [component]=\"{ name: getComponentName(cell.question), data: { model: cell.question } }\"></ng-template>\n        </ng-template>\n      </ng-container>\n      <ng-template *ngIf=\"!cell.isChoice && !cell.question.isDefaultRendering()\"\n        [component]=\"{ name: cell.question.getComponentName(), data: { model: cell.question } }\">\n      </ng-template>\n      <ng-container *ngIf=\"cell.isItemChoice\">\n        <ng-template\n          [component]=\"{ name: question.getCellWrapperComponentName(cell.cell), data: { componentData: question.getCellWrapperComponentData(cell.cell)} }\">\n          <sv-ng-selebase-item [showLabel]=\"false\" [inputType]=\"cell.isCheckbox ? 'checkbox': 'radio'\"\n            [question]=\"cell.question\" [model]=\"cell.item\"></sv-ng-selebase-item>\n        </ng-template>\n      </ng-container>\n      <div *ngIf=\"cell.isOtherChoice\" [class]=\"cell.question.getCommentAreaCss(true)\" [question]=\"cell.question\"\n        sv-ng-comment-other></div>\n    </div>\n    <ng-container *ngIf=\"cell.hasTitle\">\n      <ng-template\n        [component]=\"{ name: question.getCellWrapperComponentName($any(cell)), data: { componentData: question.getCellWrapperComponentData($any(cell))} }\">\n        <sv-ng-string [model]=\"cell.locTitle\"></sv-ng-string>\n        <span *ngIf=\"isRequiredCell\" [class]=\"question.cssClasses.cellRequiredText\">{{ cell.requiredText }}</span>\n      </ng-template>\n    </ng-container>\n  </td>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\nimport {\n  MatrixDropdownColumn,\n  QuestionMatrixDropdownModelBase,\n} from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-matrixheaderrequired\",\n  styles: [\":host { display: none; }\"],\n  template: \"<ng-template #template><ng-container *ngIf='column.isRenderedRequired'><span>&nbsp;</span><span [class]='question.cssClasses.cellRequiredText'>{{ column.requiredText }}</span></ng-container></ng-template>\"\n})\nexport class MatrixRequiredHeader extends BaseAngular<MatrixDropdownColumn> {\n  @Input() column!: MatrixDropdownColumn;\n  @Input() question!: QuestionMatrixDropdownModelBase;\n  getModel() {\n    return this.column;\n  }\n}","import { Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\nimport {\n  MatrixDropdownRowModelBase,\n  QuestionMatrixDropdownModelBase,\n  QuestionMatrixDropdownRenderedRow\n} from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-matrix-row\",\n  templateUrl: \"./matrix-row.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class MatrixRowComponent extends BaseAngular<QuestionMatrixDropdownRenderedRow> {\n  @Input() model!: QuestionMatrixDropdownRenderedRow;\n  @Input() question!: QuestionMatrixDropdownModelBase;\n  @ViewChild(\"container\", { static: false, read: ElementRef }) container!: ElementRef<HTMLTableRowElement>;\n  protected getModel(): QuestionMatrixDropdownRenderedRow {\n    return this.model;\n  }\n  public get row(): MatrixDropdownRowModelBase {\n    return this.model.row;\n  }\n  public trackCellBy(_: number, cell: any): string {\n    return cell.id;\n  }\n  protected override onModelChanged(): void {\n    super.onModelChanged();\n    if(this.previousModel) {\n      this.previousModel.setRootElement(undefined as any)\n    }\n    if(this.model && this.container?.nativeElement) {\n      this.model.setRootElement(this.container.nativeElement);\n    }\n  }\n  public ngAfterViewInit(): void {\n    if(this.model && this.container?.nativeElement) {\n      this.model.setRootElement(this.container.nativeElement)\n    }\n  }\n  public override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.model.setRootElement(undefined as any);\n  }\n}","<ng-template #template>\n  <tr *ngIf=\"model.visible\" [class]=\"model.className\" (pointerdown)=\"question.onPointerDown($event, row)\"\n    [attr.data-sv-drop-target-matrix-row]=\"row && row.id\" #container>\n    <sv-ng-matrixdropdown-cell [cell]=\"cell\" [question]=\"question\"\n      *ngFor=\"let cell of model.cells; trackBy: trackCellBy\"></sv-ng-matrixdropdown-cell>\n  </tr>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\nimport { QuestionMatrixDropdownModelBase, QuestionMatrixDropdownRenderedTable } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-matrix-table\",\n  templateUrl: \"./matrixtable.component.html\"\n})\nexport class MatrixTableComponent extends BaseAngular<QuestionMatrixDropdownRenderedTable> {\n  @Input() question!: QuestionMatrixDropdownModelBase;\n  @Input() table!: QuestionMatrixDropdownRenderedTable;\n  protected getModel(): QuestionMatrixDropdownRenderedTable {\n    return this.table;\n  }\n  public trackCellBy(_: number, cell: any): string {\n    return cell.id;\n  }\n  public trackRowBy(index: number, row: any): string {\n    return row.id;\n  }\n}\n","<div [style]=\"{ overflowX: question.showHorizontalScroll ? 'scroll' : '' }\" #contentElement\n  [class]=\"question.cssClasses.tableWrapper\">\n  <table [class]=\"question.getTableCss()\">\n    <thead *ngIf=\"table.showHeader\">\n      <tr>\n        <ng-container *ngFor=\"let cell of table.headerRow.cells; trackBy: trackCellBy\">\n          <th *ngIf=\"cell.hasTitle\" [class]=\"cell.className\" [style]=\"{ minWidth: cell.minWidth, width: cell.width }\">\n            <ng-template\n              [component]=\"{ name: question.getColumnHeaderWrapperComponentName($any(cell)), data: { componentData: question.getColumnHeaderWrapperComponentData($any(cell)) } }\">\n              <sv-ng-string [model]=\"cell.locTitle\"></sv-ng-string>\n              <sv-ng-matrixheaderrequired *ngIf=\"!!cell.column\" [column]=\"cell.column\" [question]=\"question\">\n              </sv-ng-matrixheaderrequired>\n            </ng-template>\n          </th>\n\n          <td *ngIf=\"!cell.hasTitle\" [class]=\"cell.className\" [style]=\"{ minWidth: cell.minWidth, width: cell.width }\">\n          </td>\n        </ng-container>\n      </tr>\n    </thead>\n    <tbody>\n      <ng-container *ngFor=\"let row of table.renderedRows; trackBy: trackRowBy\">\n        <sv-ng-matrix-row [model]=\"row\" [question]=\"question\"></sv-ng-matrix-row>\n      </ng-container>\n    </tbody>\n    <tfoot *ngIf=\"table.showFooter\">\n      <tr>\n        <sv-ng-matrixdropdown-cell [cell]=\"cell\" [question]=\"question\"\n          *ngFor=\"let cell of table.footerRow.cells; trackBy: trackCellBy\">\n        </sv-ng-matrixdropdown-cell>\n      </tr>\n    </tfoot>\n  </table>\n</div>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionMatrixDropdownModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-matrixdropdown-question\",\n  templateUrl: \"./matrixdropdown.component.html\"\n})\nexport class MatrixDropdownComponent extends QuestionAngular<QuestionMatrixDropdownModel> {}\n\nAngularComponentFactory.Instance.registerComponent(\"matrixdropdown-question\", MatrixDropdownComponent);","<ng-template #template>\n    <sv-ng-matrix-table *ngIf=\"model.renderedTable?.showTable\" [question]=\"model\" [table]=\"model.renderedTable\"></sv-ng-matrix-table>\n</ng-template>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionMatrixDynamicModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-matrixdynamic-question\",\n  templateUrl: \"./matrixdynamic.component.html\"\n})\nexport class MatrixDynamicComponent extends QuestionAngular<QuestionMatrixDynamicModel> {}\n\nAngularComponentFactory.Instance.registerComponent(\"matrixdynamic-question\", MatrixDynamicComponent);","<ng-template #template>\n  <div #contentElement>\n    <div *ngIf=\"model.renderedTable.showAddRowOnTop\" [class]=\"model.cssClasses.footer\">\n      <ng-container *ngTemplateOutlet=\"addRowButton\"></ng-container>\n    </div>\n    <sv-ng-matrix-table *ngIf=\"model.renderedTable?.showTable\" [question]=\"model\" [table]=\"model.renderedTable\"></sv-ng-matrix-table>\n    <div *ngIf=\"!model.renderedTable.showTable\" [class]=\"model.cssClasses.emptyRowsSection\">\n      <div [class]=\"model.cssClasses.emptyRowsText\" [model]=\"model.locEmptyRowsText\" sv-ng-string></div>\n      <ng-container *ngIf=\"model.renderedTable.showAddRow\">\n        <ng-container  *ngTemplateOutlet=\"addRowButton\"></ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"model.renderedTable.showAddRowOnBottom\" [class]=\"model.cssClasses.footer\">\n      <ng-container *ngTemplateOutlet=\"addRowButton\"></ng-container>\n    </div>\n  </div>\n  <ng-template #addRowButton>\n    <button type=\"button\" [class]=\"model.getAddRowButtonCss(true)\" (click)=\"model.addRowUI()\">\n        <sv-ng-string [model]=\"model.locAddRowText\" ></sv-ng-string>\n        <span [class]=\"model.cssClasses.iconAdd\"></span>\n    </button>\n  </ng-template>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\nimport { Action, Base } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-matrix-remove-btn\",\n  templateUrl: \"./remove-button.component.html\"\n})\nexport class MatrixDynamicRemoveButtonComponent {\n  @Input() model!: Action;\n\n  get question() {\n    return this.model.data.question;\n  }\n\n  get row() {\n    return this.model.data.row;\n  }\n\n  getModel(): Base {\n    return this.model;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\n  \"sv-matrix-remove-button\",\n  MatrixDynamicRemoveButtonComponent\n);\n","<button type=\"button\" [class]=\"question.getRemoveRowButtonCss()\" [disabled]=\"question.isInputReadOnly\" (click)=\"question.removeRowUI(row)\">\n  <sv-ng-string [model]=\"question.locRemoveRowText\" ></sv-ng-string>\n  <span [class]=\"question.cssClasses.iconRemove\"></span>\n</button>","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\nimport { Action } from \"survey-core\";\nimport { Base } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-matrix-detail-btn\",\n  templateUrl: \"./detail-button.component.html\"\n})\nexport class MatrixDetailButtonComponent {\n  @Input() public model!: Action;\n\n  get question() {\n    return this.model.data.question;\n  }\n\n  get row() {\n    return this.model.data.row;\n  }\n\n  getModel(): Base {\n    return this.model;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-matrix-detail-button\", MatrixDetailButtonComponent);\n","<button type=\"button\" [class]=\"question.getDetailPanelButtonCss(row)\" (click)=\"row.showHideDetailPanelClick()\"\n  [attr.aria-expanded]=\"question.getIsDetailPanelShowing(row) ? 'true' : 'false'\"\n  [attr.aria-controls]=\"question.getIsDetailPanelShowing(row) ? row.detailPanelId : null\">\n  <svg [class]=\"this.question.getDetailPanelIconCss(this.row)\" \n    [iconName]=\"this.question.getDetailPanelIconId(this.row)\" [size]=\"'auto'\" sv-ng-svg-icon>\n  </svg>\n</button>","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionExpressionModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-expression\",\n  template: \"<div [class]='model.cssClasses.root' #contentElement>{{ model.formatedValue }}</div>\"\n})\nexport class ExpressionComponent extends QuestionAngular<QuestionExpressionModel> {\n}\n\nAngularComponentFactory.Instance.registerComponent(\"expression-question\", ExpressionComponent);","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionImageModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-image-question\",\n  templateUrl: \"./image.component.html\"\n})\nexport class ImageQuestionComponent extends QuestionAngular<QuestionImageModel> {\n  override ngAfterViewInit(): void {\n    this.model.locImageLink.onChanged = () => {\n      this.detectChanges();\n    };\n    super.ngAfterViewInit();\n  }\n  override ngOnDestroy(): void {\n    this.model.locImageLink.onChanged = () => {};\n    super.ngOnDestroy();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"image-question\", ImageQuestionComponent);","<div [class]=\"model.cssClasses.root\" #contentElement>\n  <img\n    *ngIf=\"model.renderedMode === 'image'\"\n    [visible]=\"!!model.locImageLink.renderedHtml && !model.contentNotLoaded\"\n    [class]=\"model.getImageCss()\"\n    [attr.src]=\"model.locImageLink.renderedHtml\"\n    [attr.alt]=\"model.altText || model.title\"\n    [attr.width]=\"model.renderedWidth\"\n    [attr.height]=\"model.renderedHeight\"\n    [style]=\"{ objectFit: model.imageFit,  width: model.renderedStyleWidth, height: model.renderedStyleHeight }\"\n    (load)=\"model.onLoadHandler()\"\n    (error)=\"model.onErrorHandler()\"\n  /><video\n    controls\n    *ngIf=\"model.renderedMode === 'video'\"\n    [visible]=\"!!model.locImageLink.renderedHtml && !model.contentNotLoaded\"\n    [class]=\"model.getImageCss()\"\n    [attr.src]=\"model.locImageLink.renderedHtml\"\n    [attr.width]=\"model.renderedWidth\"\n    [attr.height]=\"model.renderedHeight\"\n    [style]=\"{ objectFit: model.imageFit,  width: model.renderedStyleWidth, height: model.renderedStyleHeight }\"\n    (loadedmetadata)=\"model.onLoadHandler()\"\n    (error)=\"model.onErrorHandler()\"\n  ></video>\n  <iframe\n    *ngIf=\"model.renderedMode === 'youtube'\"\n    [class]=\"model.getImageCss()\"\n    [attr.src]=\"model.locImageLink.renderedHtml | safeResourceUrl\"\n    [attr.width]=\"model.renderedWidth\"\n    [attr.height]=\"model.renderedHeight\"\n    [style]=\"{ objectFit: model.imageFit,  width: model.renderedStyleWidth, height: model.renderedStyleHeight }\"\n    ></iframe>\n    <div *ngIf=\"!model.locImageLink.renderedHtml || model.contentNotLoaded\" [class]=\"model.cssClasses.noImage\">\n      <svg [iconName]=\"model.cssClasses.noImageSvgIconId\" [size]=\"48\" sv-ng-svg-icon></svg>\n    </div>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { SurveyError } from \"survey-core\";\n\n@Component({\n  selector: \"sv-question-error\",\n  templateUrl: \"./question-error.component.html\"\n})\nexport class QuestionErrorComponent {\n  @Input() error!: SurveyError;\n  @Input() cssClasses?: any;\n  @Input() element: any;\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-question-error\", QuestionErrorComponent);","<div>\n  <span\n    [class]=\"cssClasses ? cssClasses.error.icon : 'panel-error-icon'\"\n    aria-hidden=\"true\"\n  ></span>\n  <span [class]=\"cssClasses ? cssClasses.error.item : 'panel-error-item'\" [model]=\"error.locText\" sv-ng-string>\n  </span>\n</div>","import { Question } from \"survey-core\";\nimport { QuestionCustomModel } from \"survey-core\";\nimport { Component } from \"@angular/core\";\nimport { QuestionAngular, getComponentName } from \"../question\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-custom-question\",\n  template: \"<ng-template [component]='{ name: getComponentName(contentQuestion), data: { model: contentQuestion } }'></ng-template>\"\n})\nexport class CustomQuestionComponent extends QuestionAngular<QuestionCustomModel> {\n  get contentQuestion(): Question {\n    return this.model.contentQuestion;\n  }\n  getComponentName(element: Question): string { return getComponentName(element); }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"custom-question\", CustomQuestionComponent);\n","\nimport { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { QuestionAngular } from \"../question\";\nimport { PanelModel, QuestionCompositeModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-composite-question\",\n  template: \"<sv-ng-panel [model]='contentPanel'></sv-ng-panel>\"\n})\nexport class CompositeQuestionComponent extends QuestionAngular<QuestionCompositeModel> {\n  get contentPanel(): PanelModel {\n    return this.model.contentPanel;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"composite-question\", CompositeQuestionComponent);\n","import { Component, Input, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { Cover, CoverCell, SurveyModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-header-cell\",\n  templateUrl: \"./header-cell.component.html\",\n  styles: [\":host { display: none; }\"],\n})\nexport class HeaderCellComponent extends EmbeddedViewContentComponent {\n  @Input() model!: CoverCell;\n  @ViewChild(\"actionContent\", { read: ViewContainerRef, static: true }) actionContent!: ViewContainerRef;\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-header-cell\", HeaderCellComponent);","\n<ng-template #template>\n  <div [class]=\"model.css\" [style]=\"model.style\">\n    <div class=\"sv-header__cell-content\" [style]=\"model.contentStyle\">\n      <div *ngIf=\"model.showLogo\" class=\"sv-header__logo\">\n        <div [class]=\"model.survey.logoClassNames\">\n          <ng-template [component]=\"{ name: model.survey.getElementWrapperComponentName(model.survey, 'logo-image'), data: { data: model.survey.getElementWrapperComponentData(model.survey, 'logo-image') } }\"></ng-template>\n        </div>\n      </div>\n      <div *ngIf=\"model.showTitle\" class=\"sv-header__title\" [style]=\"{ maxWidth: model.textAreaWidth }\">\n        <sv-ng-element-title [element]=\"model.survey\"></sv-ng-element-title>\n      </div>\n      <div *ngIf=\"model.showDescription\" class=\"sv-header__description\" [style]=\"{ maxWidth: model.textAreaWidth }\">\n        <div *ngIf=\"model.survey.renderedHasDescription\" [class]=\"model.survey.css.description\" [model]=\"model.survey.locDescription\" sv-ng-string></div>\n      </div>\n    </div>\n  </div>\n</ng-template>","import { Component, Input, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { Cover, CoverCell, SurveyModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-header-mobile\",\n  templateUrl: \"./header-mobile.component.html\",\n  styles: [\":host { display: none; }\"],\n})\nexport class HeaderMobileComponent extends EmbeddedViewContentComponent {\n  @Input() model!: Cover;\n  @ViewChild(\"actionContent\", { read: ViewContainerRef, static: true }) actionContent!: ViewContainerRef;\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-header-cell\", HeaderMobileComponent);","\n<ng-template #template>\n  <div class=\"sv-header--mobile\">\n    <div *ngIf=\"model.survey.hasLogo\" class=\"sv-header__logo\">\n      <div [class]=\"model.survey.logoClassNames\">\n        <ng-template [component]=\"{ name: model.survey.getElementWrapperComponentName(model.survey, 'logo-image'), data: { data: model.survey.getElementWrapperComponentData(model.survey, 'logo-image') } }\"></ng-template>\n      </div>\n    </div>\n    <div *ngIf=\"model.survey.hasTitle\" class=\"sv-header__title\" [style]=\"{ maxWidth: model.renderedtextAreaWidth }\">\n      <sv-ng-element-title [element]=\"model.survey\"></sv-ng-element-title>\n    </div>\n    <div *ngIf=\"model.survey.renderedHasDescription\" class=\"sv-header__description\" [style]=\"{ maxWidth: model.renderedtextAreaWidth }\">\n      <div *ngIf=\"model.survey.renderedHasDescription\" [class]=\"model.survey.css.description\" [model]=\"model.survey.locDescription\" sv-ng-string></div>\n    </div>\n  </div>\n</ng-template>","import { Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { Cover, CoverCell, SurveyModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-header, sv-ng-header\",\n  templateUrl: \"./header.component.html\",\n  styles: [\":host { display: none }\"]\n})\nexport class HeaderComponent extends BaseAngular<Cover> {\n  @Input() model!: Cover;\n  @Input() survey!: SurveyModel;\n  @ViewChild(\"container\") container!: ElementRef<HTMLDivElement>;\n  getModel(): Cover {\n    this.model.survey = this.survey;\n    return this.model;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-header\", HeaderComponent);","<ng-template #template>\n  <div *ngIf=\"(survey.headerView === 'advanced')\" [class]=\"model.headerClasses\" [style]=\"{ height: model.renderedHeight }\">\n    <div *ngIf=\"!!model.backgroundImage\" [style]=\"model.backgroundImageStyle\" [class]=\"model.backgroundImageClasses\"></div>\n    <div *ngIf=\"!survey.isMobile\" [class]=\"model.contentClasses\" [style.width]=\"model.maxWidth\">\n      <ng-container *ngFor=\"let cell of model.cells\">\n        <sv-ng-header-cell [model]=\"cell\"></sv-ng-header-cell>\n      </ng-container>\n    </div>\n    <div *ngIf=\"survey.isMobile\">\n      <sv-ng-header-mobile [model]=\"model\"></sv-ng-header-mobile>\n    </div>\n  </div>\n</ng-template>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { TextAreaComponent } from \"./components/text-area/text-area.component\";\nimport { SurveyComponent } from \"./survey.component\";\nimport { PopupSurveyComponent } from \"./popup.survey.component\";\nimport { PageComponent } from \"./page.component\";\nimport { QuestionComponent } from \"./question.component\";\nimport { StringViewerComponent } from \"./string-viewer.component\";\nimport { PopupPointerComponent } from \"./components/popup/popup-pointer.component\";\nimport { PopupComponent } from \"./components/popup/popup.component\";\nimport { PopupBaseContainerComponent } from \"./components/popup/popup-container.component\";\nimport { QuestionSkeletonComponent } from \"./components/skeleton.component\";\nimport { CharacterCounterComponent } from \"./components/character-counter/character-counter.component\";\nimport { DropdownComponent } from \"./components/dropdown/dropdown.component\";\nimport { TagboxFilterComponent } from \"./components/tagbox/tagbox-filter.component\";\nimport { TagboxItemComponent } from \"./components/tagbox/tagbox-item.component\";\nimport { TagboxComponent } from \"./components/tagbox/tagbox.component\";\nimport { DropdownOptionItemComponent } from \"./components/renderAs/dropdown-select/dropdown-option-item.component\";\nimport { DropdownSelectComponent } from \"./components/renderAs/dropdown-select/dropdown-select.component\";\nimport { TextQuestionComponent } from \"./questions/text.component\";\nimport { HtmlQuestionComponent } from \"./questions/html.component\";\nimport { RadiogroupComponent } from \"./questions/radiogroup.component\";\nimport { RadiogroupItemComponent } from \"./questions/radiogroup-item.component\";\nimport { CheckboxComponent } from \"./questions/checkbox.component\";\nimport { CheckboxItemComponent } from \"./questions/checkbox-item.component\";\nimport { DropdownQuestionComponent } from \"./questions/dropdown.component\";\nimport { TagboxQuestionComponent } from \"./questions/tagbox.component\";\nimport { RatingQuestionComponent } from \"./questions/rating.component\";\nimport { BooleanQuestionComponent } from \"./questions/boolean.component\";\nimport { ImagePickerItemComponent } from \"./questions/imagepicker-item.component\";\nimport { ImagePickerQuestionComponent } from \"./questions/imagepicker.component\";\n\nimport { ActionBarComponent } from \"./components/action-bar/action-bar.component\";\nimport { ActionComponent } from \"./components/action-bar/action.component\";\nimport { ActionBarItemComponent } from \"./components/action-bar/action-bar-item.component\";\nimport { ActionBarItemDropdownComponent } from \"./components/action-bar/action-bar-item-dropdown.component\";\nimport { SelectBaseItemComponent } from \"./questions/selectbase-item\";\nimport { SelectBaseComponent } from \"./questions/selectbase.component\";\nimport { SurveyCommentComponent } from \"./comment.component\";\nimport { SurveyCommentOtherComponent } from \"./comment-other.component\";\nimport { ElementHeaderComponent } from \"./components/element-header/element-header.component\";\nimport { ElementTitleActionsComponent } from \"./components/element-title/title-actions.component\";\nimport { ElementTitleComponent } from \"./components/element-title/element-title.component\";\nimport { SurveyHeaderComponent } from \"./components/survey-header/survey-header.component\";\n\nimport { DynamicHeadComponent } from \"./components/element-title/dynamic-head.component\";\nimport { ListComponent } from \"./components/list/list.component\";\nimport { ListItemComponent } from \"./components/list/list-item.component\";\nimport { ListItemContentComponent } from \"./components/list/list-item-content.component\";\nimport { ListItemGroupComponent } from \"./components/list/list-item-group.component\";\nimport { RatingItemComponent } from \"./components/rating/rating-item.component\";\nimport { RatingItemStarComponent } from \"./components/rating/rating-item-star.component\";\nimport { RatingItemSmileyComponent } from \"./components/rating/rating-item-smiley.component\";\nimport { RowComponent } from \"./row.component\";\nimport { RatingDropdownItemComponent } from \"./components/renderAs/rating-dropdown/rating-dropdown-item.component\";\nimport { RatingDropdownComponent } from \"./components/renderAs/rating-dropdown/rating-dropdown.component\";\nimport { BooleanCheckboxComponent } from \"./components/renderAs/boolean-checkbox/boolean-checkbox.component\";\nimport { BooleanRadioComponent } from \"./components/renderAs/boolean-radio/boolean-radio.component\";\nimport { BooleanRadioItemComponent } from \"./components/renderAs/boolean-radio/boolean-radio-item.component\";\nimport { ProgressDefaultComponent } from \"./components/progress/default/progress.component\";\nimport { ProgressButtonsComponent } from \"./components/progress/buttons/progress.component\";\nimport { ProgressTocComponent } from \"./components/progress/toc/progress.component\";\nimport { PanelComponent } from \"./panel.component\";\nimport { PopupService } from \"./components/popup/popup.service\";\nimport { SurveyNavigationButton } from \"./components/survey-actions/survey-nav-btn.component\";\nimport { MatrixQuestionComponent } from \"./questions/matrix.component\";\nimport { SvgIconComponent } from \"./components/svg-icon/svg-icon.component\";\nimport { FileQuestionComponent, } from \"./questions/file.component\";\nimport { VisibleDirective } from \"./utils/ng-show.directive\";\nimport { Key2ClickDirective } from \"./utils/ng-key2click.directive\";\nimport { SafeUrlPipe, SafeResourceUrlPipe } from \"./utils/safe-url.pipe\";\nimport { SafeHtmlPipe } from \"./utils/safe-html.pipe\";\nimport { CommentQuestionComponent } from \"./questions/comment.component\";\nimport { SignaturePadQuestionComponent } from \"./questions/signature.component\";\nimport { MultipleTextComponent } from \"./questions/multipletext.component\";\nimport { ErrorsComponent } from \"./errors.component\";\nimport { MultipleTextItemComponent } from \"./questions/multipletextitem.component\";\nimport { DynamicComponentDirective } from \"./utils/dynamic.directive\";\nimport { RankingQuestionComponent } from \"./questions/ranking.component\";\nimport { RankingItemComponent } from \"./questions/ranking-item.component\";\nimport { RankingItemContentComponent } from \"./questions/ranking-item-content.component\";\nimport { SurveyStringComponent } from \"./survey-string.component\";\nimport { StringEditorComponent } from \"./string-editor.component\";\nimport { PanelDynamicAddBtn } from \"./components/paneldynamic-actions/paneldynamic-add-btn.component\";\nimport { PanelDynamicNextBtn } from \"./components/paneldynamic-actions/paneldynamic-next-btn.component\";\nimport { PanelDynamicPrevBtn } from \"./components/paneldynamic-actions/paneldynamic-prev-btn.component\";\nimport { PanelDynamicProgressText } from \"./components/paneldynamic-actions/paneldynamic-progress-text.component\";\nimport { PanelDynamicQuestionComponent } from \"./questions/paneldynamic.component\";\nimport { EmbeddedViewContentComponent } from \"./embedded-view-content.component\";\nimport { ElementComponent } from \"./element.component\";\nimport { CustomWidgetComponent } from \"./questions/customwidget.component\";\nimport { MatrixCellComponent } from \"./questions/matrixcell.component\";\nimport { MatrixDropdownCellComponent } from \"./questions/matrixdropdowncell.component\";\nimport { MatrixTableComponent } from \"./questions/matrixtable.component\";\nimport { MatrixDropdownComponent } from \"./questions/matrixdropdown.component\";\nimport { MatrixDynamicComponent } from \"./questions/matrixdynamic.component\";\nimport { MatrixDynamicRemoveButtonComponent } from \"./components/matrix-actions/remove-button/remove-button.component\";\nimport { MatrixDynamicDragDropIconComponent } from \"./components/matrix-actions/drag-drop-icon/drag-drop-icon\";\nimport { MatrixDetailButtonComponent } from \"./components/matrix-actions/detail-button/detail-button.component\";\nimport { MatrixRequiredHeader } from \"./questions/matrixrequiredheader.component\";\nimport { ExpressionComponent } from \"./questions/expression.component\";\nimport { ImageQuestionComponent } from \"./questions/image.component\";\nimport { BrandInfoComponent } from \"./components/brand-info/brand-info.component\";\nimport { QuestionErrorComponent } from \"./components/question-error/question-error.component\";\nimport { CustomQuestionComponent } from \"./questions/custom.component\";\nimport { CompositeQuestionComponent } from \"./questions/composite.component\";\nimport { SurveyContentComponent } from \"./survey-content.component\";\nimport { TemplateRendererComponent } from \"./template-renderer.component\";\nimport { ModalComponent } from \"./components/popup/modal-container.component\";\nimport { ButtonGroupQuestionComponent } from \"./questions/button-group/button-group.component\";\nimport { ButtonGroupItemComponent } from \"./questions/button-group/button-group-item.component\";\nimport { MatrixRowComponent } from \"./questions/matrix-row.component\";\nimport { LogoImageComponent } from \"./components/survey-header/logo-image.component\";\nimport { SkeletonComponent } from \"./components/skeleton/skeleton.component\";\nimport { PaneldynamicRemoveButtonComponent } from \"./components/paneldynamic-actions/paneldynamic-remove-btn.component\";\nimport { TimerPanelComponent } from \"./components/timer-panel/timer-panel.component\";\nimport { NotifierComponent } from \"./components/notifier/notifier.component\";\nimport { ComponentsContainerComponent } from \"./components-container.component\";\nimport { MultipleTextRowComponent } from \"./questions/multipletextrow.component\";\nimport { LoadingIndicatorComponent } from \"./angular-ui\";\nimport { HeaderComponent } from \"./components/header/header.component\";\nimport { HeaderCellComponent } from \"./components/header/header-cell.component\";\nimport { HeaderMobileComponent } from \"./components/header/header-mobile.component\";\nimport { ChooseFileBtn } from \"./components/file/choose-file.component\";\nimport { FilePreviewComponent } from \"./components/file/file-preview.component\";\nimport { FileItemComponent } from \"./components/file/file-item.component\";\nimport { FilePageComponent } from \"./components/file/file-page.component\";\nimport { SvgBundleComponent } from \"./svgbundle.component\";\n\n@NgModule({\n  declarations: [\n    VisibleDirective, Key2ClickDirective, PanelDynamicAddBtn, PanelDynamicNextBtn, PanelDynamicPrevBtn, PanelDynamicProgressText, ElementComponent, TemplateRendererComponent,\n    SurveyComponent, SurveyContentComponent, PopupSurveyComponent, PageComponent, PanelComponent, QuestionComponent, StringViewerComponent, SurveyStringComponent, StringEditorComponent,\n    TextAreaComponent,\n    QuestionSkeletonComponent, TextQuestionComponent, RadiogroupComponent, RadiogroupItemComponent, CheckboxComponent, CheckboxItemComponent,\n    DropdownComponent, DropdownQuestionComponent, DropdownSelectComponent, DropdownOptionItemComponent,\n    PopupComponent, PopupBaseContainerComponent, PopupPointerComponent,\n    CharacterCounterComponent, ListComponent, ListItemComponent, ListItemContentComponent, ListItemGroupComponent, RatingItemComponent, RatingItemStarComponent, RatingItemSmileyComponent,\n    TagboxFilterComponent, TagboxComponent, TagboxQuestionComponent, TagboxItemComponent,\n    ActionBarComponent, ActionComponent, ActionBarItemComponent, ActionBarItemDropdownComponent, HtmlQuestionComponent,\n    SelectBaseItemComponent, SelectBaseComponent, SurveyCommentComponent, SurveyCommentOtherComponent, ElementHeaderComponent, ElementTitleActionsComponent, ElementTitleComponent, DynamicHeadComponent, RowComponent,\n    RatingQuestionComponent, RatingDropdownItemComponent, RatingDropdownComponent, BooleanQuestionComponent, BooleanCheckboxComponent, BooleanRadioComponent, BooleanRadioItemComponent, ImagePickerItemComponent, ImagePickerQuestionComponent, ImageQuestionComponent,\n    SurveyHeaderComponent, ProgressDefaultComponent, ProgressButtonsComponent, ProgressTocComponent, SurveyNavigationButton, MatrixQuestionComponent, SvgIconComponent, FileQuestionComponent, SafeUrlPipe, SafeHtmlPipe, CommentQuestionComponent, SignaturePadQuestionComponent, ErrorsComponent,\n    MultipleTextComponent, MultipleTextItemComponent, DynamicComponentDirective, RankingQuestionComponent, RankingItemComponent, RankingItemContentComponent, PanelDynamicQuestionComponent, EmbeddedViewContentComponent, CustomWidgetComponent,\n    MatrixCellComponent, MatrixDropdownCellComponent, MatrixTableComponent, MatrixDropdownComponent,\n    MatrixDynamicComponent, MatrixDetailButtonComponent, MatrixDynamicRemoveButtonComponent, MatrixDynamicDragDropIconComponent, MatrixRequiredHeader, ExpressionComponent, SafeResourceUrlPipe, BrandInfoComponent, QuestionErrorComponent,\n    CustomQuestionComponent, CompositeQuestionComponent, ButtonGroupItemComponent, ButtonGroupQuestionComponent, MatrixRowComponent, ModalComponent, LogoImageComponent, SkeletonComponent, TimerPanelComponent, PaneldynamicRemoveButtonComponent,\n    NotifierComponent, ComponentsContainerComponent, MultipleTextRowComponent, LoadingIndicatorComponent, HeaderComponent, HeaderCellComponent, HeaderMobileComponent, ChooseFileBtn, FilePreviewComponent, SvgBundleComponent, FileItemComponent, FilePageComponent\n  ],\n  imports: [\n    CommonModule, FormsModule\n  ],\n  exports: [\n    VisibleDirective, Key2ClickDirective, PanelDynamicAddBtn, PanelDynamicNextBtn, PanelDynamicPrevBtn, PanelDynamicProgressText, ElementComponent, TemplateRendererComponent,\n    SurveyComponent, SurveyContentComponent, PopupSurveyComponent, PageComponent, PanelComponent, QuestionComponent, StringViewerComponent, SurveyStringComponent, StringEditorComponent,\n    TextAreaComponent,\n    QuestionSkeletonComponent, TextQuestionComponent, RadiogroupComponent, RadiogroupItemComponent, CheckboxComponent, CheckboxItemComponent,\n    CharacterCounterComponent,\n    DropdownComponent, DropdownQuestionComponent, DropdownSelectComponent, DropdownOptionItemComponent,\n    PopupComponent, PopupBaseContainerComponent, PopupPointerComponent,\n    CharacterCounterComponent, ListComponent, ListItemComponent, ListItemContentComponent, ListItemGroupComponent, RatingItemComponent, RatingItemStarComponent, RatingItemSmileyComponent,\n    TagboxFilterComponent, TagboxComponent, TagboxQuestionComponent, TagboxItemComponent,\n    ActionBarComponent, ActionComponent, ActionBarItemComponent, ActionBarItemDropdownComponent, HtmlQuestionComponent,\n    SelectBaseItemComponent, SelectBaseComponent, SurveyCommentComponent, SurveyCommentOtherComponent, ElementHeaderComponent, ElementTitleComponent, DynamicHeadComponent, RowComponent,\n    RatingQuestionComponent, RatingDropdownItemComponent, RatingDropdownComponent, BooleanQuestionComponent, BooleanCheckboxComponent, BooleanRadioComponent, BooleanRadioItemComponent, ImagePickerItemComponent, ImagePickerQuestionComponent, ImageQuestionComponent,\n    SurveyHeaderComponent, ProgressDefaultComponent, ProgressButtonsComponent, SurveyNavigationButton, MatrixQuestionComponent, SvgIconComponent, FileQuestionComponent, SafeUrlPipe, SafeHtmlPipe, CommentQuestionComponent, SignaturePadQuestionComponent, ErrorsComponent,\n    MultipleTextComponent, MultipleTextItemComponent, DynamicComponentDirective, RankingQuestionComponent, RankingItemComponent, RankingItemContentComponent, PanelDynamicQuestionComponent, EmbeddedViewContentComponent, CustomWidgetComponent,\n    MatrixCellComponent, MatrixDropdownCellComponent, MatrixTableComponent, MatrixDropdownComponent,\n    MatrixDynamicComponent, MatrixDetailButtonComponent, MatrixDynamicRemoveButtonComponent, MatrixDynamicDragDropIconComponent, MatrixRequiredHeader, ExpressionComponent, SafeResourceUrlPipe,\n    CustomQuestionComponent, CompositeQuestionComponent, ButtonGroupQuestionComponent, ModalComponent, LogoImageComponent, SkeletonComponent, TimerPanelComponent, PaneldynamicRemoveButtonComponent,\n    NotifierComponent, ComponentsContainerComponent, MultipleTextRowComponent, LoadingIndicatorComponent, HeaderComponent, HeaderCellComponent, HeaderMobileComponent, FilePreviewComponent, SvgBundleComponent, FileItemComponent, FilePageComponent\n  ],\n  providers: [PopupService],\n})\nexport class SurveyModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './angular-ui';\n"],"names":["i1","i2.DynamicComponentDirective","i1.ActionComponent","i1.ActionBarComponent","i2.VisibleDirective","i3","i4.DynamicComponentDirective","i1.PopupService","i1.DynamicComponentDirective","i2.SurveyStringComponent","i1.DynamicHeadComponent","i2.SvgIconComponent","i3.ElementTitleActionsComponent","i4","i1.ElementTitleComponent","i1.ElementComponent","i3.DynamicComponentDirective","i3.ErrorsComponent","i4.RowComponent","i5","i6.DynamicComponentDirective","i1.SvgBundleComponent","i2.SurveyHeaderComponent","i3.PageComponent","i4.BrandInfoComponent","i5.NotifierComponent","i6","i7","i8.DynamicComponentDirective","i9.SafeHtmlPipe","i1.ModalComponent","i2.SurveyContentComponent","i1.SvgIconComponent","i2.SurveyComponent","i3.ActionBarComponent","i1.ErrorsComponent","i2.ElementHeaderComponent","i3.SurveyStringComponent","i4.SurveyCommentComponent","i7.VisibleDirective","i2.SafeHtmlPipe","i1.PopupBaseContainerComponent","i1.SurveyStringComponent","i3.PopupComponent","i5.DynamicComponentDirective","i2","i1.TagboxItemComponent","i4.SurveyStringComponent","i2.SurveyCommentOtherComponent","i1.SafeUrlPipe","i1.CharacterCounterComponent","i1.SafeHtmlPipe","i1.SurveyCommentOtherComponent","i1.DropdownComponent","i1.TagboxComponent","i1.ButtonGroupItemComponent","i2.Key2ClickDirective","i2.PopupComponent","i3.Key2ClickDirective","i1.CheckboxItemComponent","i2.RadiogroupItemComponent","i1.Key2ClickDirective","i2.ListItemComponent","i5.VisibleDirective","i1.ListItemContentComponent","i1.ElementTitleActionsComponent","i1.BooleanRadioItemComponent","i1.ListComponent","i3.RowComponent","i4.ActionBarComponent","i3.SafeUrlPipe","i1.FileItemComponent","i1.FilePageComponent","i2.FileItemComponent","i2.ChooseFileBtn","i4.LoadingIndicatorComponent","i5.SvgIconComponent","i6.ActionComponent","i3.LoadingIndicatorComponent","i4.VisibleDirective","i2.TextQuestionComponent","i1.MultipleTextItemComponent","i1.MultipleTextRowComponent","i2.PanelDynamicAddBtn","i4.PanelDynamicPrevBtn","i5.PanelDynamicNextBtn","i6.PanelDynamicProgressText","i3.SafeHtmlPipe","i1.MatrixDynamicDragDropIconComponent","i2.ActionBarComponent","i5.SelectBaseItemComponent","i6.SurveyCommentOtherComponent","i9.VisibleDirective","i1.MatrixDropdownCellComponent","i2.MatrixRequiredHeader","i3.MatrixRowComponent","i4.MatrixDropdownCellComponent","i1.MatrixTableComponent","i3.VisibleDirective","i4.SafeResourceUrlPipe","i1.PanelComponent","i1.HeaderCellComponent","i2.HeaderMobileComponent"],"mappings":"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"}