import { Component, Input } from "@angular/core";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "./utils/dynamic.directive";
export class SurveyCommentOtherComponent {
    constructor() {
    }
    get otherValue() {
        const val = this.question.otherValue;
        return !!val ? val : "";
    }
    get textAreaModel() {
        return this.question.otherTextAreaModel;
    }
}
SurveyCommentOtherComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: SurveyCommentOtherComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
SurveyCommentOtherComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: SurveyCommentOtherComponent, selector: "sv-ng-comment-other, '[sv-ng-comment-other]'", inputs: { question: "question" }, ngImport: i0, template: "<ng-container *ngIf=\"!question.isReadOnlyRenderDiv()\">\n  <ng-template [component]=\"{ name: 'sv-text-area', data: { model: textAreaModel } }\"></ng-template>\n</ng-container>\n<div *ngIf=\"question.isReadOnlyRenderDiv()\">{{ otherValue }}</div>\n", directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.DynamicComponentDirective, selector: "[component]", inputs: ["component"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: SurveyCommentOtherComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "sv-ng-comment-other, '[sv-ng-comment-other]'",
                    templateUrl: "./comment-other.component.html",
                }]
        }], ctorParameters: function () { return []; }, propDecorators: { question: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWVudC1vdGhlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29tbWVudC1vdGhlci5jb21wb25lbnQudHMiLCIuLi8uLi9zcmMvY29tbWVudC1vdGhlci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7OztBQU9qRCxNQUFNLE9BQU8sMkJBQTJCO0lBRXRDO0lBQ0EsQ0FBQztJQUNELElBQVcsVUFBVTtRQUNuQixNQUFNLEdBQUcsR0FBd0IsSUFBSSxDQUFDLFFBQVMsQ0FBQyxVQUFVLENBQUM7UUFDM0QsT0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUMxQixDQUFDO0lBQ0QsSUFBVyxhQUFhO1FBQ3RCLE9BQTRCLElBQUksQ0FBQyxRQUFTLENBQUMsa0JBQWtCLENBQUM7SUFDaEUsQ0FBQzs7eUhBVlUsMkJBQTJCOzZHQUEzQiwyQkFBMkIsc0hDUHhDLDJQQUlBOzRGREdhLDJCQUEyQjtrQkFKdkMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsOENBQThDO29CQUN4RCxXQUFXLEVBQUUsZ0NBQWdDO2lCQUM5QzswRUFFVSxRQUFRO3NCQUFoQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBRdWVzdGlvbiwgUXVlc3Rpb25TZWxlY3RCYXNlLCBUZXh0QXJlYU1vZGVsIH0gZnJvbSBcInN1cnZleS1jb3JlXCI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogXCJzdi1uZy1jb21tZW50LW90aGVyLCAnW3N2LW5nLWNvbW1lbnQtb3RoZXJdJ1wiLFxuICB0ZW1wbGF0ZVVybDogXCIuL2NvbW1lbnQtb3RoZXIuY29tcG9uZW50Lmh0bWxcIixcbn0pXG5leHBvcnQgY2xhc3MgU3VydmV5Q29tbWVudE90aGVyQ29tcG9uZW50IHtcbiAgQElucHV0KCkgcXVlc3Rpb24hOiBRdWVzdGlvbjtcbiAgY29uc3RydWN0b3IoKSB7XG4gIH1cbiAgcHVibGljIGdldCBvdGhlclZhbHVlKCk6IHN0cmluZyB7XG4gICAgY29uc3QgdmFsID0gKDxRdWVzdGlvblNlbGVjdEJhc2U+dGhpcy5xdWVzdGlvbikub3RoZXJWYWx1ZTtcbiAgICByZXR1cm4gISF2YWwgPyB2YWwgOiBcIlwiO1xuICB9XG4gIHB1YmxpYyBnZXQgdGV4dEFyZWFNb2RlbCgpOiBUZXh0QXJlYU1vZGVsIHtcbiAgICByZXR1cm4gKDxRdWVzdGlvblNlbGVjdEJhc2U+dGhpcy5xdWVzdGlvbikub3RoZXJUZXh0QXJlYU1vZGVsO1xuICB9XG59IiwiPG5nLWNvbnRhaW5lciAqbmdJZj1cIiFxdWVzdGlvbi5pc1JlYWRPbmx5UmVuZGVyRGl2KClcIj5cbiAgPG5nLXRlbXBsYXRlIFtjb21wb25lbnRdPVwieyBuYW1lOiAnc3YtdGV4dC1hcmVhJywgZGF0YTogeyBtb2RlbDogdGV4dEFyZWFNb2RlbCB9IH1cIj48L25nLXRlbXBsYXRlPlxuPC9uZy1jb250YWluZXI+XG48ZGl2ICpuZ0lmPVwicXVlc3Rpb24uaXNSZWFkT25seVJlbmRlckRpdigpXCI+e3sgb3RoZXJWYWx1ZSB9fTwvZGl2PlxuIl19