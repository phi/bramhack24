import { Component, Input, ViewChild, ViewContainerRef } from "@angular/core";
import { EmbeddedViewContentComponent } from "../../embedded-view-content.component";
import { AngularComponentFactory } from "../../component-factory";
import * as i0 from "@angular/core";
import * as i1 from "../element-title/element-title.component";
import * as i2 from "../../survey-string.component";
import * as i3 from "@angular/common";
import * as i4 from "../../utils/dynamic.directive";
export class CoverCellComponent extends EmbeddedViewContentComponent {
}
CoverCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: CoverCellComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
CoverCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: CoverCellComponent, selector: "sv-ng-cover-cell", inputs: { model: "model" }, viewQueries: [{ propertyName: "actionContent", first: true, predicate: ["actionContent"], descendants: true, read: ViewContainerRef, static: true }], usesInheritance: true, ngImport: i0, template: "\n<ng-template #template>\n  <div [class]=\"model.css\" [style]=\"model.style\">\n    <div class=\"sv-cover__cell-content\" [style]=\"model.contentStyle\">\n      <div *ngIf=\"model.showLogo\" class=\"sv-cover__logo\">\n        <div [class]=\"model.survey.logoClassNames\">\n          <ng-template [component]=\"{ name: model.survey.getElementWrapperComponentName(model.survey, 'logo-image'), data: { data: model.survey.getElementWrapperComponentData(model.survey, 'logo-image') } }\"></ng-template>\n        </div>\n      </div>\n      <div *ngIf=\"model.showTitle\" class=\"sv-cover__title\" [style]=\"{ maxWidth: model.textAreaWidth }\">\n        <sv-ng-element-title [element]=\"model.survey\"></sv-ng-element-title>\n      </div>\n      <div *ngIf=\"model.showDescription\" class=\"sv-cover__description\" [style]=\"{ maxWidth: model.textAreaWidth }\">\n        <h5 *ngIf=\"model.survey.renderedHasDescription\" [class]=\"model.survey.css.description\" [model]=\"model.survey.locDescription\" sv-ng-string></h5>\n      </div>\n    </div>\n  </div>\n</ng-template>", styles: [":host { display: none; }"], components: [{ type: i1.ElementTitleComponent, selector: "sv-ng-element-title", inputs: ["element"] }, { type: i2.SurveyStringComponent, selector: "sv-ng-string, '[sv-ng-string]'", inputs: ["model"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.DynamicComponentDirective, selector: "[component]", inputs: ["component"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: CoverCellComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "sv-ng-cover-cell",
                    templateUrl: "./cover-cell.component.html",
                    styles: [":host { display: none; }"],
                }]
        }], propDecorators: { model: [{
                type: Input
            }], actionContent: [{
                type: ViewChild,
                args: ["actionContent", { read: ViewContainerRef, static: true }]
            }] } });
AngularComponentFactory.Instance.registerComponent("sv-cover-cell", CoverCellComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY292ZXItY2VsbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9jb3Zlci9jb3Zlci1jZWxsLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2NvdmVyL2NvdmVyLWNlbGwuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTlFLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQ3JGLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDOzs7Ozs7QUFRbEUsTUFBTSxPQUFPLGtCQUFtQixTQUFRLDRCQUE0Qjs7Z0hBQXZELGtCQUFrQjtvR0FBbEIsa0JBQWtCLCtLQUVPLGdCQUFnQixrRUNidEQsOGlDQWlCYzs0RkRORCxrQkFBa0I7a0JBTDlCLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLGtCQUFrQjtvQkFDNUIsV0FBVyxFQUFFLDZCQUE2QjtvQkFDMUMsTUFBTSxFQUFFLENBQUMsMEJBQTBCLENBQUM7aUJBQ3JDOzhCQUVVLEtBQUs7c0JBQWIsS0FBSztnQkFDZ0UsYUFBYTtzQkFBbEYsU0FBUzt1QkFBQyxlQUFlLEVBQUUsRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTs7QUFHdEUsdUJBQXVCLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLGVBQWUsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgVmlld0NoaWxkLCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEJhc2VBbmd1bGFyIH0gZnJvbSBcIi4uLy4uL2Jhc2UtYW5ndWxhclwiO1xuaW1wb3J0IHsgRW1iZWRkZWRWaWV3Q29udGVudENvbXBvbmVudCB9IGZyb20gXCIuLi8uLi9lbWJlZGRlZC12aWV3LWNvbnRlbnQuY29tcG9uZW50XCI7XG5pbXBvcnQgeyBBbmd1bGFyQ29tcG9uZW50RmFjdG9yeSB9IGZyb20gXCIuLi8uLi9jb21wb25lbnQtZmFjdG9yeVwiO1xuaW1wb3J0IHsgQ292ZXIsIENvdmVyQ2VsbCwgU3VydmV5TW9kZWwgfSBmcm9tIFwic3VydmV5LWNvcmVcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBcInN2LW5nLWNvdmVyLWNlbGxcIixcbiAgdGVtcGxhdGVVcmw6IFwiLi9jb3Zlci1jZWxsLmNvbXBvbmVudC5odG1sXCIsXG4gIHN0eWxlczogW1wiOmhvc3QgeyBkaXNwbGF5OiBub25lOyB9XCJdLFxufSlcbmV4cG9ydCBjbGFzcyBDb3ZlckNlbGxDb21wb25lbnQgZXh0ZW5kcyBFbWJlZGRlZFZpZXdDb250ZW50Q29tcG9uZW50IHtcbiAgQElucHV0KCkgbW9kZWwhOiBDb3ZlckNlbGw7XG4gIEBWaWV3Q2hpbGQoXCJhY3Rpb25Db250ZW50XCIsIHsgcmVhZDogVmlld0NvbnRhaW5lclJlZiwgc3RhdGljOiB0cnVlIH0pIGFjdGlvbkNvbnRlbnQhOiBWaWV3Q29udGFpbmVyUmVmO1xufVxuXG5Bbmd1bGFyQ29tcG9uZW50RmFjdG9yeS5JbnN0YW5jZS5yZWdpc3RlckNvbXBvbmVudChcInN2LWNvdmVyLWNlbGxcIiwgQ292ZXJDZWxsQ29tcG9uZW50KTsiLCJcbjxuZy10ZW1wbGF0ZSAjdGVtcGxhdGU+XG4gIDxkaXYgW2NsYXNzXT1cIm1vZGVsLmNzc1wiIFtzdHlsZV09XCJtb2RlbC5zdHlsZVwiPlxuICAgIDxkaXYgY2xhc3M9XCJzdi1jb3Zlcl9fY2VsbC1jb250ZW50XCIgW3N0eWxlXT1cIm1vZGVsLmNvbnRlbnRTdHlsZVwiPlxuICAgICAgPGRpdiAqbmdJZj1cIm1vZGVsLnNob3dMb2dvXCIgY2xhc3M9XCJzdi1jb3Zlcl9fbG9nb1wiPlxuICAgICAgICA8ZGl2IFtjbGFzc109XCJtb2RlbC5zdXJ2ZXkubG9nb0NsYXNzTmFtZXNcIj5cbiAgICAgICAgICA8bmctdGVtcGxhdGUgW2NvbXBvbmVudF09XCJ7IG5hbWU6IG1vZGVsLnN1cnZleS5nZXRFbGVtZW50V3JhcHBlckNvbXBvbmVudE5hbWUobW9kZWwuc3VydmV5LCAnbG9nby1pbWFnZScpLCBkYXRhOiB7IGRhdGE6IG1vZGVsLnN1cnZleS5nZXRFbGVtZW50V3JhcHBlckNvbXBvbmVudERhdGEobW9kZWwuc3VydmV5LCAnbG9nby1pbWFnZScpIH0gfVwiPjwvbmctdGVtcGxhdGU+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2ICpuZ0lmPVwibW9kZWwuc2hvd1RpdGxlXCIgY2xhc3M9XCJzdi1jb3Zlcl9fdGl0bGVcIiBbc3R5bGVdPVwieyBtYXhXaWR0aDogbW9kZWwudGV4dEFyZWFXaWR0aCB9XCI+XG4gICAgICAgIDxzdi1uZy1lbGVtZW50LXRpdGxlIFtlbGVtZW50XT1cIm1vZGVsLnN1cnZleVwiPjwvc3YtbmctZWxlbWVudC10aXRsZT5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiAqbmdJZj1cIm1vZGVsLnNob3dEZXNjcmlwdGlvblwiIGNsYXNzPVwic3YtY292ZXJfX2Rlc2NyaXB0aW9uXCIgW3N0eWxlXT1cInsgbWF4V2lkdGg6IG1vZGVsLnRleHRBcmVhV2lkdGggfVwiPlxuICAgICAgICA8aDUgKm5nSWY9XCJtb2RlbC5zdXJ2ZXkucmVuZGVyZWRIYXNEZXNjcmlwdGlvblwiIFtjbGFzc109XCJtb2RlbC5zdXJ2ZXkuY3NzLmRlc2NyaXB0aW9uXCIgW21vZGVsXT1cIm1vZGVsLnN1cnZleS5sb2NEZXNjcmlwdGlvblwiIHN2LW5nLXN0cmluZz48L2g1PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9uZy10ZW1wbGF0ZT4iXX0=