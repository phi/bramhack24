import { Component, Input } from "@angular/core";
import { AngularComponentFactory } from "../../../component-factory";
import { EmbeddedViewContentComponent } from "../../../embedded-view-content.component";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class MatrixDynamicDragDropIconComponent extends EmbeddedViewContentComponent {
    get question() {
        return this.model.data.question;
    }
}
MatrixDynamicDragDropIconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: MatrixDynamicDragDropIconComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
MatrixDynamicDragDropIconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: MatrixDynamicDragDropIconComponent, selector: "sv-ng-matrix-drag-drop-icon", inputs: { model: "model" }, usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n  <div>\n    <svg *ngIf=\"question.iconDragElement\" [class]=\"question.cssClasses.dragElementDecorator\">\n      <use [attr.xlink:href]=\"question.iconDragElement\"></use>\n    </svg>\n    <span *ngIf=\"!question.iconDragElement\" data-bind=\"css: question.cssClasses.iconDrag\"></span>\n  </div>\n</ng-template>", styles: [":host{display:none}\n"], directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: MatrixDynamicDragDropIconComponent, decorators: [{
            type: Component,
            args: [{
                    templateUrl: "drag-drop-icon.component.html",
                    selector: "sv-ng-matrix-drag-drop-icon",
                    styleUrls: ["../../../hide-host.scss"]
                }]
        }], propDecorators: { model: [{
                type: Input
            }] } });
AngularComponentFactory.Instance.registerComponent("sv-matrix-drag-drop-icon", MatrixDynamicDragDropIconComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy1kcm9wLWljb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9tYXRyaXgtYWN0aW9ucy9kcmFnLWRyb3AtaWNvbi9kcmFnLWRyb3AtaWNvbi50cyIsIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL21hdHJpeC1hY3Rpb25zL2RyYWctZHJvcC1pY29uL2RyYWctZHJvcC1pY29uLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRXJFLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLDBDQUEwQyxDQUFDOzs7QUFPeEYsTUFBTSxPQUFPLGtDQUFtQyxTQUFRLDRCQUE0QjtJQUdsRixJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUNsQyxDQUFDOztnSUFMVSxrQ0FBa0M7b0hBQWxDLGtDQUFrQyxzSENWL0Msb1ZBT2M7NEZER0Qsa0NBQWtDO2tCQUw5QyxTQUFTO21CQUFDO29CQUNULFdBQVcsRUFBRSwrQkFBK0I7b0JBQzVDLFFBQVEsRUFBRSw2QkFBNkI7b0JBQ3ZDLFNBQVMsRUFBRSxDQUFDLHlCQUF5QixDQUFDO2lCQUN2Qzs4QkFFaUIsS0FBSztzQkFBcEIsS0FBSzs7QUFPUix1QkFBdUIsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQ2hELDBCQUEwQixFQUMxQixrQ0FBa0MsQ0FDbkMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgQW5ndWxhckNvbXBvbmVudEZhY3RvcnkgfSBmcm9tIFwiLi4vLi4vLi4vY29tcG9uZW50LWZhY3RvcnlcIjtcbmltcG9ydCB7IElBY3Rpb24gfSBmcm9tIFwic3VydmV5LWNvcmVcIjtcbmltcG9ydCB7IEVtYmVkZGVkVmlld0NvbnRlbnRDb21wb25lbnQgfSBmcm9tIFwiLi4vLi4vLi4vZW1iZWRkZWQtdmlldy1jb250ZW50LmNvbXBvbmVudFwiO1xuXG5AQ29tcG9uZW50KHtcbiAgdGVtcGxhdGVVcmw6IFwiZHJhZy1kcm9wLWljb24uY29tcG9uZW50Lmh0bWxcIixcbiAgc2VsZWN0b3I6IFwic3YtbmctbWF0cml4LWRyYWctZHJvcC1pY29uXCIsXG4gIHN0eWxlVXJsczogW1wiLi4vLi4vLi4vaGlkZS1ob3N0LnNjc3NcIl1cbn0pXG5leHBvcnQgY2xhc3MgTWF0cml4RHluYW1pY0RyYWdEcm9wSWNvbkNvbXBvbmVudCBleHRlbmRzIEVtYmVkZGVkVmlld0NvbnRlbnRDb21wb25lbnQge1xuICBASW5wdXQoKSBwdWJsaWMgbW9kZWwhOiBJQWN0aW9uO1xuXG4gIGdldCBxdWVzdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5tb2RlbC5kYXRhLnF1ZXN0aW9uO1xuICB9XG59XG5cbkFuZ3VsYXJDb21wb25lbnRGYWN0b3J5Lkluc3RhbmNlLnJlZ2lzdGVyQ29tcG9uZW50KFxuICBcInN2LW1hdHJpeC1kcmFnLWRyb3AtaWNvblwiLFxuICBNYXRyaXhEeW5hbWljRHJhZ0Ryb3BJY29uQ29tcG9uZW50XG4pO1xuIiwiPG5nLXRlbXBsYXRlICN0ZW1wbGF0ZT5cbiAgPGRpdj5cbiAgICA8c3ZnICpuZ0lmPVwicXVlc3Rpb24uaWNvbkRyYWdFbGVtZW50XCIgW2NsYXNzXT1cInF1ZXN0aW9uLmNzc0NsYXNzZXMuZHJhZ0VsZW1lbnREZWNvcmF0b3JcIj5cbiAgICAgIDx1c2UgW2F0dHIueGxpbms6aHJlZl09XCJxdWVzdGlvbi5pY29uRHJhZ0VsZW1lbnRcIj48L3VzZT5cbiAgICA8L3N2Zz5cbiAgICA8c3BhbiAqbmdJZj1cIiFxdWVzdGlvbi5pY29uRHJhZ0VsZW1lbnRcIiBkYXRhLWJpbmQ9XCJjc3M6IHF1ZXN0aW9uLmNzc0NsYXNzZXMuaWNvbkRyYWdcIj48L3NwYW4+XG4gIDwvZGl2PlxuPC9uZy10ZW1wbGF0ZT4iXX0=