import { Component, Input } from "@angular/core";
import { EmbeddedViewContentComponent } from "../../embedded-view-content.component";
import * as i0 from "@angular/core";
import * as i1 from "../svg-icon/svg-icon.component";
import * as i2 from "@angular/common";
import * as i3 from "../../utils/safe-url.pipe";
export class FileItemComponent extends EmbeddedViewContentComponent {
}
FileItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: FileItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
FileItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: FileItemComponent, selector: "sv-ng-file-item", inputs: { item: "item", question: "question" }, usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n    <span [class]=\"question.cssClasses.previewItem\" (click)=\"question.doDownloadFileFromContainer($event)\">\n        <div *ngIf=\"item.name && question.cssClasses.fileSign\" [class]=\"question.cssClasses.fileSign\">\n            <a (click)=\"question.doDownloadFile($event, item)\" [attr.href]=\"item.content | safeUrl\"\n                [attr.title]=\"item.name\" [attr.download]=\"item.name\" [style.width]=\"question.imageWidth\">{{\n                item.name\n                }}</a>\n        </div>\n        <div [class]=\"question.getImageWrapperCss(item)\">\n            <img *ngIf=\"question.canPreviewImage(item)\" [attr.src]=\"item.content | safeUrl\"\n                [style.height]=\"question.imageHeight\" [style.width]=\"question.imageWidth\" alt=\"File preview\" />\n            <svg *ngIf=\"question.defaultImage(item)\" [iconName]=\"question.cssClasses.defaultImageIconId\"\n                [partCss]=\"question.cssClasses.defaultImage\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n            <div *ngIf=\"item.name && !question.isReadOnly\" [class]=\"question.getRemoveButtonCss()\"\n                (click)=\"question.doRemoveFile(item, $event)\">\n                <span [class]=\"question.cssClasses.removeFile\">{{ question.removeFileCaption }}</span>\n                <svg *ngIf=\"question.cssClasses.removeFileSvgIconId\" [title]=\"question.removeFileCaption\"\n                    [partCss]=\"question.cssClasses.removeFileSvg\" [iconName]=\"question.cssClasses.removeFileSvgIconId\"\n                    [size]=\"'auto'\" sv-ng-svg-icon></svg>\n            </div>\n        </div>\n        <div *ngIf=\"item.name && question.cssClasses.fileSignBottom\" [class]=\"question.cssClasses.fileSignBottom\">\n            <a (click)=\"question.doDownloadFile($event, item)\" [attr.href]=\"item.content | safeUrl\"\n                [attr.title]=\"item.name\" [attr.download]=\"item.name\" [style.width]=\"question.imageWidth\">{{\n                item.name\n                }}</a>\n        </div>\n    </span>\n</ng-template>", styles: [":host{display:none}\n"], components: [{ type: i1.SvgIconComponent, selector: "'[sv-ng-svg-icon]'", inputs: ["size", "width", "height", "iconName", "partCss", "css", "title"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "safeUrl": i3.SafeUrlPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: FileItemComponent, decorators: [{
            type: Component,
            args: [{
                    templateUrl: "./file-item.component.html",
                    selector: "sv-ng-file-item",
                    styleUrls: ["../../hide-host.scss"]
                }]
        }], propDecorators: { item: [{
                type: Input
            }], question: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2ZpbGUvZmlsZS1pdGVtLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2ZpbGUvZmlsZS1pdGVtLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDOzs7OztBQVFyRixNQUFNLE9BQU8saUJBQWtCLFNBQVEsNEJBQTRCOzsrR0FBdEQsaUJBQWlCO21HQUFqQixpQkFBaUIsOEhDVDlCLG9oRUE0QmM7NEZEbkJELGlCQUFpQjtrQkFMN0IsU0FBUzttQkFBQztvQkFDVCxXQUFXLEVBQUUsNEJBQTRCO29CQUN6QyxRQUFRLEVBQUUsaUJBQWlCO29CQUMzQixTQUFTLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQztpQkFDcEM7OEJBRVksSUFBSTtzQkFBWixLQUFLO2dCQUNHLFFBQVE7c0JBQWhCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEVtYmVkZGVkVmlld0NvbnRlbnRDb21wb25lbnQgfSBmcm9tIFwiLi4vLi4vZW1iZWRkZWQtdmlldy1jb250ZW50LmNvbXBvbmVudFwiO1xuaW1wb3J0IHsgUXVlc3Rpb25GaWxlTW9kZWwgfSBmcm9tIFwic3VydmV5LWNvcmVcIjtcblxuQENvbXBvbmVudCh7XG4gIHRlbXBsYXRlVXJsOiBcIi4vZmlsZS1pdGVtLmNvbXBvbmVudC5odG1sXCIsXG4gIHNlbGVjdG9yOiBcInN2LW5nLWZpbGUtaXRlbVwiLFxuICBzdHlsZVVybHM6IFtcIi4uLy4uL2hpZGUtaG9zdC5zY3NzXCJdXG59KVxuZXhwb3J0IGNsYXNzIEZpbGVJdGVtQ29tcG9uZW50IGV4dGVuZHMgRW1iZWRkZWRWaWV3Q29udGVudENvbXBvbmVudCB7XG4gICAgQElucHV0KCkgaXRlbSE6IGFueTtcbiAgICBASW5wdXQoKSBxdWVzdGlvbiE6IFF1ZXN0aW9uRmlsZU1vZGVsO1xufSIsIjxuZy10ZW1wbGF0ZSAjdGVtcGxhdGU+XG4gICAgPHNwYW4gW2NsYXNzXT1cInF1ZXN0aW9uLmNzc0NsYXNzZXMucHJldmlld0l0ZW1cIiAoY2xpY2spPVwicXVlc3Rpb24uZG9Eb3dubG9hZEZpbGVGcm9tQ29udGFpbmVyKCRldmVudClcIj5cbiAgICAgICAgPGRpdiAqbmdJZj1cIml0ZW0ubmFtZSAmJiBxdWVzdGlvbi5jc3NDbGFzc2VzLmZpbGVTaWduXCIgW2NsYXNzXT1cInF1ZXN0aW9uLmNzc0NsYXNzZXMuZmlsZVNpZ25cIj5cbiAgICAgICAgICAgIDxhIChjbGljayk9XCJxdWVzdGlvbi5kb0Rvd25sb2FkRmlsZSgkZXZlbnQsIGl0ZW0pXCIgW2F0dHIuaHJlZl09XCJpdGVtLmNvbnRlbnQgfCBzYWZlVXJsXCJcbiAgICAgICAgICAgICAgICBbYXR0ci50aXRsZV09XCJpdGVtLm5hbWVcIiBbYXR0ci5kb3dubG9hZF09XCJpdGVtLm5hbWVcIiBbc3R5bGUud2lkdGhdPVwicXVlc3Rpb24uaW1hZ2VXaWR0aFwiPnt7XG4gICAgICAgICAgICAgICAgaXRlbS5uYW1lXG4gICAgICAgICAgICAgICAgfX08L2E+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IFtjbGFzc109XCJxdWVzdGlvbi5nZXRJbWFnZVdyYXBwZXJDc3MoaXRlbSlcIj5cbiAgICAgICAgICAgIDxpbWcgKm5nSWY9XCJxdWVzdGlvbi5jYW5QcmV2aWV3SW1hZ2UoaXRlbSlcIiBbYXR0ci5zcmNdPVwiaXRlbS5jb250ZW50IHwgc2FmZVVybFwiXG4gICAgICAgICAgICAgICAgW3N0eWxlLmhlaWdodF09XCJxdWVzdGlvbi5pbWFnZUhlaWdodFwiIFtzdHlsZS53aWR0aF09XCJxdWVzdGlvbi5pbWFnZVdpZHRoXCIgYWx0PVwiRmlsZSBwcmV2aWV3XCIgLz5cbiAgICAgICAgICAgIDxzdmcgKm5nSWY9XCJxdWVzdGlvbi5kZWZhdWx0SW1hZ2UoaXRlbSlcIiBbaWNvbk5hbWVdPVwicXVlc3Rpb24uY3NzQ2xhc3Nlcy5kZWZhdWx0SW1hZ2VJY29uSWRcIlxuICAgICAgICAgICAgICAgIFtwYXJ0Q3NzXT1cInF1ZXN0aW9uLmNzc0NsYXNzZXMuZGVmYXVsdEltYWdlXCIgW3NpemVdPVwiJ2F1dG8nXCIgc3Ytbmctc3ZnLWljb24+PC9zdmc+XG4gICAgICAgICAgICA8ZGl2ICpuZ0lmPVwiaXRlbS5uYW1lICYmICFxdWVzdGlvbi5pc1JlYWRPbmx5XCIgW2NsYXNzXT1cInF1ZXN0aW9uLmdldFJlbW92ZUJ1dHRvbkNzcygpXCJcbiAgICAgICAgICAgICAgICAoY2xpY2spPVwicXVlc3Rpb24uZG9SZW1vdmVGaWxlKGl0ZW0sICRldmVudClcIj5cbiAgICAgICAgICAgICAgICA8c3BhbiBbY2xhc3NdPVwicXVlc3Rpb24uY3NzQ2xhc3Nlcy5yZW1vdmVGaWxlXCI+e3sgcXVlc3Rpb24ucmVtb3ZlRmlsZUNhcHRpb24gfX08L3NwYW4+XG4gICAgICAgICAgICAgICAgPHN2ZyAqbmdJZj1cInF1ZXN0aW9uLmNzc0NsYXNzZXMucmVtb3ZlRmlsZVN2Z0ljb25JZFwiIFt0aXRsZV09XCJxdWVzdGlvbi5yZW1vdmVGaWxlQ2FwdGlvblwiXG4gICAgICAgICAgICAgICAgICAgIFtwYXJ0Q3NzXT1cInF1ZXN0aW9uLmNzc0NsYXNzZXMucmVtb3ZlRmlsZVN2Z1wiIFtpY29uTmFtZV09XCJxdWVzdGlvbi5jc3NDbGFzc2VzLnJlbW92ZUZpbGVTdmdJY29uSWRcIlxuICAgICAgICAgICAgICAgICAgICBbc2l6ZV09XCInYXV0bydcIiBzdi1uZy1zdmctaWNvbj48L3N2Zz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiAqbmdJZj1cIml0ZW0ubmFtZSAmJiBxdWVzdGlvbi5jc3NDbGFzc2VzLmZpbGVTaWduQm90dG9tXCIgW2NsYXNzXT1cInF1ZXN0aW9uLmNzc0NsYXNzZXMuZmlsZVNpZ25Cb3R0b21cIj5cbiAgICAgICAgICAgIDxhIChjbGljayk9XCJxdWVzdGlvbi5kb0Rvd25sb2FkRmlsZSgkZXZlbnQsIGl0ZW0pXCIgW2F0dHIuaHJlZl09XCJpdGVtLmNvbnRlbnQgfCBzYWZlVXJsXCJcbiAgICAgICAgICAgICAgICBbYXR0ci50aXRsZV09XCJpdGVtLm5hbWVcIiBbYXR0ci5kb3dubG9hZF09XCJpdGVtLm5hbWVcIiBbc3R5bGUud2lkdGhdPVwicXVlc3Rpb24uaW1hZ2VXaWR0aFwiPnt7XG4gICAgICAgICAgICAgICAgaXRlbS5uYW1lXG4gICAgICAgICAgICAgICAgfX08L2E+XG4gICAgICAgIDwvZGl2PlxuICAgIDwvc3Bhbj5cbjwvbmctdGVtcGxhdGU+Il19