import { Component, HostBinding, Input } from "@angular/core";
import * as Survey from "survey-core";
import * as i0 from "@angular/core";
export class SvgIconComponent {
    constructor(viewContaierRef) {
        this.viewContaierRef = viewContaierRef;
    }
    createSvg() {
        if (!!this.iconName) {
            Survey.createSvg(this.size, this.width, this.height, this.iconName, this.viewContaierRef.element.nativeElement, this.title);
        }
    }
    get rootClass() {
        let className = "sv-svg-icon";
        if (!this.css && !!this.partCss) {
            className += " " + this.partCss;
        }
        else if (!!this.css) {
            className = this.css;
        }
        return className;
    }
    get rootRole() {
        return "img";
    }
    ngOnChanges() {
        const el = this.viewContaierRef.element.nativeElement;
        el.innerHTML = "";
        el.appendChild(document.createElementNS("http://www.w3.org/2000/svg", "use"));
        this.createSvg();
    }
}
SvgIconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: SvgIconComponent, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Component });
SvgIconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: SvgIconComponent, selector: "'[sv-ng-svg-icon]'", inputs: { size: "size", width: "width", height: "height", iconName: "iconName", partCss: "partCss", css: "css", title: "title" }, host: { properties: { "class": "this.rootClass", "[attr.role]": "this.rootRole" } }, usesOnChanges: true, ngImport: i0, template: "", isInline: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: SvgIconComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "'[sv-ng-svg-icon]'",
                    template: ""
                }]
        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; }, propDecorators: { size: [{
                type: Input
            }], width: [{
                type: Input
            }], height: [{
                type: Input
            }], iconName: [{
                type: Input
            }], partCss: [{
                type: Input
            }], css: [{
                type: Input
            }], title: [{
                type: Input
            }], rootClass: [{
                type: HostBinding,
                args: ["class"]
            }], rootRole: [{
                type: HostBinding,
                args: ["[attr.role]"]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ZnLWljb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvc3ZnLWljb24vc3ZnLWljb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBK0IsTUFBTSxlQUFlLENBQUM7QUFDM0YsT0FBTyxLQUFLLE1BQU0sTUFBTSxhQUFhLENBQUM7O0FBTXRDLE1BQU0sT0FBTyxnQkFBZ0I7SUFRM0IsWUFBb0IsZUFBaUM7UUFBakMsb0JBQWUsR0FBZixlQUFlLENBQWtCO0lBQ3JELENBQUM7SUFDTyxTQUFTO1FBQ2YsSUFBRyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNqQixNQUFjLENBQUMsU0FBUyxDQUN2QixJQUFJLENBQUMsSUFBSSxFQUNULElBQUksQ0FBQyxLQUFLLEVBQ1YsSUFBSSxDQUFDLE1BQU0sRUFDWCxJQUFJLENBQUMsUUFBUSxFQUNiLElBQUksQ0FBQyxlQUFlLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFDMUMsSUFBSSxDQUFDLEtBQUssQ0FDWCxDQUFDO1NBQ0g7SUFDSCxDQUFDO0lBQ0QsSUFBMEIsU0FBUztRQUNqQyxJQUFJLFNBQVMsR0FBRyxhQUFhLENBQUM7UUFDOUIsSUFBRyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDOUIsU0FBUyxJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO1NBQ2pDO2FBQU0sSUFBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRTtZQUNwQixTQUFTLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQztTQUN0QjtRQUNELE9BQU8sU0FBUyxDQUFDO0lBQ25CLENBQUM7SUFDRCxJQUFnQyxRQUFRO1FBQ3RDLE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUNELFdBQVc7UUFDVCxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUM7UUFDdEQsRUFBRSxDQUFDLFNBQVMsR0FBRyxFQUFFLENBQUM7UUFDbEIsRUFBRSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLDRCQUE0QixFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDOUUsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ25CLENBQUM7OzhHQXZDVSxnQkFBZ0I7a0dBQWhCLGdCQUFnQixzU0FGakIsRUFBRTs0RkFFRCxnQkFBZ0I7a0JBSjVCLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIsUUFBUSxFQUFFLEVBQUU7aUJBQ2I7dUdBRVUsSUFBSTtzQkFBWixLQUFLO2dCQUNHLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxNQUFNO3NCQUFkLEtBQUs7Z0JBQ0csUUFBUTtzQkFBaEIsS0FBSztnQkFDRyxPQUFPO3NCQUFmLEtBQUs7Z0JBQ0csR0FBRztzQkFBWCxLQUFLO2dCQUNHLEtBQUs7c0JBQWIsS0FBSztnQkFlb0IsU0FBUztzQkFBbEMsV0FBVzt1QkFBQyxPQUFPO2dCQVNZLFFBQVE7c0JBQXZDLFdBQVc7dUJBQUMsYUFBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSG9zdEJpbmRpbmcsIElucHV0LCBPbkNoYW5nZXMsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0ICogYXMgU3VydmV5IGZyb20gXCJzdXJ2ZXktY29yZVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwiJ1tzdi1uZy1zdmctaWNvbl0nXCIsXG4gIHRlbXBsYXRlOiBcIlwiXG59KVxuZXhwb3J0IGNsYXNzIFN2Z0ljb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICBASW5wdXQoKSBzaXplPzogbnVtYmVyIHwgc3RyaW5nO1xuICBASW5wdXQoKSB3aWR0aD86IG51bWJlcjtcbiAgQElucHV0KCkgaGVpZ2h0PzogbnVtYmVyO1xuICBASW5wdXQoKSBpY29uTmFtZSE6IHN0cmluZztcbiAgQElucHV0KCkgcGFydENzcz86IHN0cmluZztcbiAgQElucHV0KCkgY3NzPzogc3RyaW5nO1xuICBASW5wdXQoKSB0aXRsZT86IHN0cmluZztcbiAgY29uc3RydWN0b3IocHJpdmF0ZSB2aWV3Q29udGFpZXJSZWY6IFZpZXdDb250YWluZXJSZWYpIHtcbiAgfVxuICBwcml2YXRlIGNyZWF0ZVN2ZygpIHtcbiAgICBpZighIXRoaXMuaWNvbk5hbWUpIHtcbiAgICAgIChTdXJ2ZXkgYXMgYW55KS5jcmVhdGVTdmcoXG4gICAgICAgIHRoaXMuc2l6ZSxcbiAgICAgICAgdGhpcy53aWR0aCxcbiAgICAgICAgdGhpcy5oZWlnaHQsXG4gICAgICAgIHRoaXMuaWNvbk5hbWUsXG4gICAgICAgIHRoaXMudmlld0NvbnRhaWVyUmVmLmVsZW1lbnQubmF0aXZlRWxlbWVudCxcbiAgICAgICAgdGhpcy50aXRsZVxuICAgICAgKTtcbiAgICB9XG4gIH1cbiAgQEhvc3RCaW5kaW5nKFwiY2xhc3NcIikgZ2V0IHJvb3RDbGFzcygpOiBzdHJpbmcge1xuICAgIGxldCBjbGFzc05hbWUgPSBcInN2LXN2Zy1pY29uXCI7XG4gICAgaWYoIXRoaXMuY3NzICYmICEhdGhpcy5wYXJ0Q3NzKSB7XG4gICAgICBjbGFzc05hbWUgKz0gXCIgXCIgKyB0aGlzLnBhcnRDc3M7XG4gICAgfSBlbHNlIGlmKCEhdGhpcy5jc3MpIHtcbiAgICAgIGNsYXNzTmFtZSA9IHRoaXMuY3NzO1xuICAgIH1cbiAgICByZXR1cm4gY2xhc3NOYW1lO1xuICB9XG4gIEBIb3N0QmluZGluZyhcIlthdHRyLnJvbGVdXCIpIGdldCByb290Um9sZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiBcImltZ1wiO1xuICB9XG4gIG5nT25DaGFuZ2VzKCk6IHZvaWQge1xuICAgIGNvbnN0IGVsID0gdGhpcy52aWV3Q29udGFpZXJSZWYuZWxlbWVudC5uYXRpdmVFbGVtZW50O1xuICAgIGVsLmlubmVySFRNTCA9IFwiXCI7XG4gICAgZWwuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJ1c2VcIikpO1xuICAgIHRoaXMuY3JlYXRlU3ZnKCk7XG4gIH1cbn0iXX0=