import { Component, Input } from "@angular/core";
import { ActionDropdownViewModel, getActionDropdownButtonTarget } from "survey-core";
import { BaseAngular } from "../../base-angular";
import { AngularComponentFactory } from "../../component-factory";
import * as i0 from "@angular/core";
import * as i1 from "../svg-icon/svg-icon.component";
import * as i2 from "../popup/popup.component";
import * as i3 from "../../utils/ng-key2click.directive";
import * as i4 from "@angular/common";
export class ActionBarItemDropdownComponent extends BaseAngular {
    constructor() {
        super(...arguments);
        this.getTarget = getActionDropdownButtonTarget;
    }
    getModel() {
        return this.model;
    }
    ngOnInit() {
        super.ngOnInit();
        this.viewModel = new ActionDropdownViewModel(this.model);
    }
    ngOnDestroy() {
        this.viewModel.dispose();
        super.ngOnDestroy();
    }
}
ActionBarItemDropdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ActionBarItemDropdownComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
ActionBarItemDropdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: ActionBarItemDropdownComponent, selector: "sv-action-bar-item-dropdown", inputs: { model: "model" }, usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n    <button type=\"button\" (click)=\"model.action(model, model.getIsTrusted($event))\" [key2click]=\"{ processEsc: false, disableTabStop: model.disableTabStop }\" [class]=\"model.getActionBarItemCss()\" [title]=\"model.tooltip || model.title\" [disabled]=\"model.disabled\" [attr.role]=\"model.ariaRole\">\n        <svg *ngIf=\"model.iconName\" [iconName]=\"model.iconName\" [size]=\"model.iconSize\" [title]=\"model.tooltip || model.title\" [class]=\"model.cssClasses.itemIcon\" sv-ng-svg-icon></svg>\n        <span *ngIf=\"model.hasTitle\" [class]=\"model.getActionBarItemTitleCss()\">{{ model.title }}</span>\n    </button>\n    <sv-ng-popup [popupModel]=\"model.popupModel\" [getTarget]=\"getTarget\"></sv-ng-popup>\n</ng-template>", styles: [":host{display:none}\n"], components: [{ type: i1.SvgIconComponent, selector: "'[sv-ng-svg-icon]'", inputs: ["size", "width", "height", "iconName", "partCss", "css", "title"] }, { type: i2.PopupComponent, selector: "sv-ng-popup, '[sv-ng-popup]'", inputs: ["popupModel", "getTarget", "getArea"] }], directives: [{ type: i3.Key2ClickDirective, selector: "[key2click]", inputs: ["key2click"] }, { type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ActionBarItemDropdownComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "sv-action-bar-item-dropdown",
                    templateUrl: "./action-bar-item-dropdown.component.html",
                    styleUrls: ["../../hide-host.scss"]
                }]
        }], propDecorators: { model: [{
                type: Input
            }] } });
AngularComponentFactory.Instance.registerComponent("sv-action-bar-item-dropdown", ActionBarItemDropdownComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9uLWJhci1pdGVtLWRyb3Bkb3duLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2FjdGlvbi1iYXIvYWN0aW9uLWJhci1pdGVtLWRyb3Bkb3duLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2FjdGlvbi1iYXIvYWN0aW9uLWJhci1pdGVtLWRyb3Bkb3duLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSw2QkFBNkIsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNyRixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDakQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0seUJBQXlCLENBQUM7Ozs7OztBQU9sRSxNQUFNLE9BQU8sOEJBQStCLFNBQVEsV0FBVztJQUwvRDs7UUFPUyxjQUFTLEdBQTRDLDZCQUE2QixDQUFDO0tBYzNGO0lBWFcsUUFBUTtRQUNoQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQztJQUNRLFFBQVE7UUFDZixLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDakIsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLHVCQUF1QixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzRCxDQUFDO0lBQ1EsV0FBVztRQUNsQixJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ3pCLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUN0QixDQUFDOzs0SEFmVSw4QkFBOEI7Z0hBQTlCLDhCQUE4QixzSENWM0MsMnZCQU1jOzRGRElELDhCQUE4QjtrQkFMMUMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsNkJBQTZCO29CQUN2QyxXQUFXLEVBQUUsMkNBQTJDO29CQUN4RCxTQUFTLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQztpQkFDcEM7OEJBRVUsS0FBSztzQkFBYixLQUFLOztBQWlCUix1QkFBdUIsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsNkJBQTZCLEVBQUUsOEJBQThCLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgQWN0aW9uRHJvcGRvd25WaWV3TW9kZWwsIGdldEFjdGlvbkRyb3Bkb3duQnV0dG9uVGFyZ2V0IH0gZnJvbSBcInN1cnZleS1jb3JlXCI7XG5pbXBvcnQgeyBCYXNlQW5ndWxhciB9IGZyb20gXCIuLi8uLi9iYXNlLWFuZ3VsYXJcIjtcbmltcG9ydCB7IEFuZ3VsYXJDb21wb25lbnRGYWN0b3J5IH0gZnJvbSBcIi4uLy4uL2NvbXBvbmVudC1mYWN0b3J5XCI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogXCJzdi1hY3Rpb24tYmFyLWl0ZW0tZHJvcGRvd25cIixcbiAgdGVtcGxhdGVVcmw6IFwiLi9hY3Rpb24tYmFyLWl0ZW0tZHJvcGRvd24uY29tcG9uZW50Lmh0bWxcIixcbiAgc3R5bGVVcmxzOiBbXCIuLi8uLi9oaWRlLWhvc3Quc2Nzc1wiXVxufSlcbmV4cG9ydCBjbGFzcyBBY3Rpb25CYXJJdGVtRHJvcGRvd25Db21wb25lbnQgZXh0ZW5kcyBCYXNlQW5ndWxhciB7XG4gIEBJbnB1dCgpIG1vZGVsOiBhbnlcbiAgcHVibGljIGdldFRhcmdldDogKGNvbnRhaW5lcjogSFRNTEVsZW1lbnQpID0+IEhUTUxFbGVtZW50ID0gZ2V0QWN0aW9uRHJvcGRvd25CdXR0b25UYXJnZXQ7XG4gIHByb3RlY3RlZCB2aWV3TW9kZWwhOiBBY3Rpb25Ecm9wZG93blZpZXdNb2RlbDtcblxuICBwcm90ZWN0ZWQgZ2V0TW9kZWwoKSB7XG4gICAgcmV0dXJuIHRoaXMubW9kZWw7XG4gIH1cbiAgb3ZlcnJpZGUgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgc3VwZXIubmdPbkluaXQoKTtcbiAgICB0aGlzLnZpZXdNb2RlbCA9IG5ldyBBY3Rpb25Ecm9wZG93blZpZXdNb2RlbCh0aGlzLm1vZGVsKTtcbiAgfVxuICBvdmVycmlkZSBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICB0aGlzLnZpZXdNb2RlbC5kaXNwb3NlKCk7XG4gICAgc3VwZXIubmdPbkRlc3Ryb3koKTtcbiAgfVxufVxuXG5Bbmd1bGFyQ29tcG9uZW50RmFjdG9yeS5JbnN0YW5jZS5yZWdpc3RlckNvbXBvbmVudChcInN2LWFjdGlvbi1iYXItaXRlbS1kcm9wZG93blwiLCBBY3Rpb25CYXJJdGVtRHJvcGRvd25Db21wb25lbnQpOyIsIjxuZy10ZW1wbGF0ZSAjdGVtcGxhdGU+XG4gICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgKGNsaWNrKT1cIm1vZGVsLmFjdGlvbihtb2RlbCwgbW9kZWwuZ2V0SXNUcnVzdGVkKCRldmVudCkpXCIgW2tleTJjbGlja109XCJ7IHByb2Nlc3NFc2M6IGZhbHNlLCBkaXNhYmxlVGFiU3RvcDogbW9kZWwuZGlzYWJsZVRhYlN0b3AgfVwiIFtjbGFzc109XCJtb2RlbC5nZXRBY3Rpb25CYXJJdGVtQ3NzKClcIiBbdGl0bGVdPVwibW9kZWwudG9vbHRpcCB8fCBtb2RlbC50aXRsZVwiIFtkaXNhYmxlZF09XCJtb2RlbC5kaXNhYmxlZFwiIFthdHRyLnJvbGVdPVwibW9kZWwuYXJpYVJvbGVcIj5cbiAgICAgICAgPHN2ZyAqbmdJZj1cIm1vZGVsLmljb25OYW1lXCIgW2ljb25OYW1lXT1cIm1vZGVsLmljb25OYW1lXCIgW3NpemVdPVwibW9kZWwuaWNvblNpemVcIiBbdGl0bGVdPVwibW9kZWwudG9vbHRpcCB8fCBtb2RlbC50aXRsZVwiIFtjbGFzc109XCJtb2RlbC5jc3NDbGFzc2VzLml0ZW1JY29uXCIgc3Ytbmctc3ZnLWljb24+PC9zdmc+XG4gICAgICAgIDxzcGFuICpuZ0lmPVwibW9kZWwuaGFzVGl0bGVcIiBbY2xhc3NdPVwibW9kZWwuZ2V0QWN0aW9uQmFySXRlbVRpdGxlQ3NzKClcIj57eyBtb2RlbC50aXRsZSB9fTwvc3Bhbj5cbiAgICA8L2J1dHRvbj5cbiAgICA8c3YtbmctcG9wdXAgW3BvcHVwTW9kZWxdPVwibW9kZWwucG9wdXBNb2RlbFwiIFtnZXRUYXJnZXRdPVwiZ2V0VGFyZ2V0XCI+PC9zdi1uZy1wb3B1cD5cbjwvbmctdGVtcGxhdGU+Il19