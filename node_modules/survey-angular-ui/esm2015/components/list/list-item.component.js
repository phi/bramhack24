import { Component, Input } from "@angular/core";
import { BaseAngular } from "../../base-angular";
import { AngularComponentFactory } from "../../component-factory";
import * as i0 from "@angular/core";
import * as i1 from "../../utils/ng-key2click.directive";
import * as i2 from "../../utils/ng-show.directive";
import * as i3 from "@angular/common";
import * as i4 from "../../utils/dynamic.directive";
export class ListItemComponent extends BaseAngular {
    get elementId() {
        var _a;
        return (_a = this.model) === null || _a === void 0 ? void 0 : _a.elementId;
    }
    get ariaSelected() {
        return this.listModel.isItemSelected(this.model) || "";
    }
    get class() {
        return this.listModel.getItemClass(this.model);
    }
    get paddingLeft() {
        return this.listModel.getItemIndent(this.model);
    }
    click(event) {
        this.listModel.onItemClick(this.model);
        event.stopPropagation();
    }
    pointerdown(event) {
        this.listModel.onPointerDown(event, this.model);
    }
    get itemComponent() {
        return this.model.component || this.listModel.itemComponent;
    }
    getModel() {
        return this.model;
    }
    ngAfterViewInit() {
        this.listModel.onLastItemRended(this.model);
    }
}
ListItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ListItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
ListItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: ListItemComponent, selector: "sv-ng-list-item, '[sv-ng-list-item]'", inputs: { element: "element", model: "model", listModel: "listModel" }, usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n  <li role=\"option\" [key2click]=\"{ processEsc: false, disableTabStop: model.disableTabStop }\" [visible]=\"listModel.isItemVisible(model)\" [class]=\"class\" [attr.id]=\"elementId\" [attr.aria-selected]=\"ariaSelected ? 'true' : 'false'\" (click)=\"click($event)\" (pointerdown)=\"pointerdown($event)\">\n    <ng-container *ngIf=\"model.needSeparator\">\n    <div [class]=\"listModel.cssClasses.itemSeparator\"></div>\n    </ng-container>\n    <div [class]=\"listModel.cssClasses.itemBody\" [style.paddingInlineStart]=\"paddingLeft\" [attr.title]=\"model.locTitle.calculatedText\"\n    (mouseover)=\"listModel.onItemHover(model)\"\n    (mouseleave)=\"listModel.onItemLeave(model)\">\n    <ng-template [component]=\"{ name: itemComponent, data: { model: model, listModel: listModel } }\"></ng-template>\n    </div>\n  </li>\n</ng-template>", styles: [":host{display:none}\n"], directives: [{ type: i1.Key2ClickDirective, selector: "[key2click]", inputs: ["key2click"] }, { type: i2.VisibleDirective, selector: "[visible]", inputs: ["visible"] }, { type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.DynamicComponentDirective, selector: "[component]", inputs: ["component"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ListItemComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "sv-ng-list-item, '[sv-ng-list-item]'",
                    templateUrl: "./list-item.component.html",
                    styleUrls: ["../../hide-host.scss"],
                }]
        }], propDecorators: { element: [{
                type: Input
            }], model: [{
                type: Input
            }], listModel: [{
                type: Input
            }] } });
AngularComponentFactory.Instance.registerComponent("sv-list-item", ListItemComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2xpc3QvbGlzdC1pdGVtLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2xpc3QvbGlzdC1pdGVtLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBaUIsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVoRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDakQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0seUJBQXlCLENBQUM7Ozs7OztBQVFsRSxNQUFNLE9BQU8saUJBQWtCLFNBQVEsV0FBVztJQUtoRCxJQUFJLFNBQVM7O1FBQ1gsT0FBTyxNQUFDLElBQUksQ0FBQyxLQUFpQiwwQ0FBRSxTQUFTLENBQUM7SUFDNUMsQ0FBQztJQUVELElBQUksWUFBWTtRQUNkLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN6RCxDQUFDO0lBQ0QsSUFBSSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUNELElBQUksV0FBVztRQUNiLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFDRCxLQUFLLENBQUMsS0FBVTtRQUNkLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN2QyxLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDMUIsQ0FBQztJQUNELFdBQVcsQ0FBQyxLQUFVO1FBQ3BCLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbEQsQ0FBQztJQUNELElBQUksYUFBYTtRQUNmLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUM7SUFDOUQsQ0FBQztJQUVELFFBQVE7UUFDTixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQztJQUVELGVBQWU7UUFDYixJQUFJLENBQUMsU0FBUyxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM5QyxDQUFDOzsrR0FuQ1UsaUJBQWlCO21HQUFqQixpQkFBaUIsMktDWDlCLG8yQkFXYzs0RkRBRCxpQkFBaUI7a0JBTjdCLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLHNDQUFzQztvQkFDaEQsV0FBVyxFQUFFLDRCQUE0QjtvQkFDekMsU0FBUyxFQUFFLENBQUMsc0JBQXNCLENBQUM7aUJBQ3BDOzhCQUdVLE9BQU87c0JBQWYsS0FBSztnQkFDRyxLQUFLO3NCQUFiLEtBQUs7Z0JBQ0csU0FBUztzQkFBakIsS0FBSzs7QUFtQ1IsdUJBQXVCLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLGNBQWMsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBMaXN0TW9kZWwsIEFjdGlvbiwgSUFjdGlvbiB9IGZyb20gXCJzdXJ2ZXktY29yZVwiO1xuaW1wb3J0IHsgQmFzZUFuZ3VsYXIgfSBmcm9tIFwiLi4vLi4vYmFzZS1hbmd1bGFyXCI7XG5pbXBvcnQgeyBBbmd1bGFyQ29tcG9uZW50RmFjdG9yeSB9IGZyb20gXCIuLi8uLi9jb21wb25lbnQtZmFjdG9yeVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwic3YtbmctbGlzdC1pdGVtLCAnW3N2LW5nLWxpc3QtaXRlbV0nXCIsXG4gIHRlbXBsYXRlVXJsOiBcIi4vbGlzdC1pdGVtLmNvbXBvbmVudC5odG1sXCIsXG4gIHN0eWxlVXJsczogW1wiLi4vLi4vaGlkZS1ob3N0LnNjc3NcIl0sXG59KVxuXG5leHBvcnQgY2xhc3MgTGlzdEl0ZW1Db21wb25lbnQgZXh0ZW5kcyBCYXNlQW5ndWxhciBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuICBASW5wdXQoKSBlbGVtZW50OiBhbnk7XG4gIEBJbnB1dCgpIG1vZGVsITogQWN0aW9uO1xuICBASW5wdXQoKSBsaXN0TW9kZWwhOiBMaXN0TW9kZWw7XG5cbiAgZ2V0IGVsZW1lbnRJZCgpIHtcbiAgICByZXR1cm4gKHRoaXMubW9kZWwgYXMgSUFjdGlvbik/LmVsZW1lbnRJZDtcbiAgfVxuXG4gIGdldCBhcmlhU2VsZWN0ZWQoKTogYm9vbGVhbiB8IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMubGlzdE1vZGVsLmlzSXRlbVNlbGVjdGVkKHRoaXMubW9kZWwpIHx8IFwiXCI7XG4gIH1cbiAgZ2V0IGNsYXNzKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMubGlzdE1vZGVsLmdldEl0ZW1DbGFzcyh0aGlzLm1vZGVsKTtcbiAgfVxuICBnZXQgcGFkZGluZ0xlZnQoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5saXN0TW9kZWwuZ2V0SXRlbUluZGVudCh0aGlzLm1vZGVsKTtcbiAgfVxuICBjbGljayhldmVudDogYW55KTogdm9pZCB7XG4gICAgdGhpcy5saXN0TW9kZWwub25JdGVtQ2xpY2sodGhpcy5tb2RlbCk7XG4gICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gIH1cbiAgcG9pbnRlcmRvd24oZXZlbnQ6IGFueSk6IHZvaWQge1xuICAgIHRoaXMubGlzdE1vZGVsLm9uUG9pbnRlckRvd24oZXZlbnQsIHRoaXMubW9kZWwpO1xuICB9XG4gIGdldCBpdGVtQ29tcG9uZW50KCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMubW9kZWwuY29tcG9uZW50IHx8IHRoaXMubGlzdE1vZGVsLml0ZW1Db21wb25lbnQ7XG4gIH1cblxuICBnZXRNb2RlbCgpIHtcbiAgICByZXR1cm4gdGhpcy5tb2RlbDtcbiAgfVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLmxpc3RNb2RlbC5vbkxhc3RJdGVtUmVuZGVkKHRoaXMubW9kZWwpO1xuICB9XG59XG5cbkFuZ3VsYXJDb21wb25lbnRGYWN0b3J5Lkluc3RhbmNlLnJlZ2lzdGVyQ29tcG9uZW50KFwic3YtbGlzdC1pdGVtXCIsIExpc3RJdGVtQ29tcG9uZW50KTsiLCI8bmctdGVtcGxhdGUgI3RlbXBsYXRlPlxuICA8bGkgcm9sZT1cIm9wdGlvblwiIFtrZXkyY2xpY2tdPVwieyBwcm9jZXNzRXNjOiBmYWxzZSwgZGlzYWJsZVRhYlN0b3A6IG1vZGVsLmRpc2FibGVUYWJTdG9wIH1cIiBbdmlzaWJsZV09XCJsaXN0TW9kZWwuaXNJdGVtVmlzaWJsZShtb2RlbClcIiBbY2xhc3NdPVwiY2xhc3NcIiBbYXR0ci5pZF09XCJlbGVtZW50SWRcIiBbYXR0ci5hcmlhLXNlbGVjdGVkXT1cImFyaWFTZWxlY3RlZCA/ICd0cnVlJyA6ICdmYWxzZSdcIiAoY2xpY2spPVwiY2xpY2soJGV2ZW50KVwiIChwb2ludGVyZG93bik9XCJwb2ludGVyZG93bigkZXZlbnQpXCI+XG4gICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIm1vZGVsLm5lZWRTZXBhcmF0b3JcIj5cbiAgICA8ZGl2IFtjbGFzc109XCJsaXN0TW9kZWwuY3NzQ2xhc3Nlcy5pdGVtU2VwYXJhdG9yXCI+PC9kaXY+XG4gICAgPC9uZy1jb250YWluZXI+XG4gICAgPGRpdiBbY2xhc3NdPVwibGlzdE1vZGVsLmNzc0NsYXNzZXMuaXRlbUJvZHlcIiBbc3R5bGUucGFkZGluZ0lubGluZVN0YXJ0XT1cInBhZGRpbmdMZWZ0XCIgW2F0dHIudGl0bGVdPVwibW9kZWwubG9jVGl0bGUuY2FsY3VsYXRlZFRleHRcIlxuICAgIChtb3VzZW92ZXIpPVwibGlzdE1vZGVsLm9uSXRlbUhvdmVyKG1vZGVsKVwiXG4gICAgKG1vdXNlbGVhdmUpPVwibGlzdE1vZGVsLm9uSXRlbUxlYXZlKG1vZGVsKVwiPlxuICAgIDxuZy10ZW1wbGF0ZSBbY29tcG9uZW50XT1cInsgbmFtZTogaXRlbUNvbXBvbmVudCwgZGF0YTogeyBtb2RlbDogbW9kZWwsIGxpc3RNb2RlbDogbGlzdE1vZGVsIH0gfVwiPjwvbmctdGVtcGxhdGU+XG4gICAgPC9kaXY+XG4gIDwvbGk+XG48L25nLXRlbXBsYXRlPiJdfQ==