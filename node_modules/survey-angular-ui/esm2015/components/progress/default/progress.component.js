import { Component, Input } from "@angular/core";
import { AngularComponentFactory } from "../../../component-factory";
import { SurveyProgressModel } from "survey-core";
import { EmbeddedViewContentComponent } from "../../../embedded-view-content.component";
import * as i0 from "@angular/core";
export class ProgressDefaultComponent extends EmbeddedViewContentComponent {
    getProgressTextInBarCss(css) {
        return SurveyProgressModel.getProgressTextInBarCss(css);
    }
    getProgressTextUnderBarCss(css) {
        return SurveyProgressModel.getProgressTextUnderBarCss(css);
    }
}
ProgressDefaultComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ProgressDefaultComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
ProgressDefaultComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: ProgressDefaultComponent, selector: "sv-ng-progress-default", inputs: { container: "container", model: "model" }, usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n  <div [class]=\"model.getProgressCssClasses(container)\">\n    <div [class]=\"model.css.progressBar\" [style.width]=\"model.progressValue + '%'\"\n        role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\" aria-label=\"progress\">\n        <span [class]=\"getProgressTextInBarCss(model.css)\">\n          {{ model.progressText }}\n        </span>\n    </div>\n    <span [class]=\"getProgressTextUnderBarCss(model.css)\"> {{  model.progressText }} </span>\n  </div>\n</ng-template>" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ProgressDefaultComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "sv-ng-progress-default",
                    templateUrl: "./progress.component.html"
                }]
        }], propDecorators: { container: [{
                type: Input
            }], model: [{
                type: Input
            }] } });
AngularComponentFactory.Instance.registerComponent("sv-progress-progress", ProgressDefaultComponent);
AngularComponentFactory.Instance.registerComponent("sv-progress-pages", ProgressDefaultComponent);
AngularComponentFactory.Instance.registerComponent("sv-progress-questions", ProgressDefaultComponent);
AngularComponentFactory.Instance.registerComponent("sv-progress-correctquestions", ProgressDefaultComponent);
AngularComponentFactory.Instance.registerComponent("sv-progress-requiredquestions", ProgressDefaultComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3MuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvcHJvZ3Jlc3MvZGVmYXVsdC9wcm9ncmVzcy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9wcm9ncmVzcy9kZWZhdWx0L3Byb2dyZXNzLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3JFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNsRCxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQzs7QUFNeEYsTUFBTSxPQUFPLHdCQUF5QixTQUFRLDRCQUE0QjtJQUd4RSx1QkFBdUIsQ0FBQyxHQUFRO1FBQzlCLE9BQU8sbUJBQW1CLENBQUMsdUJBQXVCLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDMUQsQ0FBQztJQUNELDBCQUEwQixDQUFDLEdBQVE7UUFDakMsT0FBTyxtQkFBbUIsQ0FBQywwQkFBMEIsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM3RCxDQUFDOztzSEFSVSx3QkFBd0I7MEdBQXhCLHdCQUF3Qix5SUNUckMsd2dCQVVjOzRGRERELHdCQUF3QjtrQkFKcEMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsd0JBQXdCO29CQUNsQyxXQUFXLEVBQUUsMkJBQTJCO2lCQUN6Qzs4QkFFVSxTQUFTO3NCQUFqQixLQUFLO2dCQUNHLEtBQUs7c0JBQWIsS0FBSzs7QUFRUix1QkFBdUIsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsc0JBQXNCLEVBQUUsd0JBQXdCLENBQUMsQ0FBQztBQUNyRyx1QkFBdUIsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsbUJBQW1CLEVBQUUsd0JBQXdCLENBQUMsQ0FBQztBQUNsRyx1QkFBdUIsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsdUJBQXVCLEVBQUUsd0JBQXdCLENBQUMsQ0FBQztBQUN0Ryx1QkFBdUIsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsOEJBQThCLEVBQUUsd0JBQXdCLENBQUMsQ0FBQztBQUM3Ryx1QkFBdUIsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsK0JBQStCLEVBQUUsd0JBQXdCLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgQW5ndWxhckNvbXBvbmVudEZhY3RvcnkgfSBmcm9tIFwiLi4vLi4vLi4vY29tcG9uZW50LWZhY3RvcnlcIjtcbmltcG9ydCB7IFN1cnZleVByb2dyZXNzTW9kZWwgfSBmcm9tIFwic3VydmV5LWNvcmVcIjtcbmltcG9ydCB7IEVtYmVkZGVkVmlld0NvbnRlbnRDb21wb25lbnQgfSBmcm9tIFwiLi4vLi4vLi4vZW1iZWRkZWQtdmlldy1jb250ZW50LmNvbXBvbmVudFwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwic3YtbmctcHJvZ3Jlc3MtZGVmYXVsdFwiLFxuICB0ZW1wbGF0ZVVybDogXCIuL3Byb2dyZXNzLmNvbXBvbmVudC5odG1sXCJcbn0pXG5leHBvcnQgY2xhc3MgUHJvZ3Jlc3NEZWZhdWx0Q29tcG9uZW50IGV4dGVuZHMgRW1iZWRkZWRWaWV3Q29udGVudENvbXBvbmVudCB7XG4gIEBJbnB1dCgpIGNvbnRhaW5lcj86IHN0cmluZztcbiAgQElucHV0KCkgbW9kZWw6IGFueTtcbiAgZ2V0UHJvZ3Jlc3NUZXh0SW5CYXJDc3MoY3NzOiBhbnkpOiBzdHJpbmcge1xuICAgIHJldHVybiBTdXJ2ZXlQcm9ncmVzc01vZGVsLmdldFByb2dyZXNzVGV4dEluQmFyQ3NzKGNzcyk7XG4gIH1cbiAgZ2V0UHJvZ3Jlc3NUZXh0VW5kZXJCYXJDc3MoY3NzOiBhbnkpOiBzdHJpbmcge1xuICAgIHJldHVybiBTdXJ2ZXlQcm9ncmVzc01vZGVsLmdldFByb2dyZXNzVGV4dFVuZGVyQmFyQ3NzKGNzcyk7XG4gIH1cbn1cbkFuZ3VsYXJDb21wb25lbnRGYWN0b3J5Lkluc3RhbmNlLnJlZ2lzdGVyQ29tcG9uZW50KFwic3YtcHJvZ3Jlc3MtcHJvZ3Jlc3NcIiwgUHJvZ3Jlc3NEZWZhdWx0Q29tcG9uZW50KTtcbkFuZ3VsYXJDb21wb25lbnRGYWN0b3J5Lkluc3RhbmNlLnJlZ2lzdGVyQ29tcG9uZW50KFwic3YtcHJvZ3Jlc3MtcGFnZXNcIiwgUHJvZ3Jlc3NEZWZhdWx0Q29tcG9uZW50KTtcbkFuZ3VsYXJDb21wb25lbnRGYWN0b3J5Lkluc3RhbmNlLnJlZ2lzdGVyQ29tcG9uZW50KFwic3YtcHJvZ3Jlc3MtcXVlc3Rpb25zXCIsIFByb2dyZXNzRGVmYXVsdENvbXBvbmVudCk7XG5Bbmd1bGFyQ29tcG9uZW50RmFjdG9yeS5JbnN0YW5jZS5yZWdpc3RlckNvbXBvbmVudChcInN2LXByb2dyZXNzLWNvcnJlY3RxdWVzdGlvbnNcIiwgUHJvZ3Jlc3NEZWZhdWx0Q29tcG9uZW50KTtcbkFuZ3VsYXJDb21wb25lbnRGYWN0b3J5Lkluc3RhbmNlLnJlZ2lzdGVyQ29tcG9uZW50KFwic3YtcHJvZ3Jlc3MtcmVxdWlyZWRxdWVzdGlvbnNcIiwgUHJvZ3Jlc3NEZWZhdWx0Q29tcG9uZW50KTsiLCI8bmctdGVtcGxhdGUgI3RlbXBsYXRlPlxuICA8ZGl2IFtjbGFzc109XCJtb2RlbC5nZXRQcm9ncmVzc0Nzc0NsYXNzZXMoY29udGFpbmVyKVwiPlxuICAgIDxkaXYgW2NsYXNzXT1cIm1vZGVsLmNzcy5wcm9ncmVzc0JhclwiIFtzdHlsZS53aWR0aF09XCJtb2RlbC5wcm9ncmVzc1ZhbHVlICsgJyUnXCJcbiAgICAgICAgcm9sZT1cInByb2dyZXNzYmFyXCIgYXJpYS12YWx1ZW1pbj1cIjBcIiBhcmlhLXZhbHVlbWF4PVwiMTAwXCIgYXJpYS1sYWJlbD1cInByb2dyZXNzXCI+XG4gICAgICAgIDxzcGFuIFtjbGFzc109XCJnZXRQcm9ncmVzc1RleHRJbkJhckNzcyhtb2RlbC5jc3MpXCI+XG4gICAgICAgICAge3sgbW9kZWwucHJvZ3Jlc3NUZXh0IH19XG4gICAgICAgIDwvc3Bhbj5cbiAgICA8L2Rpdj5cbiAgICA8c3BhbiBbY2xhc3NdPVwiZ2V0UHJvZ3Jlc3NUZXh0VW5kZXJCYXJDc3MobW9kZWwuY3NzKVwiPiB7eyAgbW9kZWwucHJvZ3Jlc3NUZXh0IH19IDwvc3Bhbj5cbiAgPC9kaXY+XG48L25nLXRlbXBsYXRlPiJdfQ==