import { Component } from "@angular/core";
import { QuestionAngular } from "../question";
import { AngularComponentFactory } from "../component-factory";
import * as i0 from "@angular/core";
import * as i1 from "../survey-string.component";
import * as i2 from "@angular/forms";
import * as i3 from "@angular/common";
export class BooleanQuestionComponent extends QuestionAngular {
    onChange(event) {
        this.model.booleanValue = event.target.value;
    }
}
BooleanQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: BooleanQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
BooleanQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: BooleanQuestionComponent, selector: "sv-ng-boolean-question", usesInheritance: true, ngImport: i0, template: "<div [class]=\"model.cssClasses.root\" (keydown)=\"model.onKeyDownCore($event)\" #contentElement>\n    <label [class]=\"model.getItemCss()\">\n      <input\n        type=\"checkbox\"\n        [attr.name]=\"model.name\" [attr.id]=\"model.inputId\" \n        [attr.role]=\"model.a11y_input_ariaRole\"\n        [attr.aria-required]=\"model.a11y_input_ariaRequired\"\n        [attr.aria-label]=\"model.a11y_input_ariaLabel\"\n        [attr.aria-labelledby]=\"model.a11y_input_ariaLabelledBy\"\n        [attr.aria-describedby]=\"model.a11y_input_ariaDescribedBy\"\n        [attr.aria-invalid]=\"model.a11y_input_ariaInvalid\"\n        [attr.aria-errormessage]=\"model.a11y_input_ariaErrormessage\"\n        [class]=\"model.cssClasses.control\" [disabled]=\"model.isDisabledAttr\" [readonly]=\"model.isReadOnlyAttr\"  [indeterminate]=\"model.isIndeterminate\" [value]=\"model.booleanValue\" [(ngModel)]=\"model.booleanValue\" />\n      <div [class]=\"model.cssClasses.sliderGhost\" (click)=\"model.onLabelClick($event, model.swapOrder)\">\n        <span [class]=\"model.getLabelCss(model.swapOrder)\" [model]=\"model.locLabelLeft\" sv-ng-string></span>\n      </div>\n      <div [class]=\"model.cssClasses.switch\" (click)=\"model.onSwitchClickModel($event)\">\n        <span [class]=\"model.cssClasses.slider\">\n            <span *ngIf=\"model.cssClasses.sliderText && model.isDeterminated\" [class]=\"model.cssClasses.sliderText\" [model]=\"model.getCheckedLabel()\" sv-ng-string></span>\n        </span>\n      </div>\n      <div [class]=\"model.cssClasses.sliderGhost\" (click)=\"model.onLabelClick($event, !model.swapOrder)\">\n        <span [class]=\"model.getLabelCss(!model.swapOrder)\" [model]=\"model.locLabelRight\"  sv-ng-string></span>\n      </div>\n    </label>\n</div>", components: [{ type: i1.SurveyStringComponent, selector: "sv-ng-string, '[sv-ng-string]'", inputs: ["model"] }], directives: [{ type: i2.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: BooleanQuestionComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "sv-ng-boolean-question",
                    templateUrl: "./boolean.component.html"
                }]
        }] });
AngularComponentFactory.Instance.registerComponent("boolean-question", BooleanQuestionComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9vbGVhbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcXVlc3Rpb25zL2Jvb2xlYW4uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vc3JjL3F1ZXN0aW9ucy9ib29sZWFuLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUU5QyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQzs7Ozs7QUFNL0QsTUFBTSxPQUFPLHdCQUF5QixTQUFRLGVBQXFDO0lBQ2pGLFFBQVEsQ0FBQyxLQUFVO1FBQ2pCLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDO0lBQy9DLENBQUM7O3NIQUhVLHdCQUF3QjswR0FBeEIsd0JBQXdCLHFGQ1RyQyxxdkRBeUJNOzRGRGhCTyx3QkFBd0I7a0JBSnBDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLHdCQUF3QjtvQkFDbEMsV0FBVyxFQUFFLDBCQUEwQjtpQkFDeEM7O0FBT0QsdUJBQXVCLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLGtCQUFrQixFQUFFLHdCQUF3QixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgUXVlc3Rpb25Bbmd1bGFyIH0gZnJvbSBcIi4uL3F1ZXN0aW9uXCI7XG5pbXBvcnQgeyBRdWVzdGlvbkJvb2xlYW5Nb2RlbCB9IGZyb20gXCJzdXJ2ZXktY29yZVwiO1xuaW1wb3J0IHsgQW5ndWxhckNvbXBvbmVudEZhY3RvcnkgfSBmcm9tIFwiLi4vY29tcG9uZW50LWZhY3RvcnlcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBcInN2LW5nLWJvb2xlYW4tcXVlc3Rpb25cIixcbiAgdGVtcGxhdGVVcmw6IFwiLi9ib29sZWFuLmNvbXBvbmVudC5odG1sXCJcbn0pXG5leHBvcnQgY2xhc3MgQm9vbGVhblF1ZXN0aW9uQ29tcG9uZW50IGV4dGVuZHMgUXVlc3Rpb25Bbmd1bGFyPFF1ZXN0aW9uQm9vbGVhbk1vZGVsPiB7XG4gIG9uQ2hhbmdlKGV2ZW50OiBhbnkpIHtcbiAgICB0aGlzLm1vZGVsLmJvb2xlYW5WYWx1ZSA9IGV2ZW50LnRhcmdldC52YWx1ZTtcbiAgfVxufVxuXG5Bbmd1bGFyQ29tcG9uZW50RmFjdG9yeS5JbnN0YW5jZS5yZWdpc3RlckNvbXBvbmVudChcImJvb2xlYW4tcXVlc3Rpb25cIiwgQm9vbGVhblF1ZXN0aW9uQ29tcG9uZW50KTsiLCI8ZGl2IFtjbGFzc109XCJtb2RlbC5jc3NDbGFzc2VzLnJvb3RcIiAoa2V5ZG93bik9XCJtb2RlbC5vbktleURvd25Db3JlKCRldmVudClcIiAjY29udGVudEVsZW1lbnQ+XG4gICAgPGxhYmVsIFtjbGFzc109XCJtb2RlbC5nZXRJdGVtQ3NzKClcIj5cbiAgICAgIDxpbnB1dFxuICAgICAgICB0eXBlPVwiY2hlY2tib3hcIlxuICAgICAgICBbYXR0ci5uYW1lXT1cIm1vZGVsLm5hbWVcIiBbYXR0ci5pZF09XCJtb2RlbC5pbnB1dElkXCIgXG4gICAgICAgIFthdHRyLnJvbGVdPVwibW9kZWwuYTExeV9pbnB1dF9hcmlhUm9sZVwiXG4gICAgICAgIFthdHRyLmFyaWEtcmVxdWlyZWRdPVwibW9kZWwuYTExeV9pbnB1dF9hcmlhUmVxdWlyZWRcIlxuICAgICAgICBbYXR0ci5hcmlhLWxhYmVsXT1cIm1vZGVsLmExMXlfaW5wdXRfYXJpYUxhYmVsXCJcbiAgICAgICAgW2F0dHIuYXJpYS1sYWJlbGxlZGJ5XT1cIm1vZGVsLmExMXlfaW5wdXRfYXJpYUxhYmVsbGVkQnlcIlxuICAgICAgICBbYXR0ci5hcmlhLWRlc2NyaWJlZGJ5XT1cIm1vZGVsLmExMXlfaW5wdXRfYXJpYURlc2NyaWJlZEJ5XCJcbiAgICAgICAgW2F0dHIuYXJpYS1pbnZhbGlkXT1cIm1vZGVsLmExMXlfaW5wdXRfYXJpYUludmFsaWRcIlxuICAgICAgICBbYXR0ci5hcmlhLWVycm9ybWVzc2FnZV09XCJtb2RlbC5hMTF5X2lucHV0X2FyaWFFcnJvcm1lc3NhZ2VcIlxuICAgICAgICBbY2xhc3NdPVwibW9kZWwuY3NzQ2xhc3Nlcy5jb250cm9sXCIgW2Rpc2FibGVkXT1cIm1vZGVsLmlzRGlzYWJsZWRBdHRyXCIgW3JlYWRvbmx5XT1cIm1vZGVsLmlzUmVhZE9ubHlBdHRyXCIgIFtpbmRldGVybWluYXRlXT1cIm1vZGVsLmlzSW5kZXRlcm1pbmF0ZVwiIFt2YWx1ZV09XCJtb2RlbC5ib29sZWFuVmFsdWVcIiBbKG5nTW9kZWwpXT1cIm1vZGVsLmJvb2xlYW5WYWx1ZVwiIC8+XG4gICAgICA8ZGl2IFtjbGFzc109XCJtb2RlbC5jc3NDbGFzc2VzLnNsaWRlckdob3N0XCIgKGNsaWNrKT1cIm1vZGVsLm9uTGFiZWxDbGljaygkZXZlbnQsIG1vZGVsLnN3YXBPcmRlcilcIj5cbiAgICAgICAgPHNwYW4gW2NsYXNzXT1cIm1vZGVsLmdldExhYmVsQ3NzKG1vZGVsLnN3YXBPcmRlcilcIiBbbW9kZWxdPVwibW9kZWwubG9jTGFiZWxMZWZ0XCIgc3Ytbmctc3RyaW5nPjwvc3Bhbj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBbY2xhc3NdPVwibW9kZWwuY3NzQ2xhc3Nlcy5zd2l0Y2hcIiAoY2xpY2spPVwibW9kZWwub25Td2l0Y2hDbGlja01vZGVsKCRldmVudClcIj5cbiAgICAgICAgPHNwYW4gW2NsYXNzXT1cIm1vZGVsLmNzc0NsYXNzZXMuc2xpZGVyXCI+XG4gICAgICAgICAgICA8c3BhbiAqbmdJZj1cIm1vZGVsLmNzc0NsYXNzZXMuc2xpZGVyVGV4dCAmJiBtb2RlbC5pc0RldGVybWluYXRlZFwiIFtjbGFzc109XCJtb2RlbC5jc3NDbGFzc2VzLnNsaWRlclRleHRcIiBbbW9kZWxdPVwibW9kZWwuZ2V0Q2hlY2tlZExhYmVsKClcIiBzdi1uZy1zdHJpbmc+PC9zcGFuPlxuICAgICAgICA8L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgW2NsYXNzXT1cIm1vZGVsLmNzc0NsYXNzZXMuc2xpZGVyR2hvc3RcIiAoY2xpY2spPVwibW9kZWwub25MYWJlbENsaWNrKCRldmVudCwgIW1vZGVsLnN3YXBPcmRlcilcIj5cbiAgICAgICAgPHNwYW4gW2NsYXNzXT1cIm1vZGVsLmdldExhYmVsQ3NzKCFtb2RlbC5zd2FwT3JkZXIpXCIgW21vZGVsXT1cIm1vZGVsLmxvY0xhYmVsUmlnaHRcIiAgc3Ytbmctc3RyaW5nPjwvc3Bhbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvbGFiZWw+XG48L2Rpdj4iXX0=