import { Component, Input } from "@angular/core";
import { BaseAngular } from "../base-angular";
import * as i0 from "@angular/core";
import * as i1 from "./multipletextitem.component";
import * as i2 from "@angular/common";
export class MultipleTextRowComponent extends BaseAngular {
    getModel() {
        return this.model;
    }
    trackItemBy(_, cell) {
        return "item" + cell.item.editor.id;
    }
}
MultipleTextRowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: MultipleTextRowComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
MultipleTextRowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: MultipleTextRowComponent, selector: "sv-ng-multipletext-row", inputs: { question: "question", model: "model" }, usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n    <tr [class]=\"question.cssClasses.row\" *ngIf=\"model.isVisible\">\n        <ng-container *ngFor=\"let cell of model.cells; trackBy: trackItemBy\">\n            <td [class]=\"cell.className\" [question]=\"question\" [model]=\"cell\" sv-ng-multipletext-item></td>\n        </ng-container>\n    </tr>\n</ng-template>", styles: [":host{display:none}\n"], components: [{ type: i1.MultipleTextItemComponent, selector: "'[sv-ng-multipletext-item]'", inputs: ["question", "model"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: MultipleTextRowComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "sv-ng-multipletext-row",
                    templateUrl: "./multipletextrow.component.html",
                    styleUrls: ["../hide-host.scss"]
                }]
        }], propDecorators: { question: [{
                type: Input
            }], model: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGlwbGV0ZXh0cm93LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9xdWVzdGlvbnMvbXVsdGlwbGV0ZXh0cm93LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uL3NyYy9xdWVzdGlvbnMvbXVsdGlwbGV0ZXh0cm93LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7OztBQU85QyxNQUFNLE9BQU8sd0JBQXlCLFNBQVEsV0FBNEI7SUFHOUQsUUFBUTtRQUNoQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQztJQUNELFdBQVcsQ0FBRSxDQUFTLEVBQUUsSUFBc0I7UUFDNUMsT0FBTyxNQUFNLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDO0lBQ3RDLENBQUM7O3NIQVJVLHdCQUF3QjswR0FBeEIsd0JBQXdCLHVJQ1RyQyx5VkFNYzs0RkRHRCx3QkFBd0I7a0JBTHBDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLHdCQUF3QjtvQkFDbEMsV0FBVyxFQUFFLGtDQUFrQztvQkFDL0MsU0FBUyxFQUFFLENBQUMsbUJBQW1CLENBQUM7aUJBQ2pDOzhCQUVVLFFBQVE7c0JBQWhCLEtBQUs7Z0JBQ0csS0FBSztzQkFBYixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTXVsdGlwbGVUZXh0Q2VsbCwgTXVsdGlwbGVUZXh0SXRlbU1vZGVsLCBNdXRsaXBsZVRleHRSb3csIFF1ZXN0aW9uTXVsdGlwbGVUZXh0TW9kZWwsIFF1ZXN0aW9uVGV4dE1vZGVsIH0gZnJvbSBcInN1cnZleS1jb3JlXCI7XG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEJhc2VBbmd1bGFyIH0gZnJvbSBcIi4uL2Jhc2UtYW5ndWxhclwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwic3YtbmctbXVsdGlwbGV0ZXh0LXJvd1wiLFxuICB0ZW1wbGF0ZVVybDogXCIuL211bHRpcGxldGV4dHJvdy5jb21wb25lbnQuaHRtbFwiLFxuICBzdHlsZVVybHM6IFtcIi4uL2hpZGUtaG9zdC5zY3NzXCJdXG59KVxuZXhwb3J0IGNsYXNzIE11bHRpcGxlVGV4dFJvd0NvbXBvbmVudCBleHRlbmRzIEJhc2VBbmd1bGFyPE11dGxpcGxlVGV4dFJvdz4ge1xuICBASW5wdXQoKSBxdWVzdGlvbiE6IFF1ZXN0aW9uTXVsdGlwbGVUZXh0TW9kZWw7XG4gIEBJbnB1dCgpIG1vZGVsITogTXV0bGlwbGVUZXh0Um93O1xuICBwcm90ZWN0ZWQgZ2V0TW9kZWwoKTogTXV0bGlwbGVUZXh0Um93IHtcbiAgICByZXR1cm4gdGhpcy5tb2RlbDtcbiAgfVxuICB0cmFja0l0ZW1CeSAoXzogbnVtYmVyLCBjZWxsOiBNdWx0aXBsZVRleHRDZWxsKTogc3RyaW5nIHtcbiAgICByZXR1cm4gXCJpdGVtXCIgKyBjZWxsLml0ZW0uZWRpdG9yLmlkO1xuICB9XG59XG4iLCI8bmctdGVtcGxhdGUgI3RlbXBsYXRlPlxuICAgIDx0ciBbY2xhc3NdPVwicXVlc3Rpb24uY3NzQ2xhc3Nlcy5yb3dcIiAqbmdJZj1cIm1vZGVsLmlzVmlzaWJsZVwiPlxuICAgICAgICA8bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCBjZWxsIG9mIG1vZGVsLmNlbGxzOyB0cmFja0J5OiB0cmFja0l0ZW1CeVwiPlxuICAgICAgICAgICAgPHRkIFtjbGFzc109XCJjZWxsLmNsYXNzTmFtZVwiIFtxdWVzdGlvbl09XCJxdWVzdGlvblwiIFttb2RlbF09XCJjZWxsXCIgc3YtbmctbXVsdGlwbGV0ZXh0LWl0ZW0+PC90ZD5cbiAgICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgPC90cj5cbjwvbmctdGVtcGxhdGU+Il19